--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Enum;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Linq.Expressions.ExpressionType is
   
   type Kind_Clr is new NetFrameworkBase.System.Enum.Kind with null record;
   type Kind_Clr_Ptr is access Kind_Clr;
   type Kind_Clr_Array is array(Natural range<>) of Kind_Clr_Ptr;
   type Kind_Clr_Array_Ptr is access all Kind_Clr_Array;
   
   type Kind is (
      Add,
      AddChecked,
      And_x,
      AndAlso,
      ArrayLength,
      ArrayIndex,
      Call,
      Coalesce,
      Conditional,
      Constant_x,
      Convert,
      ConvertChecked,
      Divide,
      Equal,
      ExclusiveOr,
      GreaterThan,
      GreaterThanOrEqual,
      Invoke,
      Lambda,
      LeftShift,
      LessThan,
      LessThanOrEqual,
      ListInit,
      MemberAccess,
      MemberInit,
      Modulo,
      Multiply,
      MultiplyChecked,
      Negate,
      UnaryPlus,
      NegateChecked,
      New_x,
      NewArrayInit,
      NewArrayBounds,
      Not_x,
      NotEqual,
      Or_x,
      OrElse,
      Parameter,
      Power,
      Quote,
      RightShift,
      Subtract,
      SubtractChecked,
      TypeAs,
      TypeIs,
      Assign,
      Block,
      DebugInfo,
      Decrement,
      Dynamic,
      Default,
      Extension,
      Goto_x,
      Increment,
      Index,
      Label,
      RuntimeVariables,
      Loop_x,
      Switch,
      Throw,
      Try,
      Unbox,
      AddAssign,
      AndAssign,
      DivideAssign,
      ExclusiveOrAssign,
      LeftShiftAssign,
      ModuloAssign,
      MultiplyAssign,
      OrAssign,
      PowerAssign,
      RightShiftAssign,
      SubtractAssign,
      AddAssignChecked,
      MultiplyAssignChecked,
      SubtractAssignChecked,
      PreIncrementAssign,
      PreDecrementAssign,
      PostIncrementAssign,
      PostDecrementAssign,
      TypeEqual,
      OnesComplement,
      IsTrue,
      IsFalse
   );
   
   for Kind use (
      Add => 0,
      AddChecked => 1,
      And_x => 2,
      AndAlso => 3,
      ArrayLength => 4,
      ArrayIndex => 5,
      Call => 6,
      Coalesce => 7,
      Conditional => 8,
      Constant_x => 9,
      Convert => 10,
      ConvertChecked => 11,
      Divide => 12,
      Equal => 13,
      ExclusiveOr => 14,
      GreaterThan => 15,
      GreaterThanOrEqual => 16,
      Invoke => 17,
      Lambda => 18,
      LeftShift => 19,
      LessThan => 20,
      LessThanOrEqual => 21,
      ListInit => 22,
      MemberAccess => 23,
      MemberInit => 24,
      Modulo => 25,
      Multiply => 26,
      MultiplyChecked => 27,
      Negate => 28,
      UnaryPlus => 29,
      NegateChecked => 30,
      New_x => 31,
      NewArrayInit => 32,
      NewArrayBounds => 33,
      Not_x => 34,
      NotEqual => 35,
      Or_x => 36,
      OrElse => 37,
      Parameter => 38,
      Power => 39,
      Quote => 40,
      RightShift => 41,
      Subtract => 42,
      SubtractChecked => 43,
      TypeAs => 44,
      TypeIs => 45,
      Assign => 46,
      Block => 47,
      DebugInfo => 48,
      Decrement => 49,
      Dynamic => 50,
      Default => 51,
      Extension => 52,
      Goto_x => 53,
      Increment => 54,
      Index => 55,
      Label => 56,
      RuntimeVariables => 57,
      Loop_x => 58,
      Switch => 59,
      Throw => 60,
      Try => 61,
      Unbox => 62,
      AddAssign => 63,
      AndAssign => 64,
      DivideAssign => 65,
      ExclusiveOrAssign => 66,
      LeftShiftAssign => 67,
      ModuloAssign => 68,
      MultiplyAssign => 69,
      OrAssign => 70,
      PowerAssign => 71,
      RightShiftAssign => 72,
      SubtractAssign => 73,
      AddAssignChecked => 74,
      MultiplyAssignChecked => 75,
      SubtractAssignChecked => 76,
      PreIncrementAssign => 77,
      PreDecrementAssign => 78,
      PostIncrementAssign => 79,
      PostDecrementAssign => 80,
      TypeEqual => 81,
      OnesComplement => 82,
      IsTrue => 83,
      IsFalse => 84
   );
   
   for Kind'Size use 32;
   
   type Kind_Ptr is access Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
   function Instance return NetFrameworkWin32.IType_Ptr;
   
end;
