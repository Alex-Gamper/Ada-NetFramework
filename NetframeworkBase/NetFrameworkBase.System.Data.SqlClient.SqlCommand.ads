--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Data.Common.DbCommand;
limited with NetFrameworkBase.System.Data.UpdateRowSource;
limited with NetFrameworkBase.System.Data.SqlClient.SqlConnection;
limited with NetFrameworkBase.System.Data.Sql.SqlNotificationRequest;
limited with NetFrameworkBase.System.Data.SqlClient.SqlTransaction;
limited with NetFrameworkBase.System.Data.CommandType;
limited with NetFrameworkBase.System.Data.StatementCompletedEventHandler;
limited with NetFrameworkBase.System.AsyncCallback;
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.IAsyncResult;
limited with NetFrameworkBase.System.Data.CommandBehavior;
limited with NetFrameworkBase.System.Threading.CancellationToken;
limited with NetFrameworkBase.System.Data.SqlClient.SqlCommandColumnEncryptionSetting;
limited with NetFrameworkBase.System.Data.SqlClient.SqlParameterCollection;
limited with NetFrameworkBase.System.Data.SqlClient.SqlParameter;
limited with NetFrameworkBase.System.Xml.XmlReader;
limited with NetFrameworkBase.System.Data.SqlClient.SqlDataReader;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Data.SqlClient.SqlCommand is
   
   type Kind is new NetFrameworkBase.System.Data.Common.DbCommand.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function CommandText
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function CommandTimeout
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.Int32;
      
      function CommandType
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.Data.CommandType.Kind;
      
      function DesignTimeVisible
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure DesignTimeVisible
      (
         this : in out SqlCommand.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function UpdatedRowSource
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.Data.UpdateRowSource.Kind;
      
      procedure UpdatedRowSource
      (
         this : in out SqlCommand.Kind;
         value : NetFrameworkBase.System.Data.UpdateRowSource.Kind
      );
      
      function Connection
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlConnection.Kind_Ptr;
      
      procedure Connection
      (
         this : in out SqlCommand.Kind;
         value : NetFrameworkBase.System.Data.SqlClient.SqlConnection.Kind_Ptr
      );
      
      function NotificationAutoEnlist
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure NotificationAutoEnlist
      (
         this : in out SqlCommand.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function Notification
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.Data.Sql.SqlNotificationRequest.Kind_Ptr;
      
      procedure Notification
      (
         this : in out SqlCommand.Kind;
         value : NetFrameworkBase.System.Data.Sql.SqlNotificationRequest.Kind_Ptr
      );
      
      function Transaction
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlTransaction.Kind_Ptr;
      
      procedure Transaction
      (
         this : in out SqlCommand.Kind;
         value : NetFrameworkBase.System.Data.SqlClient.SqlTransaction.Kind_Ptr
      );
      
      procedure CommandText
      (
         this : in out SqlCommand.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function ColumnEncryptionSetting
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlCommandColumnEncryptionSetting.Kind;
      
      procedure CommandTimeout
      (
         this : in out SqlCommand.Kind;
         value : NetFrameworkBase.Int32
      );
      
      procedure ResetCommandTimeout
      (
         this : in out SqlCommand.Kind
      );
      
      procedure CommandType
      (
         this : in out SqlCommand.Kind;
         value : NetFrameworkBase.System.Data.CommandType.Kind
      );
      
      function Parameters
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlParameterCollection.Kind_Ptr;
      
      procedure add_StatementCompleted
      (
         this : in out SqlCommand.Kind;
         value : NetFrameworkBase.System.Data.StatementCompletedEventHandler.Kind_Ptr
      );
      
      procedure remove_StatementCompleted
      (
         this : in out SqlCommand.Kind;
         value : NetFrameworkBase.System.Data.StatementCompletedEventHandler.Kind_Ptr
      );
      
      procedure Prepare
      (
         this : in out SqlCommand.Kind
      );
      
      procedure Cancel
      (
         this : in out SqlCommand.Kind
      );
      
      function CreateParameter
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlParameter.Kind_Ptr;
      
      function ExecuteScalar
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ExecuteNonQuery
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.Int32;
      
      function BeginExecuteNonQuery
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function BeginExecuteNonQuery
      (
         this : in out SqlCommand.Kind;
         callback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         stateObject : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function EndExecuteNonQuery
      (
         this : in out SqlCommand.Kind;
         asyncResult : NetFrameworkBase.System.IAsyncResult.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function ExecuteXmlReader
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.Xml.XmlReader.Kind_Ptr;
      
      function BeginExecuteXmlReader
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function BeginExecuteXmlReader
      (
         this : in out SqlCommand.Kind;
         callback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         stateObject : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function EndExecuteXmlReader
      (
         this : in out SqlCommand.Kind;
         asyncResult : NetFrameworkBase.System.IAsyncResult.Kind_Ptr
      )
      return NetFrameworkBase.System.Xml.XmlReader.Kind_Ptr;
      
      function BeginExecuteReader
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function BeginExecuteReader
      (
         this : in out SqlCommand.Kind;
         callback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         stateObject : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function ExecuteReader
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlDataReader.Kind_Ptr;
      
      function ExecuteReader
      (
         this : in out SqlCommand.Kind;
         behavior : NetFrameworkBase.System.Data.CommandBehavior.Kind
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlDataReader.Kind_Ptr;
      
      function BeginExecuteReader
      (
         this : in out SqlCommand.Kind;
         behavior : NetFrameworkBase.System.Data.CommandBehavior.Kind
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function BeginExecuteReader
      (
         this : in out SqlCommand.Kind;
         callback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         stateObject : NetFrameworkBase.System.Object.Kind_Ptr; 
         behavior : NetFrameworkBase.System.Data.CommandBehavior.Kind
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function EndExecuteReader
      (
         this : in out SqlCommand.Kind;
         asyncResult : NetFrameworkBase.System.IAsyncResult.Kind_Ptr
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlDataReader.Kind_Ptr;
      
      function Clone
      (
         this : in out SqlCommand.Kind
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlCommand.Kind_Ptr;
      
      function Constructor return NetFrameworkBase.System.Data.SqlClient.SqlCommand.Kind_Ptr;
      
      function Constructor
      (
         cmdText : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlCommand.Kind_Ptr;
      
      function Constructor
      (
         cmdText : NetFrameworkBase.BSTR;
         connection : NetFrameworkBase.System.Data.SqlClient.SqlConnection.Kind_Ptr
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlCommand.Kind_Ptr;
      
      function Constructor
      (
         cmdText : NetFrameworkBase.BSTR;
         connection : NetFrameworkBase.System.Data.SqlClient.SqlConnection.Kind_Ptr;
         transaction : NetFrameworkBase.System.Data.SqlClient.SqlTransaction.Kind_Ptr
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlCommand.Kind_Ptr;
      
      function Constructor
      (
         cmdText : NetFrameworkBase.BSTR;
         connection : NetFrameworkBase.System.Data.SqlClient.SqlConnection.Kind_Ptr;
         transaction : NetFrameworkBase.System.Data.SqlClient.SqlTransaction.Kind_Ptr;
         columnEncryptionSetting : NetFrameworkBase.System.Data.SqlClient.SqlCommandColumnEncryptionSetting.Kind
      )
      return NetFrameworkBase.System.Data.SqlClient.SqlCommand.Kind_Ptr;
      
end;
