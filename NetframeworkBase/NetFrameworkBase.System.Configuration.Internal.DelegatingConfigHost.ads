--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Configuration.Internal.IInternalConfigRoot;
limited with NetFrameworkBase.System.Configuration.Internal.IInternalConfigRecord;
limited with NetFrameworkBase.System.Configuration.Internal.StreamChangeCallback;
limited with NetFrameworkBase.System.Configuration.ConfigurationAllowDefinition;
limited with NetFrameworkBase.System.Configuration.ConfigurationAllowExeDefinition;
limited with NetFrameworkBase.System.Configuration.Internal.IConfigErrorInfo;
limited with NetFrameworkBase.System.Security.PermissionSet;
limited with NetFrameworkBase.System.Configuration.ProtectedConfigurationProvider;
limited with NetFrameworkBase.System.Configuration.ProtectedConfigurationSection;
limited with NetFrameworkBase.System.Type_x;
limited with NetFrameworkBase.System.Xml.XmlNode;
limited with NetFrameworkBase.System.Configuration.ConfigurationBuilder;
limited with NetFrameworkBase.System.Configuration.ConfigurationSection;
limited with NetFrameworkBase.System.IO.Stream;
limited with NetFrameworkBase.System.IDisposable;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Configuration.Internal.DelegatingConfigHost is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      procedure Init
      (
         this : in out DelegatingConfigHost.Kind;
         configRoot : NetFrameworkBase.System.Configuration.Internal.IInternalConfigRoot.Kind_Ptr; 
         hostInitParams : NetFrameworkBase.System.Object.Kind_Array
      );
      
      procedure InitForConfiguration
      (
         this : in out DelegatingConfigHost.Kind;
         locationSubPath : NetFrameworkBase.BSTR_Ptr; 
         configPath : out NetFrameworkBase.BSTR; 
         locationConfigPath : out NetFrameworkBase.BSTR; 
         configRoot : NetFrameworkBase.System.Configuration.Internal.IInternalConfigRoot.Kind_Ptr; 
         hostInitConfigurationParams : NetFrameworkBase.System.Object.Kind_Array
      );
      
      function IsConfigRecordRequired
      (
         this : in out DelegatingConfigHost.Kind;
         configPath : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function IsInitDelayed
      (
         this : in out DelegatingConfigHost.Kind;
         configRecord : NetFrameworkBase.System.Configuration.Internal.IInternalConfigRecord.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      procedure RequireCompleteInit
      (
         this : in out DelegatingConfigHost.Kind;
         configRecord : NetFrameworkBase.System.Configuration.Internal.IInternalConfigRecord.Kind_Ptr
      );
      
      function IsSecondaryRoot
      (
         this : in out DelegatingConfigHost.Kind;
         configPath : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function GetStreamName
      (
         this : in out DelegatingConfigHost.Kind;
         configPath : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      function GetStreamNameForConfigSource
      (
         this : in out DelegatingConfigHost.Kind;
         streamName : NetFrameworkBase.BSTR; 
         configSource : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      function GetStreamVersion
      (
         this : in out DelegatingConfigHost.Kind;
         streamName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function OpenStreamForRead
      (
         this : in out DelegatingConfigHost.Kind;
         streamName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.IO.Stream.Kind_Ptr;
      
      function OpenStreamForRead
      (
         this : in out DelegatingConfigHost.Kind;
         streamName : NetFrameworkBase.BSTR; 
         assertPermissions : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.IO.Stream.Kind_Ptr;
      
      function OpenStreamForWrite
      (
         this : in out DelegatingConfigHost.Kind;
         streamName : NetFrameworkBase.BSTR; 
         templateStreamName : NetFrameworkBase.BSTR; 
         writeContext : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IO.Stream.Kind_Ptr;
      
      function OpenStreamForWrite
      (
         this : in out DelegatingConfigHost.Kind;
         streamName : NetFrameworkBase.BSTR; 
         templateStreamName : NetFrameworkBase.BSTR; 
         writeContext : NetFrameworkBase.System.Object.Kind_Ptr; 
         assertPermissions : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.IO.Stream.Kind_Ptr;
      
      procedure WriteCompleted
      (
         this : in out DelegatingConfigHost.Kind;
         streamName : NetFrameworkBase.BSTR; 
         success : NetFrameworkBase.Boolean; 
         writeContext : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      procedure WriteCompleted
      (
         this : in out DelegatingConfigHost.Kind;
         streamName : NetFrameworkBase.BSTR; 
         success : NetFrameworkBase.Boolean; 
         writeContext : NetFrameworkBase.System.Object.Kind_Ptr; 
         assertPermissions : NetFrameworkBase.Boolean
      );
      
      procedure DeleteStream
      (
         this : in out DelegatingConfigHost.Kind;
         streamName : NetFrameworkBase.BSTR
      );
      
      function IsFile
      (
         this : in out DelegatingConfigHost.Kind;
         streamName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function SupportsChangeNotifications
      (
         this : in out DelegatingConfigHost.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function StartMonitoringStreamForChanges
      (
         this : in out DelegatingConfigHost.Kind;
         streamName : NetFrameworkBase.BSTR; 
         callback : NetFrameworkBase.System.Configuration.Internal.StreamChangeCallback.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      procedure StopMonitoringStreamForChanges
      (
         this : in out DelegatingConfigHost.Kind;
         streamName : NetFrameworkBase.BSTR; 
         callback : NetFrameworkBase.System.Configuration.Internal.StreamChangeCallback.Kind_Ptr
      );
      
      function SupportsRefresh
      (
         this : in out DelegatingConfigHost.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function SupportsPath
      (
         this : in out DelegatingConfigHost.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function SupportsLocation
      (
         this : in out DelegatingConfigHost.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsAboveApplication
      (
         this : in out DelegatingConfigHost.Kind;
         configPath : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function IsDefinitionAllowed
      (
         this : in out DelegatingConfigHost.Kind;
         configPath : NetFrameworkBase.BSTR; 
         allowDefinition : NetFrameworkBase.System.Configuration.ConfigurationAllowDefinition.Kind; 
         allowExeDefinition : NetFrameworkBase.System.Configuration.ConfigurationAllowExeDefinition.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure VerifyDefinitionAllowed
      (
         this : in out DelegatingConfigHost.Kind;
         configPath : NetFrameworkBase.BSTR; 
         allowDefinition : NetFrameworkBase.System.Configuration.ConfigurationAllowDefinition.Kind; 
         allowExeDefinition : NetFrameworkBase.System.Configuration.ConfigurationAllowExeDefinition.Kind; 
         errorInfo : NetFrameworkBase.System.Configuration.Internal.IConfigErrorInfo.Kind_Ptr
      );
      
      function GetConfigPathFromLocationSubPath
      (
         this : in out DelegatingConfigHost.Kind;
         configPath : NetFrameworkBase.BSTR; 
         locationSubPath : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      function IsLocationApplicable
      (
         this : in out DelegatingConfigHost.Kind;
         configPath : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function IsTrustedConfigPath
      (
         this : in out DelegatingConfigHost.Kind;
         configPath : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function IsFullTrustSectionWithoutAptcaAllowed
      (
         this : in out DelegatingConfigHost.Kind;
         configRecord : NetFrameworkBase.System.Configuration.Internal.IInternalConfigRecord.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      procedure GetRestrictedPermissions
      (
         this : in out DelegatingConfigHost.Kind;
         configRecord : NetFrameworkBase.System.Configuration.Internal.IInternalConfigRecord.Kind_Ptr; 
         permissionSet : out NetFrameworkBase.System.Security.PermissionSet.Kind_Ptr; 
         isHostReady : out NetFrameworkBase.Boolean
      );
      
      function Impersonate
      (
         this : in out DelegatingConfigHost.Kind
      )
      return NetFrameworkBase.System.IDisposable.Kind_Ptr;
      
      function PrefetchAll
      (
         this : in out DelegatingConfigHost.Kind;
         configPath : NetFrameworkBase.BSTR; 
         streamName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function PrefetchSection
      (
         this : in out DelegatingConfigHost.Kind;
         sectionGroupName : NetFrameworkBase.BSTR; 
         sectionName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function CreateDeprecatedConfigContext
      (
         this : in out DelegatingConfigHost.Kind;
         configPath : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function CreateConfigurationContext
      (
         this : in out DelegatingConfigHost.Kind;
         configPath : NetFrameworkBase.BSTR; 
         locationSubPath : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function DecryptSection
      (
         this : in out DelegatingConfigHost.Kind;
         encryptedXml : NetFrameworkBase.BSTR; 
         protectionProvider : NetFrameworkBase.System.Configuration.ProtectedConfigurationProvider.Kind_Ptr; 
         protectedConfigSection : NetFrameworkBase.System.Configuration.ProtectedConfigurationSection.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function EncryptSection
      (
         this : in out DelegatingConfigHost.Kind;
         clearTextXml : NetFrameworkBase.BSTR; 
         protectionProvider : NetFrameworkBase.System.Configuration.ProtectedConfigurationProvider.Kind_Ptr; 
         protectedConfigSection : NetFrameworkBase.System.Configuration.ProtectedConfigurationSection.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function GetConfigType
      (
         this : in out DelegatingConfigHost.Kind;
         typeName : NetFrameworkBase.BSTR; 
         throwOnError : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function GetConfigTypeName
      (
         this : in out DelegatingConfigHost.Kind;
         t : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function IsRemote
      (
         this : in out DelegatingConfigHost.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function ProcessRawXml
      (
         this : in out DelegatingConfigHost.Kind;
         rawXml : NetFrameworkBase.System.Xml.XmlNode.Kind_Ptr; 
         builder : NetFrameworkBase.System.Configuration.ConfigurationBuilder.Kind_Ptr
      )
      return NetFrameworkBase.System.Xml.XmlNode.Kind_Ptr;
      
      function ProcessConfigurationSection
      (
         this : in out DelegatingConfigHost.Kind;
         configSection : NetFrameworkBase.System.Configuration.ConfigurationSection.Kind_Ptr; 
         builder : NetFrameworkBase.System.Configuration.ConfigurationBuilder.Kind_Ptr
      )
      return NetFrameworkBase.System.Configuration.ConfigurationSection.Kind_Ptr;
      
end;
