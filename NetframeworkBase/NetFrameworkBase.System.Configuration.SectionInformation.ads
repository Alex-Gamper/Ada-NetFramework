--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Configuration.OverrideMode;
limited with NetFrameworkBase.System.Configuration.ConfigurationAllowDefinition;
limited with NetFrameworkBase.System.Configuration.ConfigurationAllowExeDefinition;
limited with NetFrameworkBase.System.Configuration.ConfigurationBuilder;
limited with NetFrameworkBase.System.Configuration.ProtectedConfigurationProvider;
limited with NetFrameworkBase.System.Configuration.ConfigurationSection;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Configuration.SectionInformation is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function SectionName
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Name
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function AllowDefinition
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.System.Configuration.ConfigurationAllowDefinition.Kind;
      
      function AllowExeDefinition
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.System.Configuration.ConfigurationAllowExeDefinition.Kind;
      
      function OverrideModeDefault
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.System.Configuration.OverrideMode.Kind;
      
      function AllowLocation
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function AllowOverride
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure AllowOverride
      (
         this : in out SectionInformation.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function OverrideMode
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.System.Configuration.OverrideMode.Kind;
      
      procedure OverrideMode
      (
         this : in out SectionInformation.Kind;
         value : NetFrameworkBase.System.Configuration.OverrideMode.Kind
      );
      
      function OverrideModeEffective
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.System.Configuration.OverrideMode.Kind;
      
      function ConfigSource
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure ConfigSource
      (
         this : in out SectionInformation.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function InheritInChildApplications
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure InheritInChildApplications
      (
         this : in out SectionInformation.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function IsDeclared
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsDeclarationRequired
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure ForceDeclaration
      (
         this : in out SectionInformation.Kind
      );
      
      procedure ForceDeclaration
      (
         this : in out SectionInformation.Kind;
         force : NetFrameworkBase.Boolean
      );
      
      function IsLocked
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsProtected
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function ConfigurationBuilder
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.System.Configuration.ConfigurationBuilder.Kind_Ptr;
      
      function ProtectionProvider
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.System.Configuration.ProtectedConfigurationProvider.Kind_Ptr;
      
      procedure UnprotectSection
      (
         this : in out SectionInformation.Kind
      );
      
      function RestartOnExternalChanges
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function RequirePermission
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function Type_x
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function GetParentSection
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.System.Configuration.ConfigurationSection.Kind_Ptr;
      
      function GetRawXml
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure SetRawXml
      (
         this : in out SectionInformation.Kind;
         rawXml : NetFrameworkBase.BSTR
      );
      
      function ForceSave
      (
         this : in out SectionInformation.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure ForceSave
      (
         this : in out SectionInformation.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      procedure RevertToParent
      (
         this : in out SectionInformation.Kind
      );
      
      procedure AllowDefinition
      (
         this : in out SectionInformation.Kind;
         value : NetFrameworkBase.System.Configuration.ConfigurationAllowDefinition.Kind
      );
      
      procedure AllowExeDefinition
      (
         this : in out SectionInformation.Kind;
         value : NetFrameworkBase.System.Configuration.ConfigurationAllowExeDefinition.Kind
      );
      
      procedure OverrideModeDefault
      (
         this : in out SectionInformation.Kind;
         value : NetFrameworkBase.System.Configuration.OverrideMode.Kind
      );
      
      procedure AllowLocation
      (
         this : in out SectionInformation.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      procedure ProtectSection
      (
         this : in out SectionInformation.Kind;
         protectionProvider : NetFrameworkBase.BSTR
      );
      
      procedure RestartOnExternalChanges
      (
         this : in out SectionInformation.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      procedure RequirePermission
      (
         this : in out SectionInformation.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      procedure Type_x
      (
         this : in out SectionInformation.Kind;
         value : NetFrameworkBase.BSTR
      );
      
end;
