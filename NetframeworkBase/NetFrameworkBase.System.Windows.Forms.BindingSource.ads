--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.ComponentModel.Component;
limited with NetFrameworkBase.System.ComponentModel.ListChangedEventHandler;
limited with NetFrameworkBase.System.Array_x;
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.ComponentModel.PropertyDescriptor;
limited with NetFrameworkBase.System.ComponentModel.ListSortDirection;
limited with NetFrameworkBase.System.ComponentModel.ListSortDescriptionCollection;
limited with NetFrameworkBase.System.ComponentModel.AddingNewEventHandler;
limited with NetFrameworkBase.System.Windows.Forms.BindingCompleteEventHandler;
limited with NetFrameworkBase.System.Windows.Forms.BindingManagerDataErrorEventHandler;
limited with NetFrameworkBase.System.EventHandler;
limited with NetFrameworkBase.System.ComponentModel.IContainer;
limited with NetFrameworkBase.System.Windows.Forms.CurrencyManager;
limited with NetFrameworkBase.System.Collections.IEnumerator;
limited with NetFrameworkBase.System.ComponentModel.PropertyDescriptorCollection;
limited with NetFrameworkBase.System.Collections.IList;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Windows.Forms.BindingSource is
   
   type Kind is new NetFrameworkBase.System.ComponentModel.Component.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function CurrencyManager
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.CurrencyManager.Kind_Ptr;
      
      procedure add_ListChanged
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.ComponentModel.ListChangedEventHandler.Kind_Ptr
      );
      
      procedure remove_ListChanged
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.ComponentModel.ListChangedEventHandler.Kind_Ptr
      );
      
      procedure ResetAllowNew
      (
         this : in out BindingSource.Kind
      );
      
      function GetEnumerator
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.System.Collections.IEnumerator.Kind_Ptr;
      
      procedure CopyTo
      (
         this : in out BindingSource.Kind;
         arr : NetFrameworkBase.System.Array_x.Kind_Ptr; 
         index : NetFrameworkBase.Int32
      );
      
      function Count
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Int32;
      
      function IsSynchronized
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function SyncRoot
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function Add
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      procedure Clear
      (
         this : in out BindingSource.Kind
      );
      
      function Contains
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function IndexOf
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      procedure Insert
      (
         this : in out BindingSource.Kind;
         index : NetFrameworkBase.Int32; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      procedure Remove
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      procedure RemoveAt
      (
         this : in out BindingSource.Kind;
         index : NetFrameworkBase.Int32
      );
      
      function Item
      (
         this : in out BindingSource.Kind;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      procedure Item
      (
         this : in out BindingSource.Kind;
         index : NetFrameworkBase.Int32; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      function IsFixedSize
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsReadOnly
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function GetListName
      (
         this : in out BindingSource.Kind;
         listAccessors : NetFrameworkBase.System.ComponentModel.PropertyDescriptor.Kind_Array
      )
      return NetFrameworkBase.BSTR;
      
      function GetItemProperties
      (
         this : in out BindingSource.Kind;
         listAccessors : NetFrameworkBase.System.ComponentModel.PropertyDescriptor.Kind_Array
      )
      return NetFrameworkBase.System.ComponentModel.PropertyDescriptorCollection.Kind_Ptr;
      
      function AllowEdit
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function AllowNew
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure AllowNew
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function AllowRemove
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function SupportsChangeNotification
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function SupportsSearching
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function SupportsSorting
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsSorted
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function SortProperty
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.System.ComponentModel.PropertyDescriptor.Kind_Ptr;
      
      function SortDirection
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.System.ComponentModel.ListSortDirection.Kind;
      
      procedure ApplySort
      (
         this : in out BindingSource.Kind;
         property : NetFrameworkBase.System.ComponentModel.PropertyDescriptor.Kind_Ptr; 
         sort : NetFrameworkBase.System.ComponentModel.ListSortDirection.Kind
      );
      
      function Find
      (
         this : in out BindingSource.Kind;
         prop : NetFrameworkBase.System.ComponentModel.PropertyDescriptor.Kind_Ptr; 
         key : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      procedure RemoveSort
      (
         this : in out BindingSource.Kind
      );
      
      procedure ApplySort
      (
         this : in out BindingSource.Kind;
         sorts : NetFrameworkBase.System.ComponentModel.ListSortDescriptionCollection.Kind_Ptr
      );
      
      function SortDescriptions
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.System.ComponentModel.ListSortDescriptionCollection.Kind_Ptr;
      
      function Filter
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Filter
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      procedure RemoveFilter
      (
         this : in out BindingSource.Kind
      );
      
      function SupportsAdvancedSorting
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function SupportsFiltering
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function GetRelatedCurrencyManager
      (
         this : in out BindingSource.Kind;
         dataMember : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Windows.Forms.CurrencyManager.Kind_Ptr;
      
      function Current
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function DataMember
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure DataMember
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function DataSource
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      procedure DataSource
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      function IsBindingSuspended
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function List
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.System.Collections.IList.Kind_Ptr;
      
      function Position
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure Position
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function RaiseListChangedEvents
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure RaiseListChangedEvents
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function Sort
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Sort
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      procedure add_AddingNew
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.ComponentModel.AddingNewEventHandler.Kind_Ptr
      );
      
      procedure remove_AddingNew
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.ComponentModel.AddingNewEventHandler.Kind_Ptr
      );
      
      procedure add_BindingComplete
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.Windows.Forms.BindingCompleteEventHandler.Kind_Ptr
      );
      
      procedure remove_BindingComplete
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.Windows.Forms.BindingCompleteEventHandler.Kind_Ptr
      );
      
      procedure add_DataError
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.Windows.Forms.BindingManagerDataErrorEventHandler.Kind_Ptr
      );
      
      procedure remove_DataError
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.Windows.Forms.BindingManagerDataErrorEventHandler.Kind_Ptr
      );
      
      procedure add_DataSourceChanged
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_DataSourceChanged
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure add_DataMemberChanged
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_DataMemberChanged
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure add_CurrentChanged
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_CurrentChanged
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure add_CurrentItemChanged
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_CurrentItemChanged
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure add_PositionChanged
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_PositionChanged
      (
         this : in out BindingSource.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure CancelEdit
      (
         this : in out BindingSource.Kind
      );
      
      procedure EndEdit
      (
         this : in out BindingSource.Kind
      );
      
      function Find
      (
         this : in out BindingSource.Kind;
         propertyName : NetFrameworkBase.BSTR; 
         key : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      procedure MoveFirst
      (
         this : in out BindingSource.Kind
      );
      
      procedure MoveLast
      (
         this : in out BindingSource.Kind
      );
      
      procedure MoveNext
      (
         this : in out BindingSource.Kind
      );
      
      procedure MovePrevious
      (
         this : in out BindingSource.Kind
      );
      
      procedure RemoveCurrent
      (
         this : in out BindingSource.Kind
      );
      
      procedure ResetBindings
      (
         this : in out BindingSource.Kind;
         metadataChanged : NetFrameworkBase.Boolean
      );
      
      procedure ResetCurrentItem
      (
         this : in out BindingSource.Kind
      );
      
      procedure ResetItem
      (
         this : in out BindingSource.Kind;
         itemIndex : NetFrameworkBase.Int32
      );
      
      procedure ResumeBinding
      (
         this : in out BindingSource.Kind
      );
      
      procedure SuspendBinding
      (
         this : in out BindingSource.Kind
      );
      
      function AddNew
      (
         this : in out BindingSource.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function Constructor return NetFrameworkBase.System.Windows.Forms.BindingSource.Kind_Ptr;
      
      function Constructor
      (
         dataSource : NetFrameworkBase.System.Object.Kind_Ptr;
         dataMember : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Windows.Forms.BindingSource.Kind_Ptr;
      
      function Constructor
      (
         container : NetFrameworkBase.System.ComponentModel.IContainer.Kind_Ptr
      )
      return NetFrameworkBase.System.Windows.Forms.BindingSource.Kind_Ptr;
      
end;
