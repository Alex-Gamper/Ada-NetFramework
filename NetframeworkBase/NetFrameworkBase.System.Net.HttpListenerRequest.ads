--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.AsyncCallback;
limited with NetFrameworkBase.System.IAsyncResult;
limited with NetFrameworkBase.System.Guid;
limited with NetFrameworkBase.System.Collections.Specialized.NameValueCollection;
limited with NetFrameworkBase.System.Uri;
limited with NetFrameworkBase.System.Net.TransportContext;
limited with NetFrameworkBase.System.Net.CookieCollection;
limited with NetFrameworkBase.System.Version;
limited with NetFrameworkBase.System.Net.IPEndPoint;
limited with NetFrameworkBase.System.Text.Encoding;
limited with NetFrameworkBase.System.IO.Stream;
limited with NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Net.HttpListenerRequest is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function RequestTraceIdentifier
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.Guid.Kind_Ptr;
      
      function AcceptTypes
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.BSTR_Array;
      
      function ContentType
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Headers
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.Collections.Specialized.NameValueCollection.Kind_Ptr;
      
      function HttpMethod
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function IsAuthenticated
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsLocal
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsSecureConnection
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function QueryString
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.Collections.Specialized.NameValueCollection.Kind_Ptr;
      
      function RawUrl
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function ServiceName
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Url
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.Uri.Kind_Ptr;
      
      function UrlReferrer
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.Uri.Kind_Ptr;
      
      function UserAgent
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function UserHostAddress
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function UserHostName
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function UserLanguages
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.BSTR_Array;
      
      function TransportContext
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.Net.TransportContext.Kind_Ptr;
      
      function Cookies
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.Net.CookieCollection.Kind_Ptr;
      
      function ProtocolVersion
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.Version.Kind_Ptr;
      
      function HasEntityBody
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function RemoteEndPoint
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.Net.IPEndPoint.Kind_Ptr;
      
      function LocalEndPoint
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.Net.IPEndPoint.Kind_Ptr;
      
      function ContentEncoding
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.Text.Encoding.Kind_Ptr;
      
      function ContentLength64
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.Int64;
      
      function InputStream
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.IO.Stream.Kind_Ptr;
      
      function IsWebSocketRequest
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function ClientCertificateError
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.Int32;
      
      function GetClientCertificate
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function BeginGetClientCertificate
      (
         this : in out HttpListenerRequest.Kind;
         requestCallback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         state : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function EndGetClientCertificate
      (
         this : in out HttpListenerRequest.Kind;
         asyncResult : NetFrameworkBase.System.IAsyncResult.Kind_Ptr
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function KeepAlive
      (
         this : in out HttpListenerRequest.Kind
      )
      return NetFrameworkBase.Boolean;
      
end;
