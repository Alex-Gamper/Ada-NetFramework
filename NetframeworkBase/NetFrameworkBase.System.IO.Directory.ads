--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Security.AccessControl.DirectorySecurity;
limited with NetFrameworkBase.System.Security.AccessControl.AccessControlSections;
limited with NetFrameworkBase.System.IO.SearchOption;
limited with NetFrameworkBase.System.IO.DirectoryInfo;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.IO.Directory is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function GetParent
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.IO.DirectoryInfo.Kind_Ptr;
      
      function CreateDirectory
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.IO.DirectoryInfo.Kind_Ptr;
      
      function CreateDirectory
      (
         path : NetFrameworkBase.BSTR; 
         directorySecurity : NetFrameworkBase.System.Security.AccessControl.DirectorySecurity.Kind_Ptr
      )
      return NetFrameworkBase.System.IO.DirectoryInfo.Kind_Ptr;
      
      function Exists
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      procedure SetCreationTime
      (
         path : NetFrameworkBase.BSTR; 
         creationTime : NetFrameworkBase.Date
      )
      ;
      
      procedure SetCreationTimeUtc
      (
         path : NetFrameworkBase.BSTR; 
         creationTimeUtc : NetFrameworkBase.Date
      )
      ;
      
      function GetCreationTime
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Date;
      
      function GetCreationTimeUtc
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Date;
      
      procedure SetLastWriteTime
      (
         path : NetFrameworkBase.BSTR; 
         lastWriteTime : NetFrameworkBase.Date
      )
      ;
      
      procedure SetLastWriteTimeUtc
      (
         path : NetFrameworkBase.BSTR; 
         lastWriteTimeUtc : NetFrameworkBase.Date
      )
      ;
      
      function GetLastWriteTime
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Date;
      
      function GetLastWriteTimeUtc
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Date;
      
      procedure SetLastAccessTime
      (
         path : NetFrameworkBase.BSTR; 
         lastAccessTime : NetFrameworkBase.Date
      )
      ;
      
      procedure SetLastAccessTimeUtc
      (
         path : NetFrameworkBase.BSTR; 
         lastAccessTimeUtc : NetFrameworkBase.Date
      )
      ;
      
      function GetLastAccessTime
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Date;
      
      function GetLastAccessTimeUtc
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Date;
      
      function GetAccessControl
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Security.AccessControl.DirectorySecurity.Kind_Ptr;
      
      function GetAccessControl
      (
         path : NetFrameworkBase.BSTR; 
         includeSections : NetFrameworkBase.System.Security.AccessControl.AccessControlSections.Kind
      )
      return NetFrameworkBase.System.Security.AccessControl.DirectorySecurity.Kind_Ptr;
      
      procedure SetAccessControl
      (
         path : NetFrameworkBase.BSTR; 
         directorySecurity : NetFrameworkBase.System.Security.AccessControl.DirectorySecurity.Kind_Ptr
      )
      ;
      
      function GetFiles
      (
         path : NetFrameworkBase.BSTR; 
         searchPattern : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR_Array;
      
      function GetFiles
      (
         path : NetFrameworkBase.BSTR; 
         searchPattern : NetFrameworkBase.BSTR; 
         searchOption : NetFrameworkBase.System.IO.SearchOption.Kind
      )
      return NetFrameworkBase.BSTR_Array;
      
      function GetDirectories
      (
         path : NetFrameworkBase.BSTR; 
         searchPattern : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR_Array;
      
      function GetDirectories
      (
         path : NetFrameworkBase.BSTR; 
         searchPattern : NetFrameworkBase.BSTR; 
         searchOption : NetFrameworkBase.System.IO.SearchOption.Kind
      )
      return NetFrameworkBase.BSTR_Array;
      
      function GetFileSystemEntries
      (
         path : NetFrameworkBase.BSTR; 
         searchPattern : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR_Array;
      
      function GetFileSystemEntries
      (
         path : NetFrameworkBase.BSTR; 
         searchPattern : NetFrameworkBase.BSTR; 
         searchOption : NetFrameworkBase.System.IO.SearchOption.Kind
      )
      return NetFrameworkBase.BSTR_Array;
      
      function GetLogicalDrives
      return NetFrameworkBase.BSTR_Array;
      
      function GetDirectoryRoot
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      function GetCurrentDirectory
      return NetFrameworkBase.BSTR;
      
      procedure SetCurrentDirectory
      (
         path : NetFrameworkBase.BSTR
      )
      ;
      
      procedure Move
      (
         sourceDirName : NetFrameworkBase.BSTR; 
         destDirName : NetFrameworkBase.BSTR
      )
      ;
      
      procedure Delete
      (
         path : NetFrameworkBase.BSTR
      )
      ;
      
      procedure Delete
      (
         path : NetFrameworkBase.BSTR; 
         recursive : NetFrameworkBase.Boolean
      )
      ;
      
      function GetFileSystemEntries
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR_Array;
      
      function GetFiles
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR_Array;
      
      function GetDirectories
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR_Array;
      
end;
