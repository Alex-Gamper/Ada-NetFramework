--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Drawing.Design.ToolboxComponentsCreatedEventHandler;
limited with NetFrameworkBase.System.Drawing.Design.ToolboxComponentsCreatingEventHandler;
limited with NetFrameworkBase.System.ComponentModel.Design.IDesignerHost;
limited with NetFrameworkBase.System.Collections.IDictionary;
limited with NetFrameworkBase.System.Reflection.AssemblyName;
limited with NetFrameworkBase.System.Drawing.Bitmap;
limited with NetFrameworkBase.System.Collections.ICollection;
limited with NetFrameworkBase.System.Type_x;
limited with NetFrameworkBase.System.ComponentModel.IComponent;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Drawing.Design.ToolboxItem is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function Locked
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function Properties
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.System.Collections.IDictionary.Kind_Ptr;
      
      function Version
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure add_ComponentsCreated
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.System.Drawing.Design.ToolboxComponentsCreatedEventHandler.Kind_Ptr
      );
      
      procedure remove_ComponentsCreated
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.System.Drawing.Design.ToolboxComponentsCreatedEventHandler.Kind_Ptr
      );
      
      procedure add_ComponentsCreating
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.System.Drawing.Design.ToolboxComponentsCreatingEventHandler.Kind_Ptr
      );
      
      procedure remove_ComponentsCreating
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.System.Drawing.Design.ToolboxComponentsCreatingEventHandler.Kind_Ptr
      );
      
      function CreateComponents
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.System.ComponentModel.IComponent.Kind_Array;
      
      function CreateComponents
      (
         this : in out ToolboxItem.Kind;
         host : NetFrameworkBase.System.ComponentModel.Design.IDesignerHost.Kind_Ptr
      )
      return NetFrameworkBase.System.ComponentModel.IComponent.Kind_Array;
      
      function CreateComponents
      (
         this : in out ToolboxItem.Kind;
         host : NetFrameworkBase.System.ComponentModel.Design.IDesignerHost.Kind_Ptr; 
         defaultValues : NetFrameworkBase.System.Collections.IDictionary.Kind_Ptr
      )
      return NetFrameworkBase.System.ComponentModel.IComponent.Kind_Array;
      
      function Equals
      (
         this : in out ToolboxItem.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetHashCode
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.Int32;
      
      function GetType
      (
         this : in out ToolboxItem.Kind;
         host : NetFrameworkBase.System.ComponentModel.Design.IDesignerHost.Kind_Ptr
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      procedure Lock
      (
         this : in out ToolboxItem.Kind
      );
      
      function ToString
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function AssemblyName
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.System.Reflection.AssemblyName.Kind_Ptr;
      
      procedure AssemblyName
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.System.Reflection.AssemblyName.Kind_Ptr
      );
      
      function DependentAssemblies
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.System.Reflection.AssemblyName.Kind_Array;
      
      procedure DependentAssemblies
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.System.Reflection.AssemblyName.Kind_Array
      );
      
      function Bitmap
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.System.Drawing.Bitmap.Kind_Ptr;
      
      procedure Bitmap
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.System.Drawing.Bitmap.Kind_Ptr
      );
      
      function OriginalBitmap
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.System.Drawing.Bitmap.Kind_Ptr;
      
      procedure OriginalBitmap
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.System.Drawing.Bitmap.Kind_Ptr
      );
      
      function Company
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Company
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function ComponentType
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Description
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Description
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function DisplayName
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure DisplayName
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function Filter
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.System.Collections.ICollection.Kind_Ptr;
      
      procedure Filter
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.System.Collections.ICollection.Kind_Ptr
      );
      
      function IsTransient
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure IsTransient
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function TypeName
      (
         this : in out ToolboxItem.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure TypeName
      (
         this : in out ToolboxItem.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      procedure Initialize
      (
         this : in out ToolboxItem.Kind;
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      );
      
      function Constructor return NetFrameworkBase.System.Drawing.Design.ToolboxItem.Kind_Ptr;
      
      function Constructor
      (
         toolType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Drawing.Design.ToolboxItem.Kind_Ptr;
      
end;
