--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Linq.Expressions.ExpressionType;
limited with NetFrameworkBase.System.Reflection.MethodInfo;
limited with NetFrameworkBase.System.Linq.Expressions.LambdaExpression;
limited with NetFrameworkBase.System.Type_x;
limited with NetFrameworkBase.System.Linq.Expressions.ParameterExpression;
limited with NetFrameworkBase.System.Linq.Expressions.SymbolDocumentInfo;
limited with NetFrameworkBase.System.Runtime.CompilerServices.CallSiteBinder;
limited with NetFrameworkBase.System.Linq.Expressions.LabelTarget;
limited with NetFrameworkBase.System.Reflection.PropertyInfo;
limited with NetFrameworkBase.System.Linq.Expressions.NewExpression;
limited with NetFrameworkBase.System.Linq.Expressions.ElementInit;
limited with NetFrameworkBase.System.Reflection.MemberInfo;
limited with NetFrameworkBase.System.Linq.Expressions.MemberBinding;
limited with NetFrameworkBase.System.Reflection.ConstructorInfo;
limited with NetFrameworkBase.System.Linq.Expressions.SwitchCase;
limited with NetFrameworkBase.System.Guid;
limited with NetFrameworkBase.System.Linq.Expressions.CatchBlock;
limited with NetFrameworkBase.System.Linq.Expressions.GotoExpressionKind;
limited with NetFrameworkBase.System.Reflection.FieldInfo;
limited with NetFrameworkBase.System.Linq.Expressions.BinaryExpression;
limited with NetFrameworkBase.System.Linq.Expressions.BlockExpression;
limited with NetFrameworkBase.System.Linq.Expressions.ConditionalExpression;
limited with NetFrameworkBase.System.Linq.Expressions.ConstantExpression;
limited with NetFrameworkBase.System.Linq.Expressions.DebugInfoExpression;
limited with NetFrameworkBase.System.Linq.Expressions.DefaultExpression;
limited with NetFrameworkBase.System.Linq.Expressions.DynamicExpression;
limited with NetFrameworkBase.System.Linq.Expressions.GotoExpression;
limited with NetFrameworkBase.System.Linq.Expressions.IndexExpression;
limited with NetFrameworkBase.System.Linq.Expressions.InvocationExpression;
limited with NetFrameworkBase.System.Linq.Expressions.LabelExpression;
limited with NetFrameworkBase.System.Linq.Expressions.ListInitExpression;
limited with NetFrameworkBase.System.Linq.Expressions.LoopExpression;
limited with NetFrameworkBase.System.Linq.Expressions.MemberAssignment;
limited with NetFrameworkBase.System.Linq.Expressions.MemberExpression;
limited with NetFrameworkBase.System.Linq.Expressions.MemberInitExpression;
limited with NetFrameworkBase.System.Linq.Expressions.MemberListBinding;
limited with NetFrameworkBase.System.Linq.Expressions.MemberMemberBinding;
limited with NetFrameworkBase.System.Linq.Expressions.MethodCallExpression;
limited with NetFrameworkBase.System.Linq.Expressions.NewArrayExpression;
limited with NetFrameworkBase.System.Linq.Expressions.RuntimeVariablesExpression;
limited with NetFrameworkBase.System.Linq.Expressions.SwitchExpression;
limited with NetFrameworkBase.System.Linq.Expressions.TryExpression;
limited with NetFrameworkBase.System.Linq.Expressions.UnaryExpression;
limited with NetFrameworkBase.System.Linq.Expressions.TypeBinaryExpression;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Linq.Expressions.Expression is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function MakeBinary
      (
         binaryType : NetFrameworkBase.System.Linq.Expressions.ExpressionType.Kind; 
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function MakeBinary
      (
         binaryType : NetFrameworkBase.System.Linq.Expressions.ExpressionType.Kind; 
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         liftToNull : NetFrameworkBase.Boolean; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function MakeBinary
      (
         binaryType : NetFrameworkBase.System.Linq.Expressions.ExpressionType.Kind; 
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         liftToNull : NetFrameworkBase.Boolean; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Equal
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function GreaterThan
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function LessThanOrEqual
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AndAlso
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function OrElse
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Coalesce
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Add
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AddAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AddAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AddAssignChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AddAssignChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AddChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Subtract
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function SubtractAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function SubtractAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function SubtractAssignChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function SubtractAssignChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function SubtractChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Divide
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function DivideAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function DivideAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Modulo
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function ModuloAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function ModuloAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Multiply
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function MultiplyAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function MultiplyAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function MultiplyAssignChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function MultiplyAssignChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function MultiplyChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function LeftShift
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function LeftShiftAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function LeftShiftAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function RightShift
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function RightShiftAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function RightShiftAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function And_x
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AndAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AndAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Or_x
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function OrAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function OrAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function ExclusiveOr
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function ExclusiveOrAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function ExclusiveOrAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Power
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function PowerAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function PowerAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Block
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         expressions : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.BlockExpression.Kind_Ptr;
      
      function Catch
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.CatchBlock.Kind_Ptr;
      
      function Catch
      (
         variable : NetFrameworkBase.System.Linq.Expressions.ParameterExpression.Kind_Ptr; 
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.CatchBlock.Kind_Ptr;
      
      function Catch
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         filter : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.CatchBlock.Kind_Ptr;
      
      function Catch
      (
         variable : NetFrameworkBase.System.Linq.Expressions.ParameterExpression.Kind_Ptr; 
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         filter : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.CatchBlock.Kind_Ptr;
      
      function IfThen
      (
         test : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         ifTrue : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.ConditionalExpression.Kind_Ptr;
      
      function IfThenElse
      (
         test : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         ifTrue : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         ifFalse : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.ConditionalExpression.Kind_Ptr;
      
      function Constant_x
      (
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.ConstantExpression.Kind_Ptr;
      
      function Constant_x
      (
         value : NetFrameworkBase.System.Object.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.ConstantExpression.Kind_Ptr;
      
      function DebugInfo
      (
         document : NetFrameworkBase.System.Linq.Expressions.SymbolDocumentInfo.Kind_Ptr; 
         startLine : NetFrameworkBase.Int32; 
         startColumn : NetFrameworkBase.Int32; 
         endLine : NetFrameworkBase.Int32; 
         endColumn : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Linq.Expressions.DebugInfoExpression.Kind_Ptr;
      
      function ClearDebugInfo
      (
         document : NetFrameworkBase.System.Linq.Expressions.SymbolDocumentInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.DebugInfoExpression.Kind_Ptr;
      
      function Empty
      return NetFrameworkBase.System.Linq.Expressions.DefaultExpression.Kind_Ptr;
      
      function Default
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.DefaultExpression.Kind_Ptr;
      
      function MakeDynamic
      (
         delegateType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         binder : NetFrameworkBase.System.Runtime.CompilerServices.CallSiteBinder.Kind_Ptr; 
         arguments : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.DynamicExpression.Kind_Ptr;
      
      function MakeDynamic
      (
         delegateType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         binder : NetFrameworkBase.System.Runtime.CompilerServices.CallSiteBinder.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.DynamicExpression.Kind_Ptr;
      
      function MakeDynamic
      (
         delegateType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         binder : NetFrameworkBase.System.Runtime.CompilerServices.CallSiteBinder.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.DynamicExpression.Kind_Ptr;
      
      function MakeDynamic
      (
         delegateType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         binder : NetFrameworkBase.System.Runtime.CompilerServices.CallSiteBinder.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg2 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.DynamicExpression.Kind_Ptr;
      
      function MakeDynamic
      (
         delegateType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         binder : NetFrameworkBase.System.Runtime.CompilerServices.CallSiteBinder.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg2 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg3 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.DynamicExpression.Kind_Ptr;
      
      function Dynamic
      (
         binder : NetFrameworkBase.System.Runtime.CompilerServices.CallSiteBinder.Kind_Ptr; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         arguments : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.DynamicExpression.Kind_Ptr;
      
      function ElementInit
      (
         addMethod : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         arguments : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.ElementInit.Kind_Ptr;
      
      function NodeType
      (
         this : in out Expression.Kind
      )
      return NetFrameworkBase.System.Linq.Expressions.ExpressionType.Kind;
      
      function Type_x
      (
         this : in out Expression.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function CanReduce
      (
         this : in out Expression.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function Reduce
      (
         this : in out Expression.Kind
      )
      return NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr;
      
      function ReduceAndCheck
      (
         this : in out Expression.Kind
      )
      return NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr;
      
      function ReduceExtensions
      (
         this : in out Expression.Kind
      )
      return NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr;
      
      function ToString
      (
         this : in out Expression.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Break
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Break
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         value : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Break
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Break
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         value : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Continue
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Continue
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Return_x
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Return_x
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Return_x
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         value : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Return_x
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         value : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Goto_x
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Goto_x
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Goto_x
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         value : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Goto_x
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         value : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function ArrayAccess
      (
         array_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         indexes : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.IndexExpression.Kind_Ptr;
      
      function Property
      (
         instance_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         indexer : NetFrameworkBase.System.Reflection.PropertyInfo.Kind_Ptr; 
         arguments : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.IndexExpression.Kind_Ptr;
      
      function Invoke
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arguments : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.InvocationExpression.Kind_Ptr;
      
      function Label
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.LabelExpression.Kind_Ptr;
      
      function Label
      return NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr;
      
      function Label
      (
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr;
      
      function Label
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr;
      
      function Label
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr;
      
      function Lambda
      (
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         parameters : NetFrameworkBase.System.Linq.Expressions.ParameterExpression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr;
      
      function Lambda
      (
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         tailCall : NetFrameworkBase.Boolean; 
         parameters : NetFrameworkBase.System.Linq.Expressions.ParameterExpression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr;
      
      function Lambda
      (
         delegateType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         parameters : NetFrameworkBase.System.Linq.Expressions.ParameterExpression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr;
      
      function Lambda
      (
         delegateType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         tailCall : NetFrameworkBase.Boolean; 
         parameters : NetFrameworkBase.System.Linq.Expressions.ParameterExpression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr;
      
      function GetFuncType
      (
         typeArgs : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function TryGetFuncType
      (
         typeArgs : NetFrameworkBase.System.Type_x.Kind_Array; 
         funcType : out NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetActionType
      (
         typeArgs : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function TryGetActionType
      (
         typeArgs : NetFrameworkBase.System.Type_x.Kind_Array; 
         actionType : out NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function ListInit
      (
         newExpression : NetFrameworkBase.System.Linq.Expressions.NewExpression.Kind_Ptr; 
         initializers : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.ListInitExpression.Kind_Ptr;
      
      function ListInit
      (
         newExpression : NetFrameworkBase.System.Linq.Expressions.NewExpression.Kind_Ptr; 
         addMethod : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         initializers : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.ListInitExpression.Kind_Ptr;
      
      function ListInit
      (
         newExpression : NetFrameworkBase.System.Linq.Expressions.NewExpression.Kind_Ptr; 
         initializers : NetFrameworkBase.System.Linq.Expressions.ElementInit.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.ListInitExpression.Kind_Ptr;
      
      function Loop_x
      (
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.LoopExpression.Kind_Ptr;
      
      function Loop_x
      (
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         break : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.LoopExpression.Kind_Ptr;
      
      function Bind
      (
         propertyAccessor : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberAssignment.Kind_Ptr;
      
      function Field
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         fieldName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberExpression.Kind_Ptr;
      
      function Property
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         propertyName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberExpression.Kind_Ptr;
      
      function Property
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         propertyAccessor : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberExpression.Kind_Ptr;
      
      function MakeMemberAccess
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         member : NetFrameworkBase.System.Reflection.MemberInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberExpression.Kind_Ptr;
      
      function MemberInit
      (
         newExpression : NetFrameworkBase.System.Linq.Expressions.NewExpression.Kind_Ptr; 
         bindings : NetFrameworkBase.System.Linq.Expressions.MemberBinding.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberInitExpression.Kind_Ptr;
      
      function ListBind
      (
         member : NetFrameworkBase.System.Reflection.MemberInfo.Kind_Ptr; 
         initializers : NetFrameworkBase.System.Linq.Expressions.ElementInit.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberListBinding.Kind_Ptr;
      
      function ListBind
      (
         propertyAccessor : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         initializers : NetFrameworkBase.System.Linq.Expressions.ElementInit.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberListBinding.Kind_Ptr;
      
      function MemberBind
      (
         member : NetFrameworkBase.System.Reflection.MemberInfo.Kind_Ptr; 
         bindings : NetFrameworkBase.System.Linq.Expressions.MemberBinding.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberMemberBinding.Kind_Ptr;
      
      function MemberBind
      (
         propertyAccessor : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         bindings : NetFrameworkBase.System.Linq.Expressions.MemberBinding.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberMemberBinding.Kind_Ptr;
      
      function Call
      (
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function Call
      (
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function Call
      (
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg2 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function Call
      (
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg2 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg3 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function Call
      (
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg2 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg3 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg4 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function Call
      (
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         arguments : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function Call
      (
         instance_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function Call
      (
         instance_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         arguments : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function Call
      (
         instance_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function Call
      (
         instance_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg2 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function ArrayIndex
      (
         array_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         indexes : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function NewArrayInit
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         initializers : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.NewArrayExpression.Kind_Ptr;
      
      function NewArrayBounds
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         bounds : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.NewArrayExpression.Kind_Ptr;
      
      function New_x
      (
         constructor : NetFrameworkBase.System.Reflection.ConstructorInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.NewExpression.Kind_Ptr;
      
      function New_x
      (
         constructor : NetFrameworkBase.System.Reflection.ConstructorInfo.Kind_Ptr; 
         arguments : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.NewExpression.Kind_Ptr;
      
      function New_x
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.NewExpression.Kind_Ptr;
      
      function Parameter
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.ParameterExpression.Kind_Ptr;
      
      function Variable
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.ParameterExpression.Kind_Ptr;
      
      function Parameter
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Linq.Expressions.ParameterExpression.Kind_Ptr;
      
      function Variable
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Linq.Expressions.ParameterExpression.Kind_Ptr;
      
      function RuntimeVariables
      (
         variables : NetFrameworkBase.System.Linq.Expressions.ParameterExpression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.RuntimeVariablesExpression.Kind_Ptr;
      
      function SwitchCase
      (
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         testValues : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.SwitchCase.Kind_Ptr;
      
      function Switch
      (
         switchValue : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         cases : NetFrameworkBase.System.Linq.Expressions.SwitchCase.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.SwitchExpression.Kind_Ptr;
      
      function Switch
      (
         switchValue : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         defaultBody : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         cases : NetFrameworkBase.System.Linq.Expressions.SwitchCase.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.SwitchExpression.Kind_Ptr;
      
      function Switch
      (
         switchValue : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         defaultBody : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         comparison : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         cases : NetFrameworkBase.System.Linq.Expressions.SwitchCase.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.SwitchExpression.Kind_Ptr;
      
      function Switch
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         switchValue : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         defaultBody : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         comparison : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         cases : NetFrameworkBase.System.Linq.Expressions.SwitchCase.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.SwitchExpression.Kind_Ptr;
      
      function SymbolDocument
      (
         fileName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Linq.Expressions.SymbolDocumentInfo.Kind_Ptr;
      
      function SymbolDocument
      (
         fileName : NetFrameworkBase.BSTR; 
         language : NetFrameworkBase.System.Guid.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.SymbolDocumentInfo.Kind_Ptr;
      
      function SymbolDocument
      (
         fileName : NetFrameworkBase.BSTR; 
         language : NetFrameworkBase.System.Guid.Kind_Ptr; 
         languageVendor : NetFrameworkBase.System.Guid.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.SymbolDocumentInfo.Kind_Ptr;
      
      function SymbolDocument
      (
         fileName : NetFrameworkBase.BSTR; 
         language : NetFrameworkBase.System.Guid.Kind_Ptr; 
         languageVendor : NetFrameworkBase.System.Guid.Kind_Ptr; 
         documentType : NetFrameworkBase.System.Guid.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.SymbolDocumentInfo.Kind_Ptr;
      
      function TryFault
      (
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         fault : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.TryExpression.Kind_Ptr;
      
      function TryFinally
      (
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         finally : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.TryExpression.Kind_Ptr;
      
      function TryCatch
      (
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         handlers : NetFrameworkBase.System.Linq.Expressions.CatchBlock.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.TryExpression.Kind_Ptr;
      
      function TryCatchFinally
      (
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         finally : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         handlers : NetFrameworkBase.System.Linq.Expressions.CatchBlock.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.TryExpression.Kind_Ptr;
      
      function MakeUnary
      (
         unaryType : NetFrameworkBase.System.Linq.Expressions.ExpressionType.Kind; 
         operand : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function MakeUnary
      (
         unaryType : NetFrameworkBase.System.Linq.Expressions.ExpressionType.Kind; 
         operand : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Negate
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function UnaryPlus
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function NegateChecked
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Not_x
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function IsFalse
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function IsTrue
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function OnesComplement
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Convert
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function ConvertChecked
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function ArrayLength
      (
         array_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Rethrow
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Rethrow
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Throw
      (
         value : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Increment
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Decrement
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function PreIncrementAssign
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function PreIncrementAssign
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function PreDecrementAssign
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function PreDecrementAssign
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function PostIncrementAssign
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function PostIncrementAssign
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function PostDecrementAssign
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function PostDecrementAssign
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Assign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function ReferenceEqual
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function NotEqual
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function NotEqual
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         liftToNull : NetFrameworkBase.Boolean; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function ReferenceNotEqual
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function LessThan
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function LessThan
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         liftToNull : NetFrameworkBase.Boolean; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function GreaterThanOrEqual
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function GreaterThanOrEqual
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         liftToNull : NetFrameworkBase.Boolean; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AndAlso
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function OrElse
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Coalesce
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AddAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AddAssignChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AddChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Subtract
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function SubtractAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function SubtractAssignChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function SubtractChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Divide
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function DivideAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Modulo
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function ModuloAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Multiply
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function MultiplyAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function MultiplyAssignChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function MultiplyChecked
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function LeftShift
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function LeftShiftAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function RightShift
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function RightShiftAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function And_x
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function AndAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Or_x
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function OrAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function ExclusiveOr
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function ExclusiveOrAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Power
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function PowerAssign
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         conversion : NetFrameworkBase.System.Linq.Expressions.LambdaExpression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function ArrayIndex
      (
         array_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         index : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Block
      (
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BlockExpression.Kind_Ptr;
      
      function Block
      (
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg2 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BlockExpression.Kind_Ptr;
      
      function Block
      (
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg2 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg3 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BlockExpression.Kind_Ptr;
      
      function Block
      (
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg2 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg3 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg4 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BlockExpression.Kind_Ptr;
      
      function Block
      (
         expressions : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.BlockExpression.Kind_Ptr;
      
      function MakeCatchBlock
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         variable : NetFrameworkBase.System.Linq.Expressions.ParameterExpression.Kind_Ptr; 
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         filter : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.CatchBlock.Kind_Ptr;
      
      function Condition
      (
         test : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         ifTrue : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         ifFalse : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.ConditionalExpression.Kind_Ptr;
      
      function Condition
      (
         test : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         ifTrue : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         ifFalse : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.ConditionalExpression.Kind_Ptr;
      
      function Dynamic
      (
         binder : NetFrameworkBase.System.Runtime.CompilerServices.CallSiteBinder.Kind_Ptr; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.DynamicExpression.Kind_Ptr;
      
      function Dynamic
      (
         binder : NetFrameworkBase.System.Runtime.CompilerServices.CallSiteBinder.Kind_Ptr; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.DynamicExpression.Kind_Ptr;
      
      function Dynamic
      (
         binder : NetFrameworkBase.System.Runtime.CompilerServices.CallSiteBinder.Kind_Ptr; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg2 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.DynamicExpression.Kind_Ptr;
      
      function Dynamic
      (
         binder : NetFrameworkBase.System.Runtime.CompilerServices.CallSiteBinder.Kind_Ptr; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         arg0 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg1 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg2 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         arg3 : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.DynamicExpression.Kind_Ptr;
      
      function MakeGoto
      (
         kind : NetFrameworkBase.System.Linq.Expressions.GotoExpressionKind.Kind; 
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         value : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.GotoExpression.Kind_Ptr;
      
      function Property
      (
         instance_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         propertyName : NetFrameworkBase.BSTR; 
         arguments : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.IndexExpression.Kind_Ptr;
      
      function Label
      (
         target : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         defaultValue : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.LabelExpression.Kind_Ptr;
      
      function GetDelegateType
      (
         typeArgs : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function Loop_x
      (
         body_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         break : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr; 
         continue : NetFrameworkBase.System.Linq.Expressions.LabelTarget.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.LoopExpression.Kind_Ptr;
      
      function Bind
      (
         member : NetFrameworkBase.System.Reflection.MemberInfo.Kind_Ptr; 
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberAssignment.Kind_Ptr;
      
      function Field
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         fieldName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberExpression.Kind_Ptr;
      
      function Property
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         propertyName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberExpression.Kind_Ptr;
      
      function PropertyOrField
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         propertyOrFieldName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberExpression.Kind_Ptr;
      
      function Call
      (
         instance_x : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         methodName : NetFrameworkBase.BSTR; 
         typeArguments : NetFrameworkBase.System.Type_x.Kind_Array; 
         arguments : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function Call
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         methodName : NetFrameworkBase.BSTR; 
         typeArguments : NetFrameworkBase.System.Type_x.Kind_Array; 
         arguments : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Array
      )
      return NetFrameworkBase.System.Linq.Expressions.MethodCallExpression.Kind_Ptr;
      
      function TypeIs
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.TypeBinaryExpression.Kind_Ptr;
      
      function TypeEqual
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.TypeBinaryExpression.Kind_Ptr;
      
      function Negate
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function UnaryPlus
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function NegateChecked
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function IsFalse
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function IsTrue
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function OnesComplement
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function TypeAs
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Unbox
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function ConvertChecked
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Quote
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Throw
      (
         value : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Increment
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Decrement
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Equal
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         liftToNull : NetFrameworkBase.Boolean; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function GreaterThan
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         liftToNull : NetFrameworkBase.Boolean; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function LessThanOrEqual
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         liftToNull : NetFrameworkBase.Boolean; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Add
      (
         left : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         right : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.BinaryExpression.Kind_Ptr;
      
      function Field
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         field : NetFrameworkBase.System.Reflection.FieldInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberExpression.Kind_Ptr;
      
      function Property
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         property : NetFrameworkBase.System.Reflection.PropertyInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.MemberExpression.Kind_Ptr;
      
      function Not_x
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
      function Convert
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Linq.Expressions.UnaryExpression.Kind_Ptr;
      
end;
