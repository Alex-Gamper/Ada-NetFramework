--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Collections.IList;
limited with NetFrameworkBase.System.Xml.XPath.XPathNodeType;
limited with NetFrameworkBase.System.Xml.XPath.XPathNavigator;
limited with NetFrameworkBase.System.Type_x;
limited with NetFrameworkBase.System.Xml.XPath.XPathItem;
limited with NetFrameworkBase.System.Xml.Schema.XmlTypeCode;
limited with NetFrameworkBase.System.Xml.Xsl.Runtime.XmlQueryOutput;
limited with NetFrameworkBase.System.Xml.Xsl.Runtime.XmlILIndex;
limited with NetFrameworkBase.System.Xml.Xsl.Runtime.XmlQueryContext;
limited with NetFrameworkBase.System.Xml.Xsl.Runtime.XsltLibrary;
limited with NetFrameworkBase.System.Xml.XmlNameTable;
limited with NetFrameworkBase.System.Xml.Xsl.Runtime.XmlNavigatorFilter;
limited with NetFrameworkBase.System.Xml.XmlQualifiedName;
limited with NetFrameworkBase.System.Xml.Xsl.Runtime.XmlCollation;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Xml.Xsl.Runtime.XmlQueryRuntime is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function DebugGetGlobalNames
      (
         this : in out XmlQueryRuntime.Kind
      )
      return NetFrameworkBase.BSTR_Array;
      
      function DebugGetGlobalValue
      (
         this : in out XmlQueryRuntime.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Collections.IList.Kind_Ptr;
      
      function DebugGetXsltValue
      (
         this : in out XmlQueryRuntime.Kind;
         seq : NetFrameworkBase.System.Collections.IList.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ExternalContext
      (
         this : in out XmlQueryRuntime.Kind
      )
      return NetFrameworkBase.System.Xml.Xsl.Runtime.XmlQueryContext.Kind_Ptr;
      
      function XsltFunctions
      (
         this : in out XmlQueryRuntime.Kind
      )
      return NetFrameworkBase.System.Xml.Xsl.Runtime.XsltLibrary.Kind_Ptr;
      
      function EarlyBoundFunctionExists
      (
         this : in out XmlQueryRuntime.Kind;
         name : NetFrameworkBase.BSTR; 
         namespaceUri : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function IsGlobalComputed
      (
         this : in out XmlQueryRuntime.Kind;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function GetGlobalValue
      (
         this : in out XmlQueryRuntime.Kind;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      procedure SetGlobalValue
      (
         this : in out XmlQueryRuntime.Kind;
         index : NetFrameworkBase.Int32; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      function NameTable
      (
         this : in out XmlQueryRuntime.Kind
      )
      return NetFrameworkBase.System.Xml.XmlNameTable.Kind_Ptr;
      
      function GetAtomizedName
      (
         this : in out XmlQueryRuntime.Kind;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.BSTR;
      
      function GetNameFilter
      (
         this : in out XmlQueryRuntime.Kind;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Xml.Xsl.Runtime.XmlNavigatorFilter.Kind_Ptr;
      
      function GetTypeFilter
      (
         this : in out XmlQueryRuntime.Kind;
         nodeType : NetFrameworkBase.System.Xml.XPath.XPathNodeType.Kind
      )
      return NetFrameworkBase.System.Xml.Xsl.Runtime.XmlNavigatorFilter.Kind_Ptr;
      
      function ParseTagName
      (
         this : in out XmlQueryRuntime.Kind;
         tagName : NetFrameworkBase.BSTR; 
         indexPrefixMappings : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Xml.XmlQualifiedName.Kind_Ptr;
      
      function ParseTagName
      (
         this : in out XmlQueryRuntime.Kind;
         tagName : NetFrameworkBase.BSTR; 
         ns : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Xml.XmlQualifiedName.Kind_Ptr;
      
      function IsQNameEqual
      (
         this : in out XmlQueryRuntime.Kind;
         n1 : NetFrameworkBase.System.Xml.XPath.XPathNavigator.Kind_Ptr; 
         n2 : NetFrameworkBase.System.Xml.XPath.XPathNavigator.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function IsQNameEqual
      (
         this : in out XmlQueryRuntime.Kind;
         navigator : NetFrameworkBase.System.Xml.XPath.XPathNavigator.Kind_Ptr; 
         indexLocalName : NetFrameworkBase.Int32; 
         indexNamespaceUri : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function ChangeTypeXsltArgument
      (
         this : in out XmlQueryRuntime.Kind;
         indexType : NetFrameworkBase.Int32; 
         value : NetFrameworkBase.System.Object.Kind_Ptr; 
         destinationType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ChangeTypeXsltResult
      (
         this : in out XmlQueryRuntime.Kind;
         indexType : NetFrameworkBase.Int32; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function MatchesXmlType
      (
         this : in out XmlQueryRuntime.Kind;
         item : NetFrameworkBase.System.Xml.XPath.XPathItem.Kind_Ptr; 
         indexType : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function MatchesXmlType
      (
         this : in out XmlQueryRuntime.Kind;
         item : NetFrameworkBase.System.Xml.XPath.XPathItem.Kind_Ptr; 
         code : NetFrameworkBase.System.Xml.Schema.XmlTypeCode.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function GetCollation
      (
         this : in out XmlQueryRuntime.Kind;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Xml.Xsl.Runtime.XmlCollation.Kind_Ptr;
      
      function CreateCollation
      (
         this : in out XmlQueryRuntime.Kind;
         collation : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Xml.Xsl.Runtime.XmlCollation.Kind_Ptr;
      
      function ComparePosition
      (
         this : in out XmlQueryRuntime.Kind;
         navigatorThis : NetFrameworkBase.System.Xml.XPath.XPathNavigator.Kind_Ptr; 
         navigatorThat : NetFrameworkBase.System.Xml.XPath.XPathNavigator.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function Output
      (
         this : in out XmlQueryRuntime.Kind
      )
      return NetFrameworkBase.System.Xml.Xsl.Runtime.XmlQueryOutput.Kind_Ptr;
      
      function EndRtfConstruction
      (
         this : in out XmlQueryRuntime.Kind;
         output : out NetFrameworkBase.System.Xml.Xsl.Runtime.XmlQueryOutput.Kind_Ptr
      )
      return NetFrameworkBase.System.Xml.XPath.XPathNavigator.Kind_Ptr;
      
      function TextRtfConstruction
      (
         this : in out XmlQueryRuntime.Kind;
         text : NetFrameworkBase.BSTR; 
         baseUri : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Xml.XPath.XPathNavigator.Kind_Ptr;
      
      procedure SendMessage
      (
         this : in out XmlQueryRuntime.Kind;
         message : NetFrameworkBase.BSTR
      );
      
      procedure ThrowException
      (
         this : in out XmlQueryRuntime.Kind;
         text : NetFrameworkBase.BSTR
      );
      
      function OnCurrentNodeChanged
      (
         currentNode : NetFrameworkBase.System.Xml.XPath.XPathNavigator.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      procedure DebugSetGlobalValue
      (
         this : in out XmlQueryRuntime.Kind;
         name : NetFrameworkBase.BSTR; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      function GetEarlyBoundObject
      (
         this : in out XmlQueryRuntime.Kind;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GenerateId
      (
         this : in out XmlQueryRuntime.Kind;
         navigator : NetFrameworkBase.System.Xml.XPath.XPathNavigator.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function FindIndex
      (
         this : in out XmlQueryRuntime.Kind;
         context : NetFrameworkBase.System.Xml.XPath.XPathNavigator.Kind_Ptr; 
         indexId : NetFrameworkBase.Int32; 
         index : out NetFrameworkBase.System.Xml.Xsl.Runtime.XmlILIndex.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      procedure AddNewIndex
      (
         this : in out XmlQueryRuntime.Kind;
         context : NetFrameworkBase.System.Xml.XPath.XPathNavigator.Kind_Ptr; 
         indexId : NetFrameworkBase.Int32; 
         index : NetFrameworkBase.System.Xml.Xsl.Runtime.XmlILIndex.Kind_Ptr
      );
      
      procedure StartSequenceConstruction
      (
         this : in out XmlQueryRuntime.Kind;
         output : out NetFrameworkBase.System.Xml.Xsl.Runtime.XmlQueryOutput.Kind_Ptr
      );
      
      procedure StartRtfConstruction
      (
         this : in out XmlQueryRuntime.Kind;
         baseUri : NetFrameworkBase.BSTR; 
         output : out NetFrameworkBase.System.Xml.Xsl.Runtime.XmlQueryOutput.Kind_Ptr
      );
      
end;
