--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Net.BindIPEndPoint;
limited with NetFrameworkBase.System.Uri;
limited with NetFrameworkBase.System.Version;
limited with NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Net.ServicePoint is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      procedure SetTcpKeepAlive
      (
         this : in out ServicePoint.Kind;
         enabled : NetFrameworkBase.Boolean; 
         keepAliveTime : NetFrameworkBase.Int32; 
         keepAliveInterval : NetFrameworkBase.Int32
      );
      
      function ConnectionLimit
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.Int32;
      
      function BindIPEndPointDelegate
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.System.Net.BindIPEndPoint.Kind_Ptr;
      
      procedure BindIPEndPointDelegate
      (
         this : in out ServicePoint.Kind;
         value : NetFrameworkBase.System.Net.BindIPEndPoint.Kind_Ptr
      );
      
      function ConnectionLeaseTimeout
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure ConnectionLeaseTimeout
      (
         this : in out ServicePoint.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function Address
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.System.Uri.Kind_Ptr;
      
      function MaxIdleTime
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure MaxIdleTime
      (
         this : in out ServicePoint.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function UseNagleAlgorithm
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure UseNagleAlgorithm
      (
         this : in out ServicePoint.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function ReceiveBufferSize
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure ReceiveBufferSize
      (
         this : in out ServicePoint.Kind;
         value : NetFrameworkBase.Int32
      );
      
      procedure Expect100Continue
      (
         this : in out ServicePoint.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function Expect100Continue
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IdleSince
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.Date;
      
      function ProtocolVersion
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.System.Version.Kind_Ptr;
      
      function ConnectionName
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure ConnectionLimit
      (
         this : in out ServicePoint.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function CurrentConnections
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.Int32;
      
      function SupportsPipelining
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function CloseConnectionGroup
      (
         this : in out ServicePoint.Kind;
         connectionGroupName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function Certificate
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function ClientCertificate
      (
         this : in out ServicePoint.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
end;
