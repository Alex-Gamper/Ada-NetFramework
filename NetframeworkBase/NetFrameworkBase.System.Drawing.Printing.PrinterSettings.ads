--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Drawing.Printing.Duplex;
limited with NetFrameworkBase.System.Drawing.Printing.PrintRange;
limited with NetFrameworkBase.System.Drawing.Imaging.ImageFormat;
limited with NetFrameworkBase.System.Drawing.Printing.PageSettings;
limited with NetFrameworkBase.System.Drawing.Image;
limited with NetFrameworkBase.System.Drawing.Printing.PrinterSettings.PaperSizeCollection;
limited with NetFrameworkBase.System.Drawing.Printing.PrinterSettings.PaperSourceCollection;
limited with NetFrameworkBase.System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection;
limited with NetFrameworkBase.System.Drawing.Graphics;
limited with NetFrameworkBase.System.Drawing.Printing.PrinterSettings.StringCollection;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Drawing.Printing.PrinterSettings is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function CanDuplex
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function Copies
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Int16;
      
      function Collate
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure Collate
      (
         this : in out PrinterSettings.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function DefaultPageSettings
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.System.Drawing.Printing.PageSettings.Kind_Ptr;
      
      function Duplex
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.System.Drawing.Printing.Duplex.Kind;
      
      procedure Duplex
      (
         this : in out PrinterSettings.Kind;
         value : NetFrameworkBase.System.Drawing.Printing.Duplex.Kind
      );
      
      function FromPage
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Int32;
      
      function IsDefaultPrinter
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsPlotter
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsValid
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function LandscapeAngle
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Int32;
      
      function MaximumCopies
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Int32;
      
      function MaximumPage
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Int32;
      
      function MinimumPage
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Int32;
      
      function PrintFileName
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure PrintFileName
      (
         this : in out PrinterSettings.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function PaperSizes
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Kind_Ptr;
      
      function PaperSources
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Kind_Ptr;
      
      function PrintRange
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.System.Drawing.Printing.PrintRange.Kind;
      
      procedure PrintRange
      (
         this : in out PrinterSettings.Kind;
         value : NetFrameworkBase.System.Drawing.Printing.PrintRange.Kind
      );
      
      function PrintToFile
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure PrintToFile
      (
         this : in out PrinterSettings.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function PrinterName
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure PrinterName
      (
         this : in out PrinterSettings.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function PrinterResolutions
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Kind_Ptr;
      
      function IsDirectPrintingSupported
      (
         this : in out PrinterSettings.Kind;
         imageFormat : NetFrameworkBase.System.Drawing.Imaging.ImageFormat.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function SupportsColor
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function ToPage
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.Int32;
      
      function Clone
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function CreateMeasurementGraphics
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.System.Drawing.Graphics.Kind_Ptr;
      
      function CreateMeasurementGraphics
      (
         this : in out PrinterSettings.Kind;
         honorOriginAtMargins : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Drawing.Graphics.Kind_Ptr;
      
      function CreateMeasurementGraphics
      (
         this : in out PrinterSettings.Kind;
         pageSettings : NetFrameworkBase.System.Drawing.Printing.PageSettings.Kind_Ptr
      )
      return NetFrameworkBase.System.Drawing.Graphics.Kind_Ptr;
      
      function CreateMeasurementGraphics
      (
         this : in out PrinterSettings.Kind;
         pageSettings : NetFrameworkBase.System.Drawing.Printing.PageSettings.Kind_Ptr; 
         honorOriginAtMargins : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Drawing.Graphics.Kind_Ptr;
      
      function GetHdevmode
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.IntPtr;
      
      function GetHdevmode
      (
         this : in out PrinterSettings.Kind;
         pageSettings : NetFrameworkBase.System.Drawing.Printing.PageSettings.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function GetHdevnames
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.IntPtr;
      
      procedure Copies
      (
         this : in out PrinterSettings.Kind;
         value : NetFrameworkBase.Int16
      );
      
      procedure FromPage
      (
         this : in out PrinterSettings.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function InstalledPrinters
      return NetFrameworkBase.System.Drawing.Printing.PrinterSettings.StringCollection.Kind_Ptr;
      
      procedure MaximumPage
      (
         this : in out PrinterSettings.Kind;
         value : NetFrameworkBase.Int32
      );
      
      procedure MinimumPage
      (
         this : in out PrinterSettings.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function IsDirectPrintingSupported
      (
         this : in out PrinterSettings.Kind;
         image : NetFrameworkBase.System.Drawing.Image.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      procedure ToPage
      (
         this : in out PrinterSettings.Kind;
         value : NetFrameworkBase.Int32
      );
      
      procedure SetHdevmode
      (
         this : in out PrinterSettings.Kind;
         hdevmode : NetFrameworkBase.IntPtr
      );
      
      procedure SetHdevnames
      (
         this : in out PrinterSettings.Kind;
         hdevnames : NetFrameworkBase.IntPtr
      );
      
      function ToString
      (
         this : in out PrinterSettings.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Constructor return NetFrameworkBase.System.Drawing.Printing.PrinterSettings.Kind_Ptr;
      
end;
