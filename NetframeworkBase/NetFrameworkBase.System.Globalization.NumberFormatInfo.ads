--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.IFormatProvider;
limited with NetFrameworkBase.System.Type_x;
limited with NetFrameworkBase.System.Globalization.DigitShapes;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Globalization.NumberFormatInfo is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function InvariantInfo
      return NetFrameworkBase.System.Globalization.NumberFormatInfo.Kind_Ptr;
      
      function GetInstance
      (
         formatProvider : NetFrameworkBase.System.IFormatProvider.Kind_Ptr
      )
      return NetFrameworkBase.System.Globalization.NumberFormatInfo.Kind_Ptr;
      
      function Clone
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function CurrencyDecimalDigits
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure CurrencyDecimalDigits
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function CurrencyDecimalSeparator
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function IsReadOnly
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function CurrencyGroupSizes
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.Int32_Array;
      
      function NumberGroupSizes
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.Int32_Array;
      
      function PercentGroupSizes
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.Int32_Array;
      
      function CurrencyGroupSeparator
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function CurrencySymbol
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure CurrencySymbol
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function CurrentInfo
      return NetFrameworkBase.System.Globalization.NumberFormatInfo.Kind_Ptr;
      
      function NaNSymbol
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure NaNSymbol
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function CurrencyNegativePattern
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure CurrencyNegativePattern
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function NumberNegativePattern
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure NumberNegativePattern
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function PercentPositivePattern
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure PercentPositivePattern
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function PercentNegativePattern
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure PercentNegativePattern
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function NegativeInfinitySymbol
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure NegativeInfinitySymbol
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function NegativeSign
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure NegativeSign
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function NumberDecimalDigits
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure NumberDecimalDigits
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function NumberDecimalSeparator
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function NumberGroupSeparator
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function CurrencyPositivePattern
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure CurrencyPositivePattern
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function PositiveInfinitySymbol
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure PositiveInfinitySymbol
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function PositiveSign
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure PositiveSign
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function PercentDecimalDigits
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure PercentDecimalDigits
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function PercentDecimalSeparator
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function PercentGroupSeparator
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function PercentSymbol
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure PercentSymbol
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function PerMilleSymbol
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure PerMilleSymbol
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function NativeDigits
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.BSTR_Array;
      
      function DigitSubstitution
      (
         this : in out NumberFormatInfo.Kind
      )
      return NetFrameworkBase.System.Globalization.DigitShapes.Kind;
      
      function GetFormat
      (
         this : in out NumberFormatInfo.Kind;
         formatType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ReadOnly
      (
         nfi : NetFrameworkBase.System.Globalization.NumberFormatInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Globalization.NumberFormatInfo.Kind_Ptr;
      
      procedure CurrencyDecimalSeparator
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      procedure CurrencyGroupSizes
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.Int32_Array
      );
      
      procedure NumberGroupSizes
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.Int32_Array
      );
      
      procedure PercentGroupSizes
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.Int32_Array
      );
      
      procedure CurrencyGroupSeparator
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      procedure NumberDecimalSeparator
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      procedure NumberGroupSeparator
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      procedure PercentDecimalSeparator
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      procedure PercentGroupSeparator
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      procedure NativeDigits
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.BSTR_Array
      );
      
      procedure DigitSubstitution
      (
         this : in out NumberFormatInfo.Kind;
         value : NetFrameworkBase.System.Globalization.DigitShapes.Kind
      );
      
      function Constructor return NetFrameworkBase.System.Globalization.NumberFormatInfo.Kind_Ptr;
      
end;
