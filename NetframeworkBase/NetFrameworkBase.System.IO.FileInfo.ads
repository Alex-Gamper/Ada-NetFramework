--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.IO.FileSystemInfo;
limited with NetFrameworkBase.System.Security.AccessControl.AccessControlSections;
limited with NetFrameworkBase.System.Security.AccessControl.FileSecurity;
limited with NetFrameworkBase.System.IO.FileMode;
limited with NetFrameworkBase.System.IO.FileAccess;
limited with NetFrameworkBase.System.IO.FileShare;
limited with NetFrameworkBase.System.IO.DirectoryInfo;
limited with NetFrameworkBase.System.IO.StreamReader;
limited with NetFrameworkBase.System.IO.StreamWriter;
limited with NetFrameworkBase.System.IO.FileStream;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.IO.FileInfo is
   
   type Kind is new NetFrameworkBase.System.IO.FileSystemInfo.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function Name
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Delete
      (
         this : in out FileInfo.Kind
      );
      
      function Exists
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function ToString
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Length
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.Int64;
      
      function DirectoryName
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Directory
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.System.IO.DirectoryInfo.Kind_Ptr;
      
      function IsReadOnly
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure IsReadOnly
      (
         this : in out FileInfo.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function GetAccessControl
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.System.Security.AccessControl.FileSecurity.Kind_Ptr;
      
      function GetAccessControl
      (
         this : in out FileInfo.Kind;
         includeSections : NetFrameworkBase.System.Security.AccessControl.AccessControlSections.Kind
      )
      return NetFrameworkBase.System.Security.AccessControl.FileSecurity.Kind_Ptr;
      
      procedure SetAccessControl
      (
         this : in out FileInfo.Kind;
         fileSecurity : NetFrameworkBase.System.Security.AccessControl.FileSecurity.Kind_Ptr
      );
      
      function OpenText
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.System.IO.StreamReader.Kind_Ptr;
      
      function CreateText
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.System.IO.StreamWriter.Kind_Ptr;
      
      function AppendText
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.System.IO.StreamWriter.Kind_Ptr;
      
      function CopyTo
      (
         this : in out FileInfo.Kind;
         destFileName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.IO.FileInfo.Kind_Ptr;
      
      function CopyTo
      (
         this : in out FileInfo.Kind;
         destFileName : NetFrameworkBase.BSTR; 
         overwrite : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.IO.FileInfo.Kind_Ptr;
      
      function Create
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.System.IO.FileStream.Kind_Ptr;
      
      procedure Decrypt
      (
         this : in out FileInfo.Kind
      );
      
      procedure Encrypt
      (
         this : in out FileInfo.Kind
      );
      
      function Open
      (
         this : in out FileInfo.Kind;
         mode : NetFrameworkBase.System.IO.FileMode.Kind
      )
      return NetFrameworkBase.System.IO.FileStream.Kind_Ptr;
      
      function Open
      (
         this : in out FileInfo.Kind;
         mode : NetFrameworkBase.System.IO.FileMode.Kind; 
         access_x : NetFrameworkBase.System.IO.FileAccess.Kind
      )
      return NetFrameworkBase.System.IO.FileStream.Kind_Ptr;
      
      function Open
      (
         this : in out FileInfo.Kind;
         mode : NetFrameworkBase.System.IO.FileMode.Kind; 
         access_x : NetFrameworkBase.System.IO.FileAccess.Kind; 
         share : NetFrameworkBase.System.IO.FileShare.Kind
      )
      return NetFrameworkBase.System.IO.FileStream.Kind_Ptr;
      
      function OpenRead
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.System.IO.FileStream.Kind_Ptr;
      
      function OpenWrite
      (
         this : in out FileInfo.Kind
      )
      return NetFrameworkBase.System.IO.FileStream.Kind_Ptr;
      
      procedure MoveTo
      (
         this : in out FileInfo.Kind;
         destFileName : NetFrameworkBase.BSTR
      );
      
      function Replace
      (
         this : in out FileInfo.Kind;
         destinationFileName : NetFrameworkBase.BSTR; 
         destinationBackupFileName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.IO.FileInfo.Kind_Ptr;
      
      function Replace
      (
         this : in out FileInfo.Kind;
         destinationFileName : NetFrameworkBase.BSTR; 
         destinationBackupFileName : NetFrameworkBase.BSTR; 
         ignoreMetadataErrors : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.IO.FileInfo.Kind_Ptr;
      
      function Constructor
      (
         fileName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.IO.FileInfo.Kind_Ptr;
      
end;
