--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Windows.Forms.Control;
limited with NetFrameworkBase.System.Windows.Forms.ProgressBarStyle;
limited with NetFrameworkBase.System.EventHandler;
limited with NetFrameworkBase.System.Drawing.Image;
limited with NetFrameworkBase.System.Windows.Forms.ImageLayout;
limited with NetFrameworkBase.System.Drawing.Font;
limited with NetFrameworkBase.System.Windows.Forms.ImeMode;
limited with NetFrameworkBase.System.Windows.Forms.Padding;
limited with NetFrameworkBase.System.Windows.Forms.MouseEventHandler;
limited with NetFrameworkBase.System.Windows.Forms.KeyEventHandler;
limited with NetFrameworkBase.System.Windows.Forms.KeyPressEventHandler;
limited with NetFrameworkBase.System.Windows.Forms.PaintEventHandler;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Windows.Forms.ProgressBar is
   
   type Kind is new NetFrameworkBase.System.Windows.Forms.Control.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      procedure Style
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.ProgressBarStyle.Kind
      );
      
      procedure add_RightToLeftLayoutChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      function AllowDrop
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure AllowDrop
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function BackgroundImage
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.System.Drawing.Image.Kind_Ptr;
      
      procedure BackgroundImage
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Drawing.Image.Kind_Ptr
      );
      
      function BackgroundImageLayout
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.ImageLayout.Kind;
      
      procedure BackgroundImageLayout
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.ImageLayout.Kind
      );
      
      function Font
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.System.Drawing.Font.Kind_Ptr;
      
      procedure Font
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Drawing.Font.Kind_Ptr
      );
      
      function RightToLeftLayout
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure RightToLeftLayout
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function Text
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Text
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      procedure ResetForeColor
      (
         this : in out ProgressBar.Kind
      );
      
      function Style
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.ProgressBarStyle.Kind;
      
      procedure add_BackgroundImageChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_BackgroundImageChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure add_BackgroundImageLayoutChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_BackgroundImageLayoutChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      function CausesValidation
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure CausesValidation
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      procedure add_CausesValidationChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_CausesValidationChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure add_FontChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_FontChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      function ImeMode
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.ImeMode.Kind;
      
      procedure ImeMode
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.ImeMode.Kind
      );
      
      procedure add_ImeModeChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_ImeModeChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      function MarqueeAnimationSpeed
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure MarqueeAnimationSpeed
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function Maximum
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure Maximum
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function Minimum
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure Minimum
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function Padding
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.Padding.Kind_Ptr;
      
      procedure Padding
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.Padding.Kind_Ptr
      );
      
      procedure add_PaddingChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_PaddingChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_RightToLeftLayoutChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      function Step
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure Step
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function TabStop
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure TabStop
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      procedure add_TabStopChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_TabStopChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure add_TextChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_TextChanged
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      function Value
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure Value
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.Int32
      );
      
      procedure add_DoubleClick
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_DoubleClick
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure add_MouseDoubleClick
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.MouseEventHandler.Kind_Ptr
      );
      
      procedure remove_MouseDoubleClick
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.MouseEventHandler.Kind_Ptr
      );
      
      procedure add_KeyUp
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.KeyEventHandler.Kind_Ptr
      );
      
      procedure remove_KeyUp
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.KeyEventHandler.Kind_Ptr
      );
      
      procedure add_KeyDown
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.KeyEventHandler.Kind_Ptr
      );
      
      procedure remove_KeyDown
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.KeyEventHandler.Kind_Ptr
      );
      
      procedure add_KeyPress
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.KeyPressEventHandler.Kind_Ptr
      );
      
      procedure remove_KeyPress
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.KeyPressEventHandler.Kind_Ptr
      );
      
      procedure add_Enter
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_Enter
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure add_Leave
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_Leave
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure add_Paint
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.PaintEventHandler.Kind_Ptr
      );
      
      procedure remove_Paint
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.System.Windows.Forms.PaintEventHandler.Kind_Ptr
      );
      
      procedure Increment
      (
         this : in out ProgressBar.Kind;
         value : NetFrameworkBase.Int32
      );
      
      procedure PerformStep
      (
         this : in out ProgressBar.Kind
      );
      
      function ToString
      (
         this : in out ProgressBar.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Constructor return NetFrameworkBase.System.Windows.Forms.ProgressBar.Kind_Ptr;
      
end;
