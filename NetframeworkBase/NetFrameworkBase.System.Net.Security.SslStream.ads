--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Net.Security.AuthenticatedStream;
limited with NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509CertificateCollection;
limited with NetFrameworkBase.System.Security.Authentication.SslProtocols;
limited with NetFrameworkBase.System.AsyncCallback;
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.IAsyncResult;
limited with NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate;
limited with NetFrameworkBase.System.IO.SeekOrigin;
limited with NetFrameworkBase.System.IO.Stream;
limited with NetFrameworkBase.System.Net.Security.RemoteCertificateValidationCallback;
limited with NetFrameworkBase.System.Net.Security.LocalCertificateSelectionCallback;
limited with NetFrameworkBase.System.Net.Security.EncryptionPolicy;
limited with NetFrameworkBase.System.Threading.Tasks.Task_x;
limited with NetFrameworkBase.System.Security.Authentication.CipherAlgorithmType;
limited with NetFrameworkBase.System.Security.Authentication.HashAlgorithmType;
limited with NetFrameworkBase.System.Security.Authentication.ExchangeAlgorithmType;
limited with NetFrameworkBase.System.Net.TransportContext;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Net.Security.SslStream is
   
   type Kind is new NetFrameworkBase.System.Net.Security.AuthenticatedStream.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      procedure AuthenticateAsClient
      (
         this : in out SslStream.Kind;
         targetHost : NetFrameworkBase.BSTR; 
         clientCertificates : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509CertificateCollection.Kind_Ptr; 
         enabledSslProtocols : NetFrameworkBase.System.Security.Authentication.SslProtocols.Kind; 
         checkCertificateRevocation : NetFrameworkBase.Boolean
      );
      
      procedure AuthenticateAsClient
      (
         this : in out SslStream.Kind;
         targetHost : NetFrameworkBase.BSTR
      );
      
      function BeginAuthenticateAsClient
      (
         this : in out SslStream.Kind;
         targetHost : NetFrameworkBase.BSTR; 
         asyncCallback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         asyncState : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function BeginAuthenticateAsClient
      (
         this : in out SslStream.Kind;
         targetHost : NetFrameworkBase.BSTR; 
         clientCertificates : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509CertificateCollection.Kind_Ptr; 
         checkCertificateRevocation : NetFrameworkBase.Boolean; 
         asyncCallback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         asyncState : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function BeginAuthenticateAsClient
      (
         this : in out SslStream.Kind;
         targetHost : NetFrameworkBase.BSTR; 
         clientCertificates : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509CertificateCollection.Kind_Ptr; 
         enabledSslProtocols : NetFrameworkBase.System.Security.Authentication.SslProtocols.Kind; 
         checkCertificateRevocation : NetFrameworkBase.Boolean; 
         asyncCallback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         asyncState : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      procedure EndAuthenticateAsClient
      (
         this : in out SslStream.Kind;
         asyncResult : NetFrameworkBase.System.IAsyncResult.Kind_Ptr
      );
      
      procedure AuthenticateAsServer
      (
         this : in out SslStream.Kind;
         serverCertificate : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr
      );
      
      procedure AuthenticateAsServer
      (
         this : in out SslStream.Kind;
         serverCertificate : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr; 
         clientCertificateRequired : NetFrameworkBase.Boolean; 
         checkCertificateRevocation : NetFrameworkBase.Boolean
      );
      
      procedure AuthenticateAsServer
      (
         this : in out SslStream.Kind;
         serverCertificate : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr; 
         clientCertificateRequired : NetFrameworkBase.Boolean; 
         enabledSslProtocols : NetFrameworkBase.System.Security.Authentication.SslProtocols.Kind; 
         checkCertificateRevocation : NetFrameworkBase.Boolean
      );
      
      function BeginAuthenticateAsServer
      (
         this : in out SslStream.Kind;
         serverCertificate : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr; 
         asyncCallback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         asyncState : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function BeginAuthenticateAsServer
      (
         this : in out SslStream.Kind;
         serverCertificate : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr; 
         clientCertificateRequired : NetFrameworkBase.Boolean; 
         checkCertificateRevocation : NetFrameworkBase.Boolean; 
         asyncCallback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         asyncState : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function BeginAuthenticateAsServer
      (
         this : in out SslStream.Kind;
         serverCertificate : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr; 
         clientCertificateRequired : NetFrameworkBase.Boolean; 
         enabledSslProtocols : NetFrameworkBase.System.Security.Authentication.SslProtocols.Kind; 
         checkCertificateRevocation : NetFrameworkBase.Boolean; 
         asyncCallback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         asyncState : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      procedure EndAuthenticateAsServer
      (
         this : in out SslStream.Kind;
         asyncResult : NetFrameworkBase.System.IAsyncResult.Kind_Ptr
      );
      
      function AuthenticateAsClientAsync
      (
         this : in out SslStream.Kind;
         targetHost : NetFrameworkBase.BSTR; 
         clientCertificates : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509CertificateCollection.Kind_Ptr; 
         checkCertificateRevocation : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Threading.Tasks.Task_x.Kind_Ptr;
      
      function AuthenticateAsServerAsync
      (
         this : in out SslStream.Kind;
         serverCertificate : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr; 
         clientCertificateRequired : NetFrameworkBase.Boolean; 
         checkCertificateRevocation : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Threading.Tasks.Task_x.Kind_Ptr;
      
      function IsAuthenticated
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsMutuallyAuthenticated
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsEncrypted
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsSigned
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsServer
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function SslProtocol
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.System.Security.Authentication.SslProtocols.Kind;
      
      function CheckCertRevocationStatus
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function LocalCertificate
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function CipherAlgorithm
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.System.Security.Authentication.CipherAlgorithmType.Kind;
      
      function CipherStrength
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Int32;
      
      function HashAlgorithm
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.System.Security.Authentication.HashAlgorithmType.Kind;
      
      function HashStrength
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Int32;
      
      function KeyExchangeAlgorithm
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.System.Security.Authentication.ExchangeAlgorithmType.Kind;
      
      function KeyExchangeStrength
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Int32;
      
      function CanSeek
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function CanRead
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function CanTimeout
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function CanWrite
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function ReadTimeout
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure ReadTimeout
      (
         this : in out SslStream.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function WriteTimeout
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure WriteTimeout
      (
         this : in out SslStream.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function Length
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Int64;
      
      function Position
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.Int64;
      
      procedure Position
      (
         this : in out SslStream.Kind;
         value : NetFrameworkBase.Int64
      );
      
      procedure SetLength
      (
         this : in out SslStream.Kind;
         value : NetFrameworkBase.Int64
      );
      
      function Seek
      (
         this : in out SslStream.Kind;
         offset : NetFrameworkBase.Int64; 
         origin : NetFrameworkBase.System.IO.SeekOrigin.Kind
      )
      return NetFrameworkBase.Int64;
      
      procedure Flush
      (
         this : in out SslStream.Kind
      );
      
      function Read
      (
         this : in out SslStream.Kind;
         buffer : in out NetFrameworkBase.Byte_Array; 
         offset : NetFrameworkBase.Int32; 
         count : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int32;
      
      procedure Write
      (
         this : in out SslStream.Kind;
         buffer : NetFrameworkBase.Byte_Array; 
         offset : NetFrameworkBase.Int32; 
         count : NetFrameworkBase.Int32
      );
      
      function BeginRead
      (
         this : in out SslStream.Kind;
         buffer : NetFrameworkBase.Byte_Array; 
         offset : NetFrameworkBase.Int32; 
         count : NetFrameworkBase.Int32; 
         asyncCallback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         asyncState : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function EndRead
      (
         this : in out SslStream.Kind;
         asyncResult : NetFrameworkBase.System.IAsyncResult.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function BeginWrite
      (
         this : in out SslStream.Kind;
         buffer : NetFrameworkBase.Byte_Array; 
         offset : NetFrameworkBase.Int32; 
         count : NetFrameworkBase.Int32; 
         asyncCallback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         asyncState : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      procedure EndWrite
      (
         this : in out SslStream.Kind;
         asyncResult : NetFrameworkBase.System.IAsyncResult.Kind_Ptr
      );
      
      procedure AuthenticateAsClient
      (
         this : in out SslStream.Kind;
         targetHost : NetFrameworkBase.BSTR; 
         clientCertificates : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509CertificateCollection.Kind_Ptr; 
         checkCertificateRevocation : NetFrameworkBase.Boolean
      );
      
      function TransportContext
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.System.Net.TransportContext.Kind_Ptr;
      
      function AuthenticateAsClientAsync
      (
         this : in out SslStream.Kind;
         targetHost : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Threading.Tasks.Task_x.Kind_Ptr;
      
      function AuthenticateAsClientAsync
      (
         this : in out SslStream.Kind;
         targetHost : NetFrameworkBase.BSTR; 
         clientCertificates : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509CertificateCollection.Kind_Ptr; 
         enabledSslProtocols : NetFrameworkBase.System.Security.Authentication.SslProtocols.Kind; 
         checkCertificateRevocation : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Threading.Tasks.Task_x.Kind_Ptr;
      
      function AuthenticateAsServerAsync
      (
         this : in out SslStream.Kind;
         serverCertificate : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr
      )
      return NetFrameworkBase.System.Threading.Tasks.Task_x.Kind_Ptr;
      
      function AuthenticateAsServerAsync
      (
         this : in out SslStream.Kind;
         serverCertificate : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr; 
         clientCertificateRequired : NetFrameworkBase.Boolean; 
         enabledSslProtocols : NetFrameworkBase.System.Security.Authentication.SslProtocols.Kind; 
         checkCertificateRevocation : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Threading.Tasks.Task_x.Kind_Ptr;
      
      function ShutdownAsync
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.System.Threading.Tasks.Task_x.Kind_Ptr;
      
      function RemoteCertificate
      (
         this : in out SslStream.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      procedure Write
      (
         this : in out SslStream.Kind;
         buffer : NetFrameworkBase.Byte_Array
      );
      
      function Constructor
      (
         innerStream : NetFrameworkBase.System.IO.Stream.Kind_Ptr
      )
      return NetFrameworkBase.System.Net.Security.SslStream.Kind_Ptr;
      
      function Constructor
      (
         innerStream : NetFrameworkBase.System.IO.Stream.Kind_Ptr;
         leaveInnerStreamOpen : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Net.Security.SslStream.Kind_Ptr;
      
      function Constructor
      (
         innerStream : NetFrameworkBase.System.IO.Stream.Kind_Ptr;
         leaveInnerStreamOpen : NetFrameworkBase.Boolean;
         userCertificateValidationCallback : NetFrameworkBase.System.Net.Security.RemoteCertificateValidationCallback.Kind_Ptr
      )
      return NetFrameworkBase.System.Net.Security.SslStream.Kind_Ptr;
      
      function Constructor
      (
         innerStream : NetFrameworkBase.System.IO.Stream.Kind_Ptr;
         leaveInnerStreamOpen : NetFrameworkBase.Boolean;
         userCertificateValidationCallback : NetFrameworkBase.System.Net.Security.RemoteCertificateValidationCallback.Kind_Ptr;
         userCertificateSelectionCallback : NetFrameworkBase.System.Net.Security.LocalCertificateSelectionCallback.Kind_Ptr
      )
      return NetFrameworkBase.System.Net.Security.SslStream.Kind_Ptr;
      
      function Constructor
      (
         innerStream : NetFrameworkBase.System.IO.Stream.Kind_Ptr;
         leaveInnerStreamOpen : NetFrameworkBase.Boolean;
         userCertificateValidationCallback : NetFrameworkBase.System.Net.Security.RemoteCertificateValidationCallback.Kind_Ptr;
         userCertificateSelectionCallback : NetFrameworkBase.System.Net.Security.LocalCertificateSelectionCallback.Kind_Ptr;
         encryptionPolicy : NetFrameworkBase.System.Net.Security.EncryptionPolicy.Kind
      )
      return NetFrameworkBase.System.Net.Security.SslStream.Kind_Ptr;
      
end;
