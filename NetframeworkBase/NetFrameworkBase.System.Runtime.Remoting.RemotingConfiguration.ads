--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Type_x;
limited with NetFrameworkBase.System.Runtime.Remoting.WellKnownObjectMode;
limited with NetFrameworkBase.System.Runtime.Remoting.WellKnownServiceTypeEntry;
limited with NetFrameworkBase.System.Runtime.Remoting.CustomErrorsModes;
limited with NetFrameworkBase.System.Runtime.Remoting.ActivatedServiceTypeEntry;
limited with NetFrameworkBase.System.Runtime.Remoting.ActivatedClientTypeEntry;
limited with NetFrameworkBase.System.Runtime.Remoting.WellKnownClientTypeEntry;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Runtime.Remoting.RemotingConfiguration is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      procedure RegisterWellKnownServiceType
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         objectUri : NetFrameworkBase.BSTR; 
         mode : NetFrameworkBase.System.Runtime.Remoting.WellKnownObjectMode.Kind
      )
      ;
      
      procedure RegisterWellKnownServiceType
      (
         entry_x : NetFrameworkBase.System.Runtime.Remoting.WellKnownServiceTypeEntry.Kind_Ptr
      )
      ;
      
      procedure Configure
      (
         filename : NetFrameworkBase.BSTR
      )
      ;
      
      procedure Configure
      (
         filename : NetFrameworkBase.BSTR; 
         ensureSecurity : NetFrameworkBase.Boolean
      )
      ;
      
      function ApplicationName
      return NetFrameworkBase.BSTR;
      
      procedure ApplicationName
      (
         value : NetFrameworkBase.BSTR
      )
      ;
      
      function ApplicationId
      return NetFrameworkBase.BSTR;
      
      function ProcessId
      return NetFrameworkBase.BSTR;
      
      function CustomErrorsMode
      return NetFrameworkBase.System.Runtime.Remoting.CustomErrorsModes.Kind;
      
      procedure CustomErrorsMode
      (
         value : NetFrameworkBase.System.Runtime.Remoting.CustomErrorsModes.Kind
      )
      ;
      
      function CustomErrorsEnabled
      (
         isLocalRequest : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.Boolean;
      
      procedure RegisterActivatedServiceType
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      ;
      
      procedure RegisterActivatedServiceType
      (
         entry_x : NetFrameworkBase.System.Runtime.Remoting.ActivatedServiceTypeEntry.Kind_Ptr
      )
      ;
      
      procedure RegisterActivatedClientType
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         appUrl : NetFrameworkBase.BSTR
      )
      ;
      
      procedure RegisterActivatedClientType
      (
         entry_x : NetFrameworkBase.System.Runtime.Remoting.ActivatedClientTypeEntry.Kind_Ptr
      )
      ;
      
      procedure RegisterWellKnownClientType
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         objectUrl : NetFrameworkBase.BSTR
      )
      ;
      
      procedure RegisterWellKnownClientType
      (
         entry_x : NetFrameworkBase.System.Runtime.Remoting.WellKnownClientTypeEntry.Kind_Ptr
      )
      ;
      
      function GetRegisteredActivatedServiceTypes
      return NetFrameworkBase.System.Runtime.Remoting.ActivatedServiceTypeEntry.Kind_Array;
      
      function GetRegisteredWellKnownServiceTypes
      return NetFrameworkBase.System.Runtime.Remoting.WellKnownServiceTypeEntry.Kind_Array;
      
      function GetRegisteredActivatedClientTypes
      return NetFrameworkBase.System.Runtime.Remoting.ActivatedClientTypeEntry.Kind_Array;
      
      function GetRegisteredWellKnownClientTypes
      return NetFrameworkBase.System.Runtime.Remoting.WellKnownClientTypeEntry.Kind_Array;
      
      function IsRemotelyActivatedClientType
      (
         svrType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Runtime.Remoting.ActivatedClientTypeEntry.Kind_Ptr;
      
      function IsRemotelyActivatedClientType
      (
         typeName : NetFrameworkBase.BSTR; 
         assemblyName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Runtime.Remoting.ActivatedClientTypeEntry.Kind_Ptr;
      
      function IsWellKnownClientType
      (
         svrType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Runtime.Remoting.WellKnownClientTypeEntry.Kind_Ptr;
      
      function IsWellKnownClientType
      (
         typeName : NetFrameworkBase.BSTR; 
         assemblyName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Runtime.Remoting.WellKnownClientTypeEntry.Kind_Ptr;
      
      function IsActivationAllowed
      (
         svrType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
end;
