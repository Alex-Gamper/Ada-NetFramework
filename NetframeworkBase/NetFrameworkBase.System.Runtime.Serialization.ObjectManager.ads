--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Reflection.MemberInfo;
limited with NetFrameworkBase.System.Runtime.Serialization.SerializationInfo;
limited with NetFrameworkBase.System.Runtime.Serialization.ISurrogateSelector;
limited with NetFrameworkBase.System.Runtime.Serialization.StreamingContext;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Runtime.Serialization.ObjectManager is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      procedure RecordFixup
      (
         this : in out ObjectManager.Kind;
         objectToBeFixed : NetFrameworkBase.Int64; 
         member : NetFrameworkBase.System.Reflection.MemberInfo.Kind_Ptr; 
         objectRequired : NetFrameworkBase.Int64
      );
      
      procedure RecordDelayedFixup
      (
         this : in out ObjectManager.Kind;
         objectToBeFixed : NetFrameworkBase.Int64; 
         memberName : NetFrameworkBase.BSTR; 
         objectRequired : NetFrameworkBase.Int64
      );
      
      procedure RecordArrayElementFixup
      (
         this : in out ObjectManager.Kind;
         arrayToBeFixed : NetFrameworkBase.Int64; 
         indices : NetFrameworkBase.Int32_Array; 
         objectRequired : NetFrameworkBase.Int64
      );
      
      function GetObject
      (
         this : in out ObjectManager.Kind;
         objectID : NetFrameworkBase.Int64
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      procedure RegisterObject
      (
         this : in out ObjectManager.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr; 
         objectID : NetFrameworkBase.Int64
      );
      
      procedure RegisterObject
      (
         this : in out ObjectManager.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr; 
         objectID : NetFrameworkBase.Int64; 
         info : NetFrameworkBase.System.Runtime.Serialization.SerializationInfo.Kind_Ptr
      );
      
      procedure RegisterObject
      (
         this : in out ObjectManager.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr; 
         objectID : NetFrameworkBase.Int64; 
         info : NetFrameworkBase.System.Runtime.Serialization.SerializationInfo.Kind_Ptr; 
         idOfContainingObj : NetFrameworkBase.Int64; 
         member : NetFrameworkBase.System.Reflection.MemberInfo.Kind_Ptr
      );
      
      procedure RegisterObject
      (
         this : in out ObjectManager.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr; 
         objectID : NetFrameworkBase.Int64; 
         info : NetFrameworkBase.System.Runtime.Serialization.SerializationInfo.Kind_Ptr; 
         idOfContainingObj : NetFrameworkBase.Int64; 
         member : NetFrameworkBase.System.Reflection.MemberInfo.Kind_Ptr; 
         arrayIndex : NetFrameworkBase.Int32_Array
      );
      
      procedure DoFixups
      (
         this : in out ObjectManager.Kind
      );
      
      procedure RecordArrayElementFixup
      (
         this : in out ObjectManager.Kind;
         arrayToBeFixed : NetFrameworkBase.Int64; 
         index : NetFrameworkBase.Int32; 
         objectRequired : NetFrameworkBase.Int64
      );
      
      procedure RaiseDeserializationEvent
      (
         this : in out ObjectManager.Kind
      );
      
      procedure RaiseOnDeserializingEvent
      (
         this : in out ObjectManager.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      function Constructor
      (
         selector : NetFrameworkBase.System.Runtime.Serialization.ISurrogateSelector.Kind_Ptr;
         context : NetFrameworkBase.System.Runtime.Serialization.StreamingContext.Kind_Ptr
      )
      return NetFrameworkBase.System.Runtime.Serialization.ObjectManager.Kind_Ptr;
      
end;
