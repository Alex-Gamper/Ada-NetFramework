--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Reflection.Assembly;
limited with NetFrameworkBase.System.Reflection.AssemblyName;
limited with NetFrameworkBase.System.Reflection.Emit.AssemblyBuilderAccess;
limited with NetFrameworkBase.System.Reflection.ResourceAttributes;
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Type_x;
limited with NetFrameworkBase.System.Globalization.CultureInfo;
limited with NetFrameworkBase.System.Version;
limited with NetFrameworkBase.System.Reflection.MethodInfo;
limited with NetFrameworkBase.System.Reflection.Emit.PEFileKinds;
limited with NetFrameworkBase.System.Reflection.ConstructorInfo;
limited with NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder;
limited with NetFrameworkBase.System.Reflection.PortableExecutableKinds;
limited with NetFrameworkBase.System.Reflection.ImageFileMachine;
limited with NetFrameworkBase.System.Reflection.Emit.ModuleBuilder;
limited with NetFrameworkBase.System.Resources.IResourceWriter;
limited with NetFrameworkBase.System.IO.FileStream;
limited with NetFrameworkBase.System.IO.Stream;
limited with NetFrameworkBase.System.Reflection.ManifestResourceInfo;
limited with NetFrameworkBase.System.Security.Policy.Evidence;
limited with NetFrameworkBase.System.Security.PermissionSet;
limited with NetFrameworkBase.System.Security.SecurityRuleSet;
limited with NetFrameworkBase.System.Reflection.Module;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Reflection.Emit.AssemblyBuilder is
   
   type Kind is new NetFrameworkBase.System.Reflection.Assembly.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function DefineDynamicAssembly
      (
         name : NetFrameworkBase.System.Reflection.AssemblyName.Kind_Ptr; 
         access_x : NetFrameworkBase.System.Reflection.Emit.AssemblyBuilderAccess.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.AssemblyBuilder.Kind_Ptr;
      
      function DefineDynamicModule
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Reflection.Emit.ModuleBuilder.Kind_Ptr;
      
      function DefineDynamicModule
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         emitSymbolInfo : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Reflection.Emit.ModuleBuilder.Kind_Ptr;
      
      function DefineDynamicModule
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         fileName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Reflection.Emit.ModuleBuilder.Kind_Ptr;
      
      function DefineDynamicModule
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         fileName : NetFrameworkBase.BSTR; 
         emitSymbolInfo : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Reflection.Emit.ModuleBuilder.Kind_Ptr;
      
      function DefineResource
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         description : NetFrameworkBase.BSTR; 
         fileName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Resources.IResourceWriter.Kind_Ptr;
      
      function DefineResource
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         description : NetFrameworkBase.BSTR; 
         fileName : NetFrameworkBase.BSTR; 
         attribute : NetFrameworkBase.System.Reflection.ResourceAttributes.Kind
      )
      return NetFrameworkBase.System.Resources.IResourceWriter.Kind_Ptr;
      
      procedure AddResourceFile
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         fileName : NetFrameworkBase.BSTR
      );
      
      procedure AddResourceFile
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         fileName : NetFrameworkBase.BSTR; 
         attribute : NetFrameworkBase.System.Reflection.ResourceAttributes.Kind
      );
      
      function Equals
      (
         this : in out AssemblyBuilder.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetHashCode
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.Int32;
      
      function GetCustomAttributes
      (
         this : in out AssemblyBuilder.Kind;
         inherit : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Object.Kind_Array;
      
      function GetCustomAttributes
      (
         this : in out AssemblyBuilder.Kind;
         attributeType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         inherit : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Object.Kind_Array;
      
      function IsDefined
      (
         this : in out AssemblyBuilder.Kind;
         attributeType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         inherit : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.Boolean;
      
      function GetManifestResourceNames
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.BSTR_Array;
      
      function GetFile
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.IO.FileStream.Kind_Ptr;
      
      function GetFiles
      (
         this : in out AssemblyBuilder.Kind;
         getResourceModules : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.IO.FileStream.Kind_Array;
      
      function GetManifestResourceStream
      (
         this : in out AssemblyBuilder.Kind;
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.IO.Stream.Kind_Ptr;
      
      function GetManifestResourceStream
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.IO.Stream.Kind_Ptr;
      
      function GetManifestResourceInfo
      (
         this : in out AssemblyBuilder.Kind;
         resourceName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Reflection.ManifestResourceInfo.Kind_Ptr;
      
      function Location
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function ImageRuntimeVersion
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function CodeBase
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function EntryPoint
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr;
      
      function GetExportedTypes
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Array;
      
      function GetName
      (
         this : in out AssemblyBuilder.Kind;
         copiedName : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Reflection.AssemblyName.Kind_Ptr;
      
      function FullName
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function GetType
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         throwOnError : NetFrameworkBase.Boolean; 
         ignoreCase : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function Evidence
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.System.Security.Policy.Evidence.Kind_Ptr;
      
      function PermissionSet
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.System.Security.PermissionSet.Kind_Ptr;
      
      function SecurityRuleSet
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.System.Security.SecurityRuleSet.Kind;
      
      function ManifestModule
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.Module.Kind_Ptr;
      
      function ReflectionOnly
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function GetModule
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Reflection.Module.Kind_Ptr;
      
      function GetReferencedAssemblies
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.AssemblyName.Kind_Array;
      
      function GlobalAssemblyCache
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function HostContext
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.Int64;
      
      function GetModules
      (
         this : in out AssemblyBuilder.Kind;
         getResourceModules : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Reflection.Module.Kind_Array;
      
      function GetLoadedModules
      (
         this : in out AssemblyBuilder.Kind;
         getResourceModules : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Reflection.Module.Kind_Array;
      
      function GetSatelliteAssembly
      (
         this : in out AssemblyBuilder.Kind;
         culture : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Reflection.Assembly.Kind_Ptr;
      
      function GetSatelliteAssembly
      (
         this : in out AssemblyBuilder.Kind;
         culture : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr; 
         version : NetFrameworkBase.System.Version.Kind_Ptr
      )
      return NetFrameworkBase.System.Reflection.Assembly.Kind_Ptr;
      
      function IsDynamic
      (
         this : in out AssemblyBuilder.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure DefineVersionInfoResource
      (
         this : in out AssemblyBuilder.Kind;
         product : NetFrameworkBase.BSTR; 
         productVersion : NetFrameworkBase.BSTR; 
         company : NetFrameworkBase.BSTR; 
         copyright : NetFrameworkBase.BSTR; 
         trademark : NetFrameworkBase.BSTR
      );
      
      procedure DefineVersionInfoResource
      (
         this : in out AssemblyBuilder.Kind
      );
      
      procedure DefineUnmanagedResource
      (
         this : in out AssemblyBuilder.Kind;
         resource : NetFrameworkBase.Byte_Array
      );
      
      procedure DefineUnmanagedResource
      (
         this : in out AssemblyBuilder.Kind;
         resourceFileName : NetFrameworkBase.BSTR
      );
      
      function GetDynamicModule
      (
         this : in out AssemblyBuilder.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Reflection.Emit.ModuleBuilder.Kind_Ptr;
      
      procedure SetEntryPoint
      (
         this : in out AssemblyBuilder.Kind;
         entryMethod : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      );
      
      procedure SetEntryPoint
      (
         this : in out AssemblyBuilder.Kind;
         entryMethod : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         fileKind : NetFrameworkBase.System.Reflection.Emit.PEFileKinds.Kind
      );
      
      procedure SetCustomAttribute
      (
         this : in out AssemblyBuilder.Kind;
         con : NetFrameworkBase.System.Reflection.ConstructorInfo.Kind_Ptr; 
         binaryAttribute : NetFrameworkBase.Byte_Array
      );
      
      procedure SetCustomAttribute
      (
         this : in out AssemblyBuilder.Kind;
         customBuilder : NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Kind_Ptr
      );
      
      procedure Save
      (
         this : in out AssemblyBuilder.Kind;
         assemblyFileName : NetFrameworkBase.BSTR
      );
      
      procedure Save
      (
         this : in out AssemblyBuilder.Kind;
         assemblyFileName : NetFrameworkBase.BSTR; 
         portableExecutableKind : NetFrameworkBase.System.Reflection.PortableExecutableKinds.Kind; 
         imageFileMachine : NetFrameworkBase.System.Reflection.ImageFileMachine.Kind
      );
      
end;
