--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Drawing.Size;
limited with NetFrameworkBase.System.EventHandler;
limited with NetFrameworkBase.System.Drawing.Point;
limited with NetFrameworkBase.System.Uri;
limited with NetFrameworkBase.System.Windows.Forms.HtmlElementErrorEventHandler;
limited with NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler;
limited with NetFrameworkBase.System.Windows.Forms.HtmlDocument;
limited with NetFrameworkBase.System.Windows.Forms.HtmlWindowCollection;
limited with NetFrameworkBase.System.Windows.Forms.HtmlHistory;
limited with NetFrameworkBase.System.Windows.Forms.HtmlElement;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Windows.Forms.HtmlWindow is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function Document
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlDocument.Kind_Ptr;
      
      function DomWindow
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function Frames
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlWindowCollection.Kind_Ptr;
      
      function History
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlHistory.Kind_Ptr;
      
      function IsClosed
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function Name
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Name
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function Opener
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr;
      
      function Parent
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr;
      
      function Position
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.System.Drawing.Point.Kind_Ptr;
      
      function Size
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.System.Drawing.Size.Kind_Ptr;
      
      procedure Size
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Drawing.Size.Kind_Ptr
      );
      
      function StatusBarText
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure StatusBarText
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function Url
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.System.Uri.Kind_Ptr;
      
      function WindowFrameElement
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr;
      
      procedure Alert
      (
         this : in out HtmlWindow.Kind;
         message : NetFrameworkBase.BSTR
      );
      
      procedure AttachEventHandler
      (
         this : in out HtmlWindow.Kind;
         eventName : NetFrameworkBase.BSTR; 
         eventHandler : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure Close
      (
         this : in out HtmlWindow.Kind
      );
      
      function Confirm
      (
         this : in out HtmlWindow.Kind;
         message : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      procedure DetachEventHandler
      (
         this : in out HtmlWindow.Kind;
         eventName : NetFrameworkBase.BSTR; 
         eventHandler : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure Focus
      (
         this : in out HtmlWindow.Kind
      );
      
      procedure MoveTo
      (
         this : in out HtmlWindow.Kind;
         x : NetFrameworkBase.Int32; 
         y : NetFrameworkBase.Int32
      );
      
      procedure MoveTo
      (
         this : in out HtmlWindow.Kind;
         point : NetFrameworkBase.System.Drawing.Point.Kind_Ptr
      );
      
      procedure Navigate
      (
         this : in out HtmlWindow.Kind;
         url : NetFrameworkBase.System.Uri.Kind_Ptr
      );
      
      procedure Navigate
      (
         this : in out HtmlWindow.Kind;
         urlString : NetFrameworkBase.BSTR
      );
      
      function Open
      (
         this : in out HtmlWindow.Kind;
         urlString : NetFrameworkBase.BSTR; 
         target : NetFrameworkBase.BSTR; 
         windowOptions : NetFrameworkBase.BSTR; 
         replaceEntry : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr;
      
      function Open
      (
         this : in out HtmlWindow.Kind;
         url : NetFrameworkBase.System.Uri.Kind_Ptr; 
         target : NetFrameworkBase.BSTR; 
         windowOptions : NetFrameworkBase.BSTR; 
         replaceEntry : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr;
      
      function OpenNew
      (
         this : in out HtmlWindow.Kind;
         url : NetFrameworkBase.System.Uri.Kind_Ptr; 
         windowOptions : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr;
      
      function Prompt
      (
         this : in out HtmlWindow.Kind;
         message : NetFrameworkBase.BSTR; 
         defaultInputValue : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      procedure RemoveFocus
      (
         this : in out HtmlWindow.Kind
      );
      
      procedure ResizeTo
      (
         this : in out HtmlWindow.Kind;
         width : NetFrameworkBase.Int32; 
         height : NetFrameworkBase.Int32
      );
      
      procedure ResizeTo
      (
         this : in out HtmlWindow.Kind;
         size : NetFrameworkBase.System.Drawing.Size.Kind_Ptr
      );
      
      procedure ScrollTo
      (
         this : in out HtmlWindow.Kind;
         x : NetFrameworkBase.Int32; 
         y : NetFrameworkBase.Int32
      );
      
      procedure ScrollTo
      (
         this : in out HtmlWindow.Kind;
         point : NetFrameworkBase.System.Drawing.Point.Kind_Ptr
      );
      
      procedure add_Error
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementErrorEventHandler.Kind_Ptr
      );
      
      procedure remove_Error
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementErrorEventHandler.Kind_Ptr
      );
      
      procedure add_GotFocus
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_GotFocus
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_Load
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_Load
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_LostFocus
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_LostFocus
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_Resize
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_Resize
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_Scroll
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_Scroll
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_Unload
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_Unload
      (
         this : in out HtmlWindow.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      function op_Equality
      (
         left : NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr; 
         right : NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      function "="(left : NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr; right : NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr) return NetFrameworkBase.Boolean renames op_Equality;
      
      function op_Inequality
      (
         left : NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr; 
         right : NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetHashCode
      (
         this : in out HtmlWindow.Kind
      )
      return NetFrameworkBase.Int32;
      
      function Equals
      (
         this : in out HtmlWindow.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function OpenNew
      (
         this : in out HtmlWindow.Kind;
         urlString : NetFrameworkBase.BSTR; 
         windowOptions : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr;
      
end;
