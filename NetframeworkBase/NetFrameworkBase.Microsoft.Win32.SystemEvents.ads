--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.EventHandler;
limited with NetFrameworkBase.Microsoft.Win32.PowerModeChangedEventHandler;
limited with NetFrameworkBase.Microsoft.Win32.SessionEndedEventHandler;
limited with NetFrameworkBase.Microsoft.Win32.SessionEndingEventHandler;
limited with NetFrameworkBase.Microsoft.Win32.SessionSwitchEventHandler;
limited with NetFrameworkBase.Microsoft.Win32.TimerElapsedEventHandler;
limited with NetFrameworkBase.Microsoft.Win32.UserPreferenceChangedEventHandler;
limited with NetFrameworkBase.Microsoft.Win32.UserPreferenceChangingEventHandler;
limited with NetFrameworkBase.System.Delegate;
--------------------------------------------------------------------------------
package NetFrameworkBase.Microsoft.Win32.SystemEvents is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      procedure add_DisplaySettingsChanging
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_DisplaySettingsChanging
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure add_DisplaySettingsChanged
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_DisplaySettingsChanged
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure add_EventsThreadShutdown
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_EventsThreadShutdown
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure add_InstalledFontsChanged
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_InstalledFontsChanged
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure add_LowMemory
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_LowMemory
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure add_PaletteChanged
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_PaletteChanged
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure add_PowerModeChanged
      (
         value : NetFrameworkBase.Microsoft.Win32.PowerModeChangedEventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_PowerModeChanged
      (
         value : NetFrameworkBase.Microsoft.Win32.PowerModeChangedEventHandler.Kind_Ptr
      )
      ;
      
      procedure add_SessionEnded
      (
         value : NetFrameworkBase.Microsoft.Win32.SessionEndedEventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_SessionEnded
      (
         value : NetFrameworkBase.Microsoft.Win32.SessionEndedEventHandler.Kind_Ptr
      )
      ;
      
      procedure add_SessionEnding
      (
         value : NetFrameworkBase.Microsoft.Win32.SessionEndingEventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_SessionEnding
      (
         value : NetFrameworkBase.Microsoft.Win32.SessionEndingEventHandler.Kind_Ptr
      )
      ;
      
      procedure add_SessionSwitch
      (
         value : NetFrameworkBase.Microsoft.Win32.SessionSwitchEventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_SessionSwitch
      (
         value : NetFrameworkBase.Microsoft.Win32.SessionSwitchEventHandler.Kind_Ptr
      )
      ;
      
      procedure add_TimeChanged
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_TimeChanged
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure add_TimerElapsed
      (
         value : NetFrameworkBase.Microsoft.Win32.TimerElapsedEventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_TimerElapsed
      (
         value : NetFrameworkBase.Microsoft.Win32.TimerElapsedEventHandler.Kind_Ptr
      )
      ;
      
      procedure add_UserPreferenceChanged
      (
         value : NetFrameworkBase.Microsoft.Win32.UserPreferenceChangedEventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_UserPreferenceChanged
      (
         value : NetFrameworkBase.Microsoft.Win32.UserPreferenceChangedEventHandler.Kind_Ptr
      )
      ;
      
      procedure add_UserPreferenceChanging
      (
         value : NetFrameworkBase.Microsoft.Win32.UserPreferenceChangingEventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_UserPreferenceChanging
      (
         value : NetFrameworkBase.Microsoft.Win32.UserPreferenceChangingEventHandler.Kind_Ptr
      )
      ;
      
      procedure KillTimer
      (
         timerId : NetFrameworkBase.IntPtr
      )
      ;
      
      function CreateTimer
      (
         interval : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.IntPtr;
      
      procedure InvokeOnEventsThread
      (
         method : NetFrameworkBase.System.Delegate.Kind_Ptr
      )
      ;
      
end;
