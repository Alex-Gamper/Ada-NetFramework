--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Xml.XmlLinkedNode;
limited with NetFrameworkBase.System.Xml.XmlAttribute;
limited with NetFrameworkBase.System.Xml.XmlWriter;
limited with NetFrameworkBase.System.Xml.XmlNode;
limited with NetFrameworkBase.System.Xml.XmlNodeType;
limited with NetFrameworkBase.System.Xml.XmlDocument;
limited with NetFrameworkBase.System.Xml.XmlAttributeCollection;
limited with NetFrameworkBase.System.Xml.XmlNodeList;
limited with NetFrameworkBase.System.Xml.Schema.IXmlSchemaInfo;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Xml.XmlElement is
   
   type Kind is new NetFrameworkBase.System.Xml.XmlLinkedNode.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function CloneNode
      (
         this : in out XmlElement.Kind;
         deep : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Xml.XmlNode.Kind_Ptr;
      
      function Name
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function LocalName
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function NamespaceURI
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Prefix
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Prefix
      (
         this : in out XmlElement.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function NodeType
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.System.Xml.XmlNodeType.Kind;
      
      function ParentNode
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.System.Xml.XmlNode.Kind_Ptr;
      
      function OwnerDocument
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.System.Xml.XmlDocument.Kind_Ptr;
      
      function IsEmpty
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure IsEmpty
      (
         this : in out XmlElement.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function Attributes
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.System.Xml.XmlAttributeCollection.Kind_Ptr;
      
      function HasAttributes
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function GetAttribute
      (
         this : in out XmlElement.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      procedure SetAttribute
      (
         this : in out XmlElement.Kind;
         name : NetFrameworkBase.BSTR; 
         value : NetFrameworkBase.BSTR
      );
      
      procedure RemoveAttribute
      (
         this : in out XmlElement.Kind;
         name : NetFrameworkBase.BSTR
      );
      
      function GetAttributeNode
      (
         this : in out XmlElement.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Xml.XmlAttribute.Kind_Ptr;
      
      function SetAttributeNode
      (
         this : in out XmlElement.Kind;
         newAttr : NetFrameworkBase.System.Xml.XmlAttribute.Kind_Ptr
      )
      return NetFrameworkBase.System.Xml.XmlAttribute.Kind_Ptr;
      
      function RemoveAttributeNode
      (
         this : in out XmlElement.Kind;
         oldAttr : NetFrameworkBase.System.Xml.XmlAttribute.Kind_Ptr
      )
      return NetFrameworkBase.System.Xml.XmlAttribute.Kind_Ptr;
      
      function GetElementsByTagName
      (
         this : in out XmlElement.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Xml.XmlNodeList.Kind_Ptr;
      
      function GetAttribute
      (
         this : in out XmlElement.Kind;
         localName : NetFrameworkBase.BSTR; 
         namespaceURI : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      function SetAttribute
      (
         this : in out XmlElement.Kind;
         localName : NetFrameworkBase.BSTR; 
         namespaceURI : NetFrameworkBase.BSTR; 
         value : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      procedure RemoveAttribute
      (
         this : in out XmlElement.Kind;
         localName : NetFrameworkBase.BSTR; 
         namespaceURI : NetFrameworkBase.BSTR
      );
      
      function GetAttributeNode
      (
         this : in out XmlElement.Kind;
         localName : NetFrameworkBase.BSTR; 
         namespaceURI : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Xml.XmlAttribute.Kind_Ptr;
      
      function SetAttributeNode
      (
         this : in out XmlElement.Kind;
         localName : NetFrameworkBase.BSTR; 
         namespaceURI : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Xml.XmlAttribute.Kind_Ptr;
      
      function RemoveAttributeNode
      (
         this : in out XmlElement.Kind;
         localName : NetFrameworkBase.BSTR; 
         namespaceURI : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Xml.XmlAttribute.Kind_Ptr;
      
      function GetElementsByTagName
      (
         this : in out XmlElement.Kind;
         localName : NetFrameworkBase.BSTR; 
         namespaceURI : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Xml.XmlNodeList.Kind_Ptr;
      
      function HasAttribute
      (
         this : in out XmlElement.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function HasAttribute
      (
         this : in out XmlElement.Kind;
         localName : NetFrameworkBase.BSTR; 
         namespaceURI : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      procedure WriteTo
      (
         this : in out XmlElement.Kind;
         w : NetFrameworkBase.System.Xml.XmlWriter.Kind_Ptr
      );
      
      procedure WriteContentTo
      (
         this : in out XmlElement.Kind;
         w : NetFrameworkBase.System.Xml.XmlWriter.Kind_Ptr
      );
      
      function RemoveAttributeAt
      (
         this : in out XmlElement.Kind;
         i : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Xml.XmlNode.Kind_Ptr;
      
      procedure RemoveAllAttributes
      (
         this : in out XmlElement.Kind
      );
      
      procedure RemoveAll
      (
         this : in out XmlElement.Kind
      );
      
      function SchemaInfo
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.System.Xml.Schema.IXmlSchemaInfo.Kind_Ptr;
      
      function InnerXml
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure InnerXml
      (
         this : in out XmlElement.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function InnerText
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure InnerText
      (
         this : in out XmlElement.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function NextSibling
      (
         this : in out XmlElement.Kind
      )
      return NetFrameworkBase.System.Xml.XmlNode.Kind_Ptr;
      
end;
