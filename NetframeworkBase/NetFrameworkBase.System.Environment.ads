--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Environment.SpecialFolder;
limited with NetFrameworkBase.System.Environment.SpecialFolderOption;
limited with NetFrameworkBase.System.Exception_x;
limited with NetFrameworkBase.System.EnvironmentVariableTarget;
limited with NetFrameworkBase.System.Collections.IDictionary;
limited with NetFrameworkBase.System.Version;
limited with NetFrameworkBase.System.OperatingSystem;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Environment is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      procedure Exit_x
      (
         exitCode : NetFrameworkBase.Int32
      )
      ;
      
      function CurrentDirectory
      return NetFrameworkBase.BSTR;
      
      procedure CurrentDirectory
      (
         value : NetFrameworkBase.BSTR
      )
      ;
      
      function SystemDirectory
      return NetFrameworkBase.BSTR;
      
      function ProcessorCount
      return NetFrameworkBase.Int32;
      
      function SystemPageSize
      return NetFrameworkBase.Int32;
      
      function GetEnvironmentVariable
      (
         variable : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      function GetEnvironmentVariables
      return NetFrameworkBase.System.Collections.IDictionary.Kind_Ptr;
      
      procedure SetEnvironmentVariable
      (
         variable : NetFrameworkBase.BSTR;
         value : NetFrameworkBase.BSTR
      )
      ;
      
      function GetLogicalDrives
      return NetFrameworkBase.BSTR_Array;
      
      function Version
      return NetFrameworkBase.System.Version.Kind_Ptr;
      
      function WorkingSet
      return NetFrameworkBase.Int64;
      
      function OSVersion
      return NetFrameworkBase.System.OperatingSystem.Kind_Ptr;
      
      function StackTrace
      return NetFrameworkBase.BSTR;
      
      function Is64BitProcess
      return NetFrameworkBase.Boolean;
      
      function UserInteractive
      return NetFrameworkBase.Boolean;
      
      function GetFolderPath
      (
         folder : NetFrameworkBase.System.Environment.SpecialFolder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function GetFolderPath
      (
         folder : NetFrameworkBase.System.Environment.SpecialFolder.Kind;
         option : NetFrameworkBase.System.Environment.SpecialFolderOption.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function CurrentManagedThreadId
      return NetFrameworkBase.Int32;
      
      procedure ExitCode
      (
         value : NetFrameworkBase.Int32
      )
      ;
      
      procedure FailFast
      (
         message : NetFrameworkBase.BSTR
      )
      ;
      
      procedure FailFast
      (
         message : NetFrameworkBase.BSTR;
         exception_x : NetFrameworkBase.System.Exception_x.Kind_Ptr
      )
      ;
      
      function GetEnvironmentVariables
      (
         target : NetFrameworkBase.System.EnvironmentVariableTarget.Kind
      )
      return NetFrameworkBase.System.Collections.IDictionary.Kind_Ptr;
      
      procedure SetEnvironmentVariable
      (
         variable : NetFrameworkBase.BSTR;
         value : NetFrameworkBase.BSTR;
         target : NetFrameworkBase.System.EnvironmentVariableTarget.Kind
      )
      ;
      
      function UserDomainName
      return NetFrameworkBase.BSTR;
      
      function TickCount
      return NetFrameworkBase.Int32;
      
      function ExitCode
      return NetFrameworkBase.Int32;
      
      function CommandLine
      return NetFrameworkBase.BSTR;
      
      function ExpandEnvironmentVariables
      (
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      function MachineName
      return NetFrameworkBase.BSTR;
      
      function GetCommandLineArgs
      return NetFrameworkBase.BSTR_Array;
      
      function GetEnvironmentVariable
      (
         variable : NetFrameworkBase.BSTR;
         target : NetFrameworkBase.System.EnvironmentVariableTarget.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function NewLine
      return NetFrameworkBase.BSTR;
      
      function Is64BitOperatingSystem
      return NetFrameworkBase.Boolean;
      
      function HasShutdownStarted
      return NetFrameworkBase.Boolean;
      
      function UserName
      return NetFrameworkBase.BSTR;
      
end;
