--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.IO.FileStream;
limited with NetFrameworkBase.System.AsyncCallback;
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.IAsyncResult;
limited with NetFrameworkBase.System.IO.SeekOrigin;
limited with NetFrameworkBase.System.IO.FileMode;
limited with NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFile;
limited with NetFrameworkBase.System.IO.FileAccess;
limited with NetFrameworkBase.System.IO.FileShare;
limited with NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeFileHandle;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFileStream is
   
   type Kind is new NetFrameworkBase.System.IO.FileStream.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function CanRead
      (
         this : in out IsolatedStorageFileStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function CanWrite
      (
         this : in out IsolatedStorageFileStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function CanSeek
      (
         this : in out IsolatedStorageFileStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsAsync
      (
         this : in out IsolatedStorageFileStream.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function Length
      (
         this : in out IsolatedStorageFileStream.Kind
      )
      return NetFrameworkBase.Int64;
      
      function Position
      (
         this : in out IsolatedStorageFileStream.Kind
      )
      return NetFrameworkBase.Int64;
      
      procedure Position
      (
         this : in out IsolatedStorageFileStream.Kind;
         value : NetFrameworkBase.Int64
      );
      
      procedure Flush
      (
         this : in out IsolatedStorageFileStream.Kind
      );
      
      procedure Flush
      (
         this : in out IsolatedStorageFileStream.Kind;
         flushToDisk : NetFrameworkBase.Boolean
      );
      
      function Handle
      (
         this : in out IsolatedStorageFileStream.Kind
      )
      return NetFrameworkBase.IntPtr;
      
      function SafeFileHandle
      (
         this : in out IsolatedStorageFileStream.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeFileHandle.Kind_Ptr;
      
      function Read
      (
         this : in out IsolatedStorageFileStream.Kind;
         buffer : in out NetFrameworkBase.Byte_Array; 
         offset : NetFrameworkBase.Int32; 
         count : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int32;
      
      function ReadByte
      (
         this : in out IsolatedStorageFileStream.Kind
      )
      return NetFrameworkBase.Int32;
      
      function BeginRead
      (
         this : in out IsolatedStorageFileStream.Kind;
         buffer : NetFrameworkBase.Byte_Array; 
         offset : NetFrameworkBase.Int32; 
         numBytes : NetFrameworkBase.Int32; 
         userCallback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         stateObject : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function EndRead
      (
         this : in out IsolatedStorageFileStream.Kind;
         asyncResult : NetFrameworkBase.System.IAsyncResult.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      procedure EndWrite
      (
         this : in out IsolatedStorageFileStream.Kind;
         asyncResult : NetFrameworkBase.System.IAsyncResult.Kind_Ptr
      );
      
      procedure SetLength
      (
         this : in out IsolatedStorageFileStream.Kind;
         value : NetFrameworkBase.Int64
      );
      
      procedure Lock
      (
         this : in out IsolatedStorageFileStream.Kind;
         position : NetFrameworkBase.Int64; 
         length : NetFrameworkBase.Int64
      );
      
      procedure Unlock
      (
         this : in out IsolatedStorageFileStream.Kind;
         position : NetFrameworkBase.Int64; 
         length : NetFrameworkBase.Int64
      );
      
      function Seek
      (
         this : in out IsolatedStorageFileStream.Kind;
         offset : NetFrameworkBase.Int64; 
         origin : NetFrameworkBase.System.IO.SeekOrigin.Kind
      )
      return NetFrameworkBase.Int64;
      
      procedure Write
      (
         this : in out IsolatedStorageFileStream.Kind;
         buffer : NetFrameworkBase.Byte_Array; 
         offset : NetFrameworkBase.Int32; 
         count : NetFrameworkBase.Int32
      );
      
      procedure WriteByte
      (
         this : in out IsolatedStorageFileStream.Kind;
         value : NetFrameworkBase.Byte
      );
      
      function BeginWrite
      (
         this : in out IsolatedStorageFileStream.Kind;
         buffer : NetFrameworkBase.Byte_Array; 
         offset : NetFrameworkBase.Int32; 
         numBytes : NetFrameworkBase.Int32; 
         userCallback : NetFrameworkBase.System.AsyncCallback.Kind_Ptr; 
         stateObject : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.IAsyncResult.Kind_Ptr;
      
      function Constructor
      (
         path : NetFrameworkBase.BSTR;
         mode : NetFrameworkBase.System.IO.FileMode.Kind
      )
      return NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFileStream.Kind_Ptr;
      
      function Constructor
      (
         path : NetFrameworkBase.BSTR;
         mode : NetFrameworkBase.System.IO.FileMode.Kind;
         isf : NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFile.Kind_Ptr
      )
      return NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFileStream.Kind_Ptr;
      
      function Constructor
      (
         path : NetFrameworkBase.BSTR;
         mode : NetFrameworkBase.System.IO.FileMode.Kind;
         access_x : NetFrameworkBase.System.IO.FileAccess.Kind
      )
      return NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFileStream.Kind_Ptr;
      
      function Constructor
      (
         path : NetFrameworkBase.BSTR;
         mode : NetFrameworkBase.System.IO.FileMode.Kind;
         access_x : NetFrameworkBase.System.IO.FileAccess.Kind;
         isf : NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFile.Kind_Ptr
      )
      return NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFileStream.Kind_Ptr;
      
      function Constructor
      (
         path : NetFrameworkBase.BSTR;
         mode : NetFrameworkBase.System.IO.FileMode.Kind;
         access_x : NetFrameworkBase.System.IO.FileAccess.Kind;
         share : NetFrameworkBase.System.IO.FileShare.Kind
      )
      return NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFileStream.Kind_Ptr;
      
      function Constructor
      (
         path : NetFrameworkBase.BSTR;
         mode : NetFrameworkBase.System.IO.FileMode.Kind;
         access_x : NetFrameworkBase.System.IO.FileAccess.Kind;
         share : NetFrameworkBase.System.IO.FileShare.Kind;
         isf : NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFile.Kind_Ptr
      )
      return NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFileStream.Kind_Ptr;
      
      function Constructor
      (
         path : NetFrameworkBase.BSTR;
         mode : NetFrameworkBase.System.IO.FileMode.Kind;
         access_x : NetFrameworkBase.System.IO.FileAccess.Kind;
         share : NetFrameworkBase.System.IO.FileShare.Kind;
         bufferSize : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFileStream.Kind_Ptr;
      
      function Constructor
      (
         path : NetFrameworkBase.BSTR;
         mode : NetFrameworkBase.System.IO.FileMode.Kind;
         access_x : NetFrameworkBase.System.IO.FileAccess.Kind;
         share : NetFrameworkBase.System.IO.FileShare.Kind;
         bufferSize : NetFrameworkBase.Int32;
         isf : NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFile.Kind_Ptr
      )
      return NetFrameworkBase.System.IO.IsolatedStorage.IsolatedStorageFileStream.Kind_Ptr;
      
end;
