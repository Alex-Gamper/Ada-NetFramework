--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Enum;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Net.Sockets.SocketError is
   
   type Kind_Clr is new NetFrameworkBase.System.Enum.Kind with null record;
   type Kind_Clr_Ptr is access Kind_Clr;
   type Kind_Clr_Array is array(Natural range<>) of Kind_Clr_Ptr;
   type Kind_Clr_Array_Ptr is access all Kind_Clr_Array;
   
   type Kind is (
      SocketError,
      Success,
      OperationAborted,
      IOPending,
      Interrupted,
      AccessDenied,
      Fault,
      InvalidArgument,
      TooManyOpenSockets,
      WouldBlock,
      InProgress,
      AlreadyInProgress,
      NotSocket,
      DestinationAddressRequired,
      MessageSize,
      ProtocolType,
      ProtocolOption,
      ProtocolNotSupported,
      SocketNotSupported,
      OperationNotSupported,
      ProtocolFamilyNotSupported,
      AddressFamilyNotSupported,
      AddressAlreadyInUse,
      AddressNotAvailable,
      NetworkDown,
      NetworkUnreachable,
      NetworkReset,
      ConnectionAborted,
      ConnectionReset,
      NoBufferSpaceAvailable,
      IsConnected,
      NotConnected,
      Shutdown,
      TimedOut,
      ConnectionRefused,
      HostDown,
      HostUnreachable,
      ProcessLimit,
      SystemNotReady,
      VersionNotSupported,
      NotInitialized,
      Disconnecting,
      TypeNotFound,
      HostNotFound,
      TryAgain,
      NoRecovery,
      NoData
   );
   
   for Kind use (
      SocketError => -1,
      Success => 0,
      OperationAborted => 995,
      IOPending => 997,
      Interrupted => 10004,
      AccessDenied => 10013,
      Fault => 10014,
      InvalidArgument => 10022,
      TooManyOpenSockets => 10024,
      WouldBlock => 10035,
      InProgress => 10036,
      AlreadyInProgress => 10037,
      NotSocket => 10038,
      DestinationAddressRequired => 10039,
      MessageSize => 10040,
      ProtocolType => 10041,
      ProtocolOption => 10042,
      ProtocolNotSupported => 10043,
      SocketNotSupported => 10044,
      OperationNotSupported => 10045,
      ProtocolFamilyNotSupported => 10046,
      AddressFamilyNotSupported => 10047,
      AddressAlreadyInUse => 10048,
      AddressNotAvailable => 10049,
      NetworkDown => 10050,
      NetworkUnreachable => 10051,
      NetworkReset => 10052,
      ConnectionAborted => 10053,
      ConnectionReset => 10054,
      NoBufferSpaceAvailable => 10055,
      IsConnected => 10056,
      NotConnected => 10057,
      Shutdown => 10058,
      TimedOut => 10060,
      ConnectionRefused => 10061,
      HostDown => 10064,
      HostUnreachable => 10065,
      ProcessLimit => 10067,
      SystemNotReady => 10091,
      VersionNotSupported => 10092,
      NotInitialized => 10093,
      Disconnecting => 10101,
      TypeNotFound => 10109,
      HostNotFound => 11001,
      TryAgain => 11002,
      NoRecovery => 11003,
      NoData => 11004
   );
   
   for Kind'Size use 32;
   
   type Kind_Ptr is access Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
   function Instance return NetFrameworkWin32.IType_Ptr;
   
end;
