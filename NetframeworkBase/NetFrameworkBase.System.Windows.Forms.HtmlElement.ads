--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.EventHandler;
limited with NetFrameworkBase.System.Windows.Forms.HtmlElementInsertionOrientation;
limited with NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler;
limited with NetFrameworkBase.System.Windows.Forms.HtmlElementCollection;
limited with NetFrameworkBase.System.Drawing.Rectangle;
limited with NetFrameworkBase.System.Windows.Forms.HtmlDocument;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Windows.Forms.HtmlElement is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function All_x
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElementCollection.Kind_Ptr;
      
      function Children
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElementCollection.Kind_Ptr;
      
      function CanHaveChildren
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function ClientRectangle
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.System.Drawing.Rectangle.Kind_Ptr;
      
      function Document
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlDocument.Kind_Ptr;
      
      function Enabled
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure Enabled
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function FirstChild
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr;
      
      function Id
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Id
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function InnerHtml
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure InnerHtml
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function InnerText
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure InnerText
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function NextSibling
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr;
      
      function OffsetRectangle
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.System.Drawing.Rectangle.Kind_Ptr;
      
      function OffsetParent
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr;
      
      function OuterHtml
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure OuterHtml
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function OuterText
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure OuterText
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function Parent
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr;
      
      function ScrollRectangle
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.System.Drawing.Rectangle.Kind_Ptr;
      
      function ScrollLeft
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure ScrollLeft
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function ScrollTop
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure ScrollTop
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function Style
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Style
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function TagName
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function TabIndex
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.Int16;
      
      procedure TabIndex
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.Int16
      );
      
      function DomElement
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function AppendChild
      (
         this : in out HtmlElement.Kind;
         newElement : NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr;
      
      procedure AttachEventHandler
      (
         this : in out HtmlElement.Kind;
         eventName : NetFrameworkBase.BSTR; 
         eventHandler : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure DetachEventHandler
      (
         this : in out HtmlElement.Kind;
         eventName : NetFrameworkBase.BSTR; 
         eventHandler : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure Focus
      (
         this : in out HtmlElement.Kind
      );
      
      function GetAttribute
      (
         this : in out HtmlElement.Kind;
         attributeName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      function GetElementsByTagName
      (
         this : in out HtmlElement.Kind;
         tagName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElementCollection.Kind_Ptr;
      
      function InsertAdjacentElement
      (
         this : in out HtmlElement.Kind;
         orient : NetFrameworkBase.System.Windows.Forms.HtmlElementInsertionOrientation.Kind; 
         newElement : NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr;
      
      function InvokeMember
      (
         this : in out HtmlElement.Kind;
         methodName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      procedure RemoveFocus
      (
         this : in out HtmlElement.Kind
      );
      
      procedure RaiseEvent
      (
         this : in out HtmlElement.Kind;
         eventName : NetFrameworkBase.BSTR
      );
      
      procedure ScrollIntoView
      (
         this : in out HtmlElement.Kind;
         alignWithTop : NetFrameworkBase.Boolean
      );
      
      procedure SetAttribute
      (
         this : in out HtmlElement.Kind;
         attributeName : NetFrameworkBase.BSTR; 
         value : NetFrameworkBase.BSTR
      );
      
      procedure add_Click
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_Click
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_DoubleClick
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_DoubleClick
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_Drag
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_Drag
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_DragEnd
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_DragEnd
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_DragLeave
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_DragLeave
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_DragOver
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_DragOver
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_Focusing
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_Focusing
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_GotFocus
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_GotFocus
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_LosingFocus
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_LosingFocus
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_LostFocus
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_LostFocus
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_KeyDown
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_KeyDown
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_KeyPress
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_KeyPress
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_KeyUp
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_KeyUp
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_MouseMove
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_MouseMove
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_MouseDown
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_MouseDown
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_MouseOver
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_MouseOver
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_MouseUp
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_MouseUp
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_MouseEnter
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_MouseEnter
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_MouseLeave
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_MouseLeave
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      function op_Equality
      (
         left : NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr; 
         right : NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      function "="(left : NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr; right : NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr) return NetFrameworkBase.Boolean renames op_Equality;
      
      function op_Inequality
      (
         left : NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr; 
         right : NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetHashCode
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.Int32;
      
      function Equals
      (
         this : in out HtmlElement.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function Name
      (
         this : in out HtmlElement.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Name
      (
         this : in out HtmlElement.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function InvokeMember
      (
         this : in out HtmlElement.Kind;
         methodName : NetFrameworkBase.BSTR; 
         parameter : NetFrameworkBase.System.Object.Kind_Array
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
end;
