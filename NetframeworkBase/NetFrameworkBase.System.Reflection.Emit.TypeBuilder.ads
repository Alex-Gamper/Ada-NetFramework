--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Reflection.TypeInfo;
limited with NetFrameworkBase.System.Type_x;
limited with NetFrameworkBase.System.Reflection.MethodInfo;
limited with NetFrameworkBase.System.Reflection.ConstructorInfo;
limited with NetFrameworkBase.System.Reflection.FieldInfo;
limited with NetFrameworkBase.System.Reflection.BindingFlags;
limited with NetFrameworkBase.System.Reflection.Binder;
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Reflection.ParameterModifier;
limited with NetFrameworkBase.System.Globalization.CultureInfo;
limited with NetFrameworkBase.System.Reflection.MemberTypes;
limited with NetFrameworkBase.System.Reflection.MethodAttributes;
limited with NetFrameworkBase.System.Reflection.CallingConventions;
limited with NetFrameworkBase.System.Runtime.InteropServices.CallingConvention;
limited with NetFrameworkBase.System.Runtime.InteropServices.CharSet;
limited with NetFrameworkBase.System.Reflection.TypeAttributes;
limited with NetFrameworkBase.System.Reflection.Emit.PackingSize;
limited with NetFrameworkBase.System.Reflection.FieldAttributes;
limited with NetFrameworkBase.System.Reflection.PropertyAttributes;
limited with NetFrameworkBase.System.Reflection.EventAttributes;
limited with NetFrameworkBase.System.Security.Permissions.SecurityAction;
limited with NetFrameworkBase.System.Security.PermissionSet;
limited with NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder;
limited with NetFrameworkBase.System.Reflection.Module;
limited with NetFrameworkBase.System.Guid;
limited with NetFrameworkBase.System.Reflection.Assembly;
limited with NetFrameworkBase.System.RuntimeTypeHandle;
limited with NetFrameworkBase.System.Reflection.EventInfo;
limited with NetFrameworkBase.System.Reflection.PropertyInfo;
limited with NetFrameworkBase.System.Reflection.MemberInfo;
limited with NetFrameworkBase.System.Reflection.InterfaceMapping;
limited with NetFrameworkBase.System.Reflection.GenericParameterAttributes;
limited with NetFrameworkBase.System.Reflection.Emit.GenericTypeParameterBuilder;
limited with NetFrameworkBase.System.Reflection.MethodBase;
limited with NetFrameworkBase.System.Reflection.Emit.MethodBuilder;
limited with NetFrameworkBase.System.Reflection.Emit.ConstructorBuilder;
limited with NetFrameworkBase.System.Reflection.Emit.FieldBuilder;
limited with NetFrameworkBase.System.Reflection.Emit.PropertyBuilder;
limited with NetFrameworkBase.System.Reflection.Emit.EventBuilder;
limited with NetFrameworkBase.System.Reflection.Emit.TypeToken;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Reflection.Emit.TypeBuilder is
   
   type Kind is new NetFrameworkBase.System.Reflection.TypeInfo.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function IsAssignableFrom
      (
         this : in out TypeBuilder.Kind;
         typeInfo : NetFrameworkBase.System.Reflection.TypeInfo.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetMethod
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         method : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr;
      
      function GetConstructor
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         constructor : NetFrameworkBase.System.Reflection.ConstructorInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Reflection.ConstructorInfo.Kind_Ptr;
      
      function GetField
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         field : NetFrameworkBase.System.Reflection.FieldInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Reflection.FieldInfo.Kind_Ptr;
      
      function IsCreated
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function ToString
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function DeclaringType
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function ReflectedType
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function Name
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Module
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.Module.Kind_Ptr;
      
      function GUID
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Guid.Kind_Ptr;
      
      function InvokeMember
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         invokeAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind; 
         binder : NetFrameworkBase.System.Reflection.Binder.Kind_Ptr; 
         target : NetFrameworkBase.System.Object.Kind_Ptr; 
         args : NetFrameworkBase.System.Object.Kind_Array; 
         modifiers : NetFrameworkBase.System.Reflection.ParameterModifier.Kind_Array_Ptr; 
         culture : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr; 
         namedParameters : NetFrameworkBase.BSTR_Array
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function Assembly
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.Assembly.Kind_Ptr;
      
      function TypeHandle
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.RuntimeTypeHandle.Kind_Ptr;
      
      function FullName
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Namespace
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function AssemblyQualifiedName
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function BaseType
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function GetConstructors
      (
         this : in out TypeBuilder.Kind;
         bindingAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind
      )
      return NetFrameworkBase.System.Reflection.ConstructorInfo.Kind_Array;
      
      function GetMethods
      (
         this : in out TypeBuilder.Kind;
         bindingAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind
      )
      return NetFrameworkBase.System.Reflection.MethodInfo.Kind_Array;
      
      function GetField
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         bindingAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind
      )
      return NetFrameworkBase.System.Reflection.FieldInfo.Kind_Ptr;
      
      function GetFields
      (
         this : in out TypeBuilder.Kind;
         bindingAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind
      )
      return NetFrameworkBase.System.Reflection.FieldInfo.Kind_Array;
      
      function GetInterface
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         ignoreCase : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function GetInterfaces
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Array;
      
      function GetEvent
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         bindingAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind
      )
      return NetFrameworkBase.System.Reflection.EventInfo.Kind_Ptr;
      
      function GetEvents
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.EventInfo.Kind_Array;
      
      function GetProperties
      (
         this : in out TypeBuilder.Kind;
         bindingAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind
      )
      return NetFrameworkBase.System.Reflection.PropertyInfo.Kind_Array;
      
      function GetNestedTypes
      (
         this : in out TypeBuilder.Kind;
         bindingAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Array;
      
      function GetNestedType
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         bindingAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function GetMember
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         type_x : NetFrameworkBase.System.Reflection.MemberTypes.Kind; 
         bindingAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind
      )
      return NetFrameworkBase.System.Reflection.MemberInfo.Kind_Array;
      
      function GetInterfaceMap
      (
         this : in out TypeBuilder.Kind;
         interfaceType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Reflection.InterfaceMapping.Kind_Ptr;
      
      function GetEvents
      (
         this : in out TypeBuilder.Kind;
         bindingAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind
      )
      return NetFrameworkBase.System.Reflection.EventInfo.Kind_Array;
      
      function GetMembers
      (
         this : in out TypeBuilder.Kind;
         bindingAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind
      )
      return NetFrameworkBase.System.Reflection.MemberInfo.Kind_Array;
      
      function IsAssignableFrom
      (
         this : in out TypeBuilder.Kind;
         c : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetElementType
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function IsSecurityCritical
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsSecuritySafeCritical
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsSecurityTransparent
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsSubclassOf
      (
         this : in out TypeBuilder.Kind;
         c : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function UnderlyingSystemType
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function GetCustomAttributes
      (
         this : in out TypeBuilder.Kind;
         inherit : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Object.Kind_Array;
      
      function GetCustomAttributes
      (
         this : in out TypeBuilder.Kind;
         attributeType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         inherit : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Object.Kind_Array;
      
      function IsDefined
      (
         this : in out TypeBuilder.Kind;
         attributeType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         inherit : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.Boolean;
      
      function GenericParameterAttributes
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.GenericParameterAttributes.Kind;
      
      function DefineGenericParameters
      (
         this : in out TypeBuilder.Kind;
         names : NetFrameworkBase.BSTR_Array
      )
      return NetFrameworkBase.System.Reflection.Emit.GenericTypeParameterBuilder.Kind_Array;
      
      function MakeGenericType
      (
         this : in out TypeBuilder.Kind;
         typeArguments : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function GetGenericArguments
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Array;
      
      function IsGenericTypeDefinition
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsGenericType
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsGenericParameter
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function IsConstructedGenericType
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function GenericParameterPosition
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.Int32;
      
      function DeclaringMethod
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.MethodBase.Kind_Ptr;
      
      function GetGenericTypeDefinition
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      procedure DefineMethodOverride
      (
         this : in out TypeBuilder.Kind;
         methodInfoBody : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr; 
         methodInfoDeclaration : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      );
      
      function DefineMethod
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Reflection.Emit.MethodBuilder.Kind_Ptr;
      
      function DefineMethod
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.MethodBuilder.Kind_Ptr;
      
      function DefineMethod
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind; 
         callingConvention : NetFrameworkBase.System.Reflection.CallingConventions.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.MethodBuilder.Kind_Ptr;
      
      function DefineMethod
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind; 
         callingConvention : NetFrameworkBase.System.Reflection.CallingConventions.Kind; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Reflection.Emit.MethodBuilder.Kind_Ptr;
      
      function DefineMethod
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind; 
         callingConvention : NetFrameworkBase.System.Reflection.CallingConventions.Kind; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         returnTypeRequiredCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         returnTypeOptionalCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array; 
         parameterTypeRequiredCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         parameterTypeOptionalCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Reflection.Emit.MethodBuilder.Kind_Ptr;
      
      function DefineTypeInitializer
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.ConstructorBuilder.Kind_Ptr;
      
      function DefineDefaultConstructor
      (
         this : in out TypeBuilder.Kind;
         attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.ConstructorBuilder.Kind_Ptr;
      
      function DefineConstructor
      (
         this : in out TypeBuilder.Kind;
         attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind; 
         callingConvention : NetFrameworkBase.System.Reflection.CallingConventions.Kind; 
         parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Reflection.Emit.ConstructorBuilder.Kind_Ptr;
      
      function DefineConstructor
      (
         this : in out TypeBuilder.Kind;
         attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind; 
         callingConvention : NetFrameworkBase.System.Reflection.CallingConventions.Kind; 
         parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array; 
         requiredCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         optionalCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Reflection.Emit.ConstructorBuilder.Kind_Ptr;
      
      function DefinePInvokeMethod
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         dllName : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind; 
         callingConvention : NetFrameworkBase.System.Reflection.CallingConventions.Kind; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array; 
         nativeCallConv : NetFrameworkBase.System.Runtime.InteropServices.CallingConvention.Kind; 
         nativeCharSet : NetFrameworkBase.System.Runtime.InteropServices.CharSet.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.MethodBuilder.Kind_Ptr;
      
      function DefinePInvokeMethod
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         dllName : NetFrameworkBase.BSTR; 
         entryName : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind; 
         callingConvention : NetFrameworkBase.System.Reflection.CallingConventions.Kind; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array; 
         nativeCallConv : NetFrameworkBase.System.Runtime.InteropServices.CallingConvention.Kind; 
         nativeCharSet : NetFrameworkBase.System.Runtime.InteropServices.CharSet.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.MethodBuilder.Kind_Ptr;
      
      function DefinePInvokeMethod
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         dllName : NetFrameworkBase.BSTR; 
         entryName : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind; 
         callingConvention : NetFrameworkBase.System.Reflection.CallingConventions.Kind; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         returnTypeRequiredCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         returnTypeOptionalCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array; 
         parameterTypeRequiredCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         parameterTypeOptionalCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         nativeCallConv : NetFrameworkBase.System.Runtime.InteropServices.CallingConvention.Kind; 
         nativeCharSet : NetFrameworkBase.System.Runtime.InteropServices.CharSet.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.MethodBuilder.Kind_Ptr;
      
      function DefineNestedType
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Reflection.Emit.TypeBuilder.Kind_Ptr;
      
      function DefineNestedType
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attr : NetFrameworkBase.System.Reflection.TypeAttributes.Kind; 
         parent : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         interfaces_x : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Reflection.Emit.TypeBuilder.Kind_Ptr;
      
      function DefineNestedType
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attr : NetFrameworkBase.System.Reflection.TypeAttributes.Kind; 
         parent : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Reflection.Emit.TypeBuilder.Kind_Ptr;
      
      function DefineNestedType
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attr : NetFrameworkBase.System.Reflection.TypeAttributes.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.TypeBuilder.Kind_Ptr;
      
      function DefineNestedType
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attr : NetFrameworkBase.System.Reflection.TypeAttributes.Kind; 
         parent : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         typeSize : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Reflection.Emit.TypeBuilder.Kind_Ptr;
      
      function DefineNestedType
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attr : NetFrameworkBase.System.Reflection.TypeAttributes.Kind; 
         parent : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         packSize : NetFrameworkBase.System.Reflection.Emit.PackingSize.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.TypeBuilder.Kind_Ptr;
      
      function DefineNestedType
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attr : NetFrameworkBase.System.Reflection.TypeAttributes.Kind; 
         parent : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         packSize : NetFrameworkBase.System.Reflection.Emit.PackingSize.Kind; 
         typeSize : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Reflection.Emit.TypeBuilder.Kind_Ptr;
      
      function DefineField
      (
         this : in out TypeBuilder.Kind;
         fieldName : NetFrameworkBase.BSTR; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         attributes : NetFrameworkBase.System.Reflection.FieldAttributes.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.FieldBuilder.Kind_Ptr;
      
      function DefineField
      (
         this : in out TypeBuilder.Kind;
         fieldName : NetFrameworkBase.BSTR; 
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         requiredCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         optionalCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         attributes : NetFrameworkBase.System.Reflection.FieldAttributes.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.FieldBuilder.Kind_Ptr;
      
      function DefineInitializedData
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         data : NetFrameworkBase.Byte_Array; 
         attributes : NetFrameworkBase.System.Reflection.FieldAttributes.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.FieldBuilder.Kind_Ptr;
      
      function DefineUninitializedData
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         size : NetFrameworkBase.Int32; 
         attributes : NetFrameworkBase.System.Reflection.FieldAttributes.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.FieldBuilder.Kind_Ptr;
      
      function DefineProperty
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.PropertyAttributes.Kind; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Reflection.Emit.PropertyBuilder.Kind_Ptr;
      
      function DefineProperty
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.PropertyAttributes.Kind; 
         callingConvention : NetFrameworkBase.System.Reflection.CallingConventions.Kind; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Reflection.Emit.PropertyBuilder.Kind_Ptr;
      
      function DefineProperty
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.PropertyAttributes.Kind; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         returnTypeRequiredCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         returnTypeOptionalCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array; 
         parameterTypeRequiredCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         parameterTypeOptionalCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Reflection.Emit.PropertyBuilder.Kind_Ptr;
      
      function DefineProperty
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.PropertyAttributes.Kind; 
         callingConvention : NetFrameworkBase.System.Reflection.CallingConventions.Kind; 
         returnType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         returnTypeRequiredCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         returnTypeOptionalCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array; 
         parameterTypeRequiredCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array; 
         parameterTypeOptionalCustomModifiers : NetFrameworkBase.System.Type_x.Kind_Array
      )
      return NetFrameworkBase.System.Reflection.Emit.PropertyBuilder.Kind_Ptr;
      
      function DefineEvent
      (
         this : in out TypeBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         attributes : NetFrameworkBase.System.Reflection.EventAttributes.Kind; 
         eventtype : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Reflection.Emit.EventBuilder.Kind_Ptr;
      
      function CreateTypeInfo
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.TypeInfo.Kind_Ptr;
      
      function CreateType
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function Size
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.Int32;
      
      function PackingSize
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.PackingSize.Kind;
      
      procedure SetParent
      (
         this : in out TypeBuilder.Kind;
         parent : NetFrameworkBase.System.Type_x.Kind_Ptr
      );
      
      procedure AddInterfaceImplementation
      (
         this : in out TypeBuilder.Kind;
         interfaceType : NetFrameworkBase.System.Type_x.Kind_Ptr
      );
      
      procedure AddDeclarativeSecurity
      (
         this : in out TypeBuilder.Kind;
         action : NetFrameworkBase.System.Security.Permissions.SecurityAction.Kind; 
         pset : NetFrameworkBase.System.Security.PermissionSet.Kind_Ptr
      );
      
      function TypeToken
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.TypeToken.Kind_Ptr;
      
      procedure SetCustomAttribute
      (
         this : in out TypeBuilder.Kind;
         con : NetFrameworkBase.System.Reflection.ConstructorInfo.Kind_Ptr; 
         binaryAttribute : NetFrameworkBase.Byte_Array
      );
      
      procedure SetCustomAttribute
      (
         this : in out TypeBuilder.Kind;
         customBuilder : NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Kind_Ptr
      );
      
      function MakePointerType
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function MakeByRefType
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function MakeArrayType
      (
         this : in out TypeBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function MakeArrayType
      (
         this : in out TypeBuilder.Kind;
         rank : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
end;
