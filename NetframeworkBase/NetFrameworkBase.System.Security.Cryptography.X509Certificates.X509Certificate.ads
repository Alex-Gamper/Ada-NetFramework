--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Security.Cryptography.HashAlgorithmName;
limited with NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags;
limited with NetFrameworkBase.System.Security.SecureString;
limited with NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509ContentType;
limited with NetFrameworkBase.System.Runtime.Serialization.SerializationInfo;
limited with NetFrameworkBase.System.Runtime.Serialization.StreamingContext;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function CreateFromCertFile
      (
         filename : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function CreateFromSignedFile
      (
         filename : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Handle
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.IntPtr;
      
      function GetName
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function GetIssuerName
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function GetSerialNumber
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.Byte_Array;
      
      function GetSerialNumberString
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function GetKeyAlgorithmParameters
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.Byte_Array;
      
      function GetKeyAlgorithmParametersString
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function GetKeyAlgorithm
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function GetPublicKey
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.Byte_Array;
      
      function GetPublicKeyString
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function GetRawCertData
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.Byte_Array;
      
      function GetRawCertDataString
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function GetCertHash
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.Byte_Array;
      
      function GetCertHash
      (
         this : in out X509Certificate.Kind;
         hashAlgorithm : NetFrameworkBase.System.Security.Cryptography.HashAlgorithmName.Kind_Ptr
      )
      return NetFrameworkBase.Byte_Array;
      
      function GetCertHashString
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function GetCertHashString
      (
         this : in out X509Certificate.Kind;
         hashAlgorithm : NetFrameworkBase.System.Security.Cryptography.HashAlgorithmName.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function GetEffectiveDateString
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function GetExpirationDateString
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Equals
      (
         this : in out X509Certificate.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function Equals
      (
         this : in out X509Certificate.Kind;
         other : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetHashCode
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.Int32;
      
      function ToString
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Issuer
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Subject
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Import
      (
         this : in out X509Certificate.Kind;
         rawData : NetFrameworkBase.Byte_Array
      );
      
      procedure Import
      (
         this : in out X509Certificate.Kind;
         rawData : NetFrameworkBase.Byte_Array; 
         password : NetFrameworkBase.BSTR; 
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      );
      
      procedure Import
      (
         this : in out X509Certificate.Kind;
         rawData : NetFrameworkBase.Byte_Array; 
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr; 
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      );
      
      procedure Import
      (
         this : in out X509Certificate.Kind;
         fileName : NetFrameworkBase.BSTR
      );
      
      procedure Import
      (
         this : in out X509Certificate.Kind;
         fileName : NetFrameworkBase.BSTR; 
         password : NetFrameworkBase.BSTR; 
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      );
      
      procedure Import
      (
         this : in out X509Certificate.Kind;
         fileName : NetFrameworkBase.BSTR; 
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr; 
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      );
      
      function Export
      (
         this : in out X509Certificate.Kind;
         contentType : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509ContentType.Kind
      )
      return NetFrameworkBase.Byte_Array;
      
      function Export
      (
         this : in out X509Certificate.Kind;
         contentType : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509ContentType.Kind; 
         password : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Byte_Array;
      
      function Export
      (
         this : in out X509Certificate.Kind;
         contentType : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509ContentType.Kind; 
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr
      )
      return NetFrameworkBase.Byte_Array;
      
      procedure Reset
      (
         this : in out X509Certificate.Kind
      );
      
      procedure Dispose
      (
         this : in out X509Certificate.Kind
      );
      
      function ToString
      (
         this : in out X509Certificate.Kind;
         fVerbose : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.BSTR;
      
      function GetFormat
      (
         this : in out X509Certificate.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Constructor return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         data : NetFrameworkBase.Byte_Array
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         rawData : NetFrameworkBase.Byte_Array;
         password : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         rawData : NetFrameworkBase.Byte_Array;
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         rawData : NetFrameworkBase.Byte_Array;
         password : NetFrameworkBase.BSTR;
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         rawData : NetFrameworkBase.Byte_Array;
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr;
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         fileName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         fileName : NetFrameworkBase.BSTR;
         password : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         fileName : NetFrameworkBase.BSTR;
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         fileName : NetFrameworkBase.BSTR;
         password : NetFrameworkBase.BSTR;
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         fileName : NetFrameworkBase.BSTR;
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr;
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         handle : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         cert : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
      function Constructor
      (
         info : NetFrameworkBase.System.Runtime.Serialization.SerializationInfo.Kind_Ptr;
         context : NetFrameworkBase.System.Runtime.Serialization.StreamingContext.Kind_Ptr
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr;
      
end;
