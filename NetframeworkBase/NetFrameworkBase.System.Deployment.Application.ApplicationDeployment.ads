--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Deployment.Application.DeploymentProgressChangedEventHandler;
limited with NetFrameworkBase.System.Deployment.Application.CheckForUpdateCompletedEventHandler;
limited with NetFrameworkBase.System.ComponentModel.AsyncCompletedEventHandler;
limited with NetFrameworkBase.System.Deployment.Application.DownloadFileGroupCompletedEventHandler;
limited with NetFrameworkBase.System.Version;
limited with NetFrameworkBase.System.Uri;
limited with NetFrameworkBase.System.Deployment.Application.UpdateCheckInfo;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Deployment.Application.ApplicationDeployment is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function CurrentDeployment
      return NetFrameworkBase.System.Deployment.Application.ApplicationDeployment.Kind_Ptr;
      
      function IsNetworkDeployed
      return NetFrameworkBase.Boolean;
      
      function CurrentVersion
      (
         this : in out ApplicationDeployment.Kind
      )
      return NetFrameworkBase.System.Version.Kind_Ptr;
      
      function UpdatedVersion
      (
         this : in out ApplicationDeployment.Kind
      )
      return NetFrameworkBase.System.Version.Kind_Ptr;
      
      function UpdatedApplicationFullName
      (
         this : in out ApplicationDeployment.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function TimeOfLastUpdateCheck
      (
         this : in out ApplicationDeployment.Kind
      )
      return NetFrameworkBase.Date;
      
      function UpdateLocation
      (
         this : in out ApplicationDeployment.Kind
      )
      return NetFrameworkBase.System.Uri.Kind_Ptr;
      
      function ActivationUri
      (
         this : in out ApplicationDeployment.Kind
      )
      return NetFrameworkBase.System.Uri.Kind_Ptr;
      
      function IsFirstRun
      (
         this : in out ApplicationDeployment.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function CheckForDetailedUpdate
      (
         this : in out ApplicationDeployment.Kind
      )
      return NetFrameworkBase.System.Deployment.Application.UpdateCheckInfo.Kind_Ptr;
      
      function CheckForUpdate
      (
         this : in out ApplicationDeployment.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function CheckForUpdate
      (
         this : in out ApplicationDeployment.Kind;
         persistUpdateCheckResult : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.Boolean;
      
      procedure CheckForUpdateAsyncCancel
      (
         this : in out ApplicationDeployment.Kind
      );
      
      procedure add_CheckForUpdateProgressChanged
      (
         this : in out ApplicationDeployment.Kind;
         value : NetFrameworkBase.System.Deployment.Application.DeploymentProgressChangedEventHandler.Kind_Ptr
      );
      
      procedure remove_CheckForUpdateProgressChanged
      (
         this : in out ApplicationDeployment.Kind;
         value : NetFrameworkBase.System.Deployment.Application.DeploymentProgressChangedEventHandler.Kind_Ptr
      );
      
      procedure add_CheckForUpdateCompleted
      (
         this : in out ApplicationDeployment.Kind;
         value : NetFrameworkBase.System.Deployment.Application.CheckForUpdateCompletedEventHandler.Kind_Ptr
      );
      
      procedure remove_CheckForUpdateCompleted
      (
         this : in out ApplicationDeployment.Kind;
         value : NetFrameworkBase.System.Deployment.Application.CheckForUpdateCompletedEventHandler.Kind_Ptr
      );
      
      procedure UpdateAsyncCancel
      (
         this : in out ApplicationDeployment.Kind
      );
      
      procedure add_UpdateProgressChanged
      (
         this : in out ApplicationDeployment.Kind;
         value : NetFrameworkBase.System.Deployment.Application.DeploymentProgressChangedEventHandler.Kind_Ptr
      );
      
      procedure remove_UpdateProgressChanged
      (
         this : in out ApplicationDeployment.Kind;
         value : NetFrameworkBase.System.Deployment.Application.DeploymentProgressChangedEventHandler.Kind_Ptr
      );
      
      procedure add_UpdateCompleted
      (
         this : in out ApplicationDeployment.Kind;
         value : NetFrameworkBase.System.ComponentModel.AsyncCompletedEventHandler.Kind_Ptr
      );
      
      procedure remove_UpdateCompleted
      (
         this : in out ApplicationDeployment.Kind;
         value : NetFrameworkBase.System.ComponentModel.AsyncCompletedEventHandler.Kind_Ptr
      );
      
      procedure DownloadFileGroup
      (
         this : in out ApplicationDeployment.Kind;
         groupName : NetFrameworkBase.BSTR
      );
      
      procedure DownloadFileGroupAsync
      (
         this : in out ApplicationDeployment.Kind;
         groupName : NetFrameworkBase.BSTR
      );
      
      procedure DownloadFileGroupAsync
      (
         this : in out ApplicationDeployment.Kind;
         groupName : NetFrameworkBase.BSTR; 
         userState : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      function IsFileGroupDownloaded
      (
         this : in out ApplicationDeployment.Kind;
         groupName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      procedure DownloadFileGroupAsyncCancel
      (
         this : in out ApplicationDeployment.Kind;
         groupName : NetFrameworkBase.BSTR
      );
      
      procedure add_DownloadFileGroupProgressChanged
      (
         this : in out ApplicationDeployment.Kind;
         value : NetFrameworkBase.System.Deployment.Application.DeploymentProgressChangedEventHandler.Kind_Ptr
      );
      
      procedure remove_DownloadFileGroupProgressChanged
      (
         this : in out ApplicationDeployment.Kind;
         value : NetFrameworkBase.System.Deployment.Application.DeploymentProgressChangedEventHandler.Kind_Ptr
      );
      
      procedure add_DownloadFileGroupCompleted
      (
         this : in out ApplicationDeployment.Kind;
         value : NetFrameworkBase.System.Deployment.Application.DownloadFileGroupCompletedEventHandler.Kind_Ptr
      );
      
      procedure remove_DownloadFileGroupCompleted
      (
         this : in out ApplicationDeployment.Kind;
         value : NetFrameworkBase.System.Deployment.Application.DownloadFileGroupCompletedEventHandler.Kind_Ptr
      );
      
      function DataDirectory
      (
         this : in out ApplicationDeployment.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function CheckForDetailedUpdate
      (
         this : in out ApplicationDeployment.Kind;
         persistUpdateCheckResult : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Deployment.Application.UpdateCheckInfo.Kind_Ptr;
      
      procedure CheckForUpdateAsync
      (
         this : in out ApplicationDeployment.Kind
      );
      
      function Update
      (
         this : in out ApplicationDeployment.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure UpdateAsync
      (
         this : in out ApplicationDeployment.Kind
      );
      
end;
