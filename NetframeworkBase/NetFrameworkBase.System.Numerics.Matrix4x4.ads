--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.ValueType;
limited with NetFrameworkBase.System.Numerics.Vector3;
limited with NetFrameworkBase.System.Numerics.Quaternion;
limited with NetFrameworkBase.System.Numerics.Plane;
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Numerics.Matrix3x2;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Numerics.Matrix4x4 is
   
   type Kind is new NetFrameworkBase.System.ValueType.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function Identity
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function IsIdentity
      (
         this : in out Matrix4x4.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function Translation
      (
         this : in out Matrix4x4.Kind
      )
      return NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr;
      
      procedure Translation
      (
         this : in out Matrix4x4.Kind;
         value : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      );
      
      function CreateBillboard
      (
         objectPosition : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         cameraPosition : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         cameraUpVector : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         cameraForwardVector : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateConstrainedBillboard
      (
         objectPosition : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         cameraPosition : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         rotateAxis : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         cameraForwardVector : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         objectForwardVector : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateTranslation
      (
         position : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateTranslation
      (
         xPosition : NetFrameworkBase.Single; 
         yPosition : NetFrameworkBase.Single; 
         zPosition : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateScale
      (
         xScale : NetFrameworkBase.Single; 
         yScale : NetFrameworkBase.Single; 
         zScale : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateScale
      (
         xScale : NetFrameworkBase.Single; 
         yScale : NetFrameworkBase.Single; 
         zScale : NetFrameworkBase.Single; 
         centerPoint : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateScale
      (
         scales : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateScale
      (
         scales : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         centerPoint : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateScale
      (
         scale : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateScale
      (
         scale : NetFrameworkBase.Single; 
         centerPoint : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateRotationX
      (
         radians : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateRotationX
      (
         radians : NetFrameworkBase.Single; 
         centerPoint : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateRotationY
      (
         radians : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateRotationY
      (
         radians : NetFrameworkBase.Single; 
         centerPoint : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateRotationZ
      (
         radians : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateRotationZ
      (
         radians : NetFrameworkBase.Single; 
         centerPoint : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateFromAxisAngle
      (
         axis : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         angle : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreatePerspectiveFieldOfView
      (
         fieldOfView : NetFrameworkBase.Single; 
         aspectRatio : NetFrameworkBase.Single; 
         nearPlaneDistance : NetFrameworkBase.Single; 
         farPlaneDistance : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreatePerspective
      (
         width : NetFrameworkBase.Single; 
         height : NetFrameworkBase.Single; 
         nearPlaneDistance : NetFrameworkBase.Single; 
         farPlaneDistance : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreatePerspectiveOffCenter
      (
         left : NetFrameworkBase.Single; 
         right : NetFrameworkBase.Single; 
         bottom : NetFrameworkBase.Single; 
         top : NetFrameworkBase.Single; 
         nearPlaneDistance : NetFrameworkBase.Single; 
         farPlaneDistance : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateOrthographic
      (
         width : NetFrameworkBase.Single; 
         height : NetFrameworkBase.Single; 
         zNearPlane : NetFrameworkBase.Single; 
         zFarPlane : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateOrthographicOffCenter
      (
         left : NetFrameworkBase.Single; 
         right : NetFrameworkBase.Single; 
         bottom : NetFrameworkBase.Single; 
         top : NetFrameworkBase.Single; 
         zNearPlane : NetFrameworkBase.Single; 
         zFarPlane : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateLookAt
      (
         cameraPosition : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         cameraTarget : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         cameraUpVector : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateWorld
      (
         position : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         forward : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         up : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateFromQuaternion
      (
         quaternion : NetFrameworkBase.System.Numerics.Quaternion.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateFromYawPitchRoll
      (
         yaw : NetFrameworkBase.Single; 
         pitch : NetFrameworkBase.Single; 
         roll : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateShadow
      (
         lightDirection : NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         plane : NetFrameworkBase.System.Numerics.Plane.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function CreateReflection
      (
         value : NetFrameworkBase.System.Numerics.Plane.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function GetDeterminant
      (
         this : in out Matrix4x4.Kind
      )
      return NetFrameworkBase.Single;
      
      function Invert
      (
         matrix : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         result : out NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function Decompose
      (
         matrix : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         scale : out NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr; 
         rotation : out NetFrameworkBase.System.Numerics.Quaternion.Kind_Ptr; 
         translation : out NetFrameworkBase.System.Numerics.Vector3.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function Transform
      (
         value : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         rotation : NetFrameworkBase.System.Numerics.Quaternion.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function Transpose
      (
         matrix : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function Lerp
      (
         matrix1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         matrix2 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         amount : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function Negate
      (
         value : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function Add
      (
         value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         value2 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function Subtract
      (
         value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         value2 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function Multiply
      (
         value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         value2 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function Multiply
      (
         value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         value2 : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function op_UnaryNegation
      (
         value : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      function "-"(value : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr) return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr renames op_UnaryNegation;
      
      function op_Addition
      (
         value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         value2 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      function "+"(value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; value2 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr) return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr renames op_Addition;
      
      function op_Subtraction
      (
         value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         value2 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      function "-"(value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; value2 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr) return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr renames op_Subtraction;
      
      function op_Multiply
      (
         value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         value2 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function op_Multiply
      (
         value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         value2 : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function op_Equality
      (
         value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         value2 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      function "="(value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; value2 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr) return NetFrameworkBase.Boolean renames op_Equality;
      
      function op_Inequality
      (
         value1 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr; 
         value2 : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function Equals
      (
         this : in out Matrix4x4.Kind;
         other : NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function Equals
      (
         this : in out Matrix4x4.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetHashCode
      (
         this : in out Matrix4x4.Kind
      )
      return NetFrameworkBase.Int32;
      
      function ToString
      (
         this : in out Matrix4x4.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Constructor
      (
         m11 : NetFrameworkBase.Single;
         m12 : NetFrameworkBase.Single;
         m13 : NetFrameworkBase.Single;
         m14 : NetFrameworkBase.Single;
         m21 : NetFrameworkBase.Single;
         m22 : NetFrameworkBase.Single;
         m23 : NetFrameworkBase.Single;
         m24 : NetFrameworkBase.Single;
         m31 : NetFrameworkBase.Single;
         m32 : NetFrameworkBase.Single;
         m33 : NetFrameworkBase.Single;
         m34 : NetFrameworkBase.Single;
         m41 : NetFrameworkBase.Single;
         m42 : NetFrameworkBase.Single;
         m43 : NetFrameworkBase.Single;
         m44 : NetFrameworkBase.Single
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
      function Constructor
      (
         value : NetFrameworkBase.System.Numerics.Matrix3x2.Kind_Ptr
      )
      return NetFrameworkBase.System.Numerics.Matrix4x4.Kind_Ptr;
      
end;
