--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileRights;
limited with NetFrameworkBase.System.IO.HandleInheritability;
limited with NetFrameworkBase.System.IO.FileMode;
limited with NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileAccess;
limited with NetFrameworkBase.System.IO.FileStream;
limited with NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileSecurity;
limited with NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileOptions;
limited with NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedViewStream;
limited with NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedViewAccessor;
limited with NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function OpenExisting
      (
         mapName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function OpenExisting
      (
         mapName : NetFrameworkBase.BSTR; 
         desiredAccessRights : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileRights.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function OpenExisting
      (
         mapName : NetFrameworkBase.BSTR; 
         desiredAccessRights : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileRights.Kind; 
         inheritability : NetFrameworkBase.System.IO.HandleInheritability.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateFromFile
      (
         path : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateFromFile
      (
         path : NetFrameworkBase.BSTR; 
         mode : NetFrameworkBase.System.IO.FileMode.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateFromFile
      (
         path : NetFrameworkBase.BSTR; 
         mode : NetFrameworkBase.System.IO.FileMode.Kind; 
         mapName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateFromFile
      (
         path : NetFrameworkBase.BSTR; 
         mode : NetFrameworkBase.System.IO.FileMode.Kind; 
         mapName : NetFrameworkBase.BSTR; 
         capacity : NetFrameworkBase.Int64
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateFromFile
      (
         path : NetFrameworkBase.BSTR; 
         mode : NetFrameworkBase.System.IO.FileMode.Kind; 
         mapName : NetFrameworkBase.BSTR; 
         capacity : NetFrameworkBase.Int64; 
         access_x : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateFromFile
      (
         fileStream : NetFrameworkBase.System.IO.FileStream.Kind_Ptr; 
         mapName : NetFrameworkBase.BSTR; 
         capacity : NetFrameworkBase.Int64; 
         access_x : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Kind; 
         inheritability : NetFrameworkBase.System.IO.HandleInheritability.Kind; 
         leaveOpen : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateFromFile
      (
         fileStream : NetFrameworkBase.System.IO.FileStream.Kind_Ptr; 
         mapName : NetFrameworkBase.BSTR; 
         capacity : NetFrameworkBase.Int64; 
         access_x : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Kind; 
         memoryMappedFileSecurity : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileSecurity.Kind_Ptr; 
         inheritability : NetFrameworkBase.System.IO.HandleInheritability.Kind; 
         leaveOpen : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateNew
      (
         mapName : NetFrameworkBase.BSTR; 
         capacity : NetFrameworkBase.Int64
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateNew
      (
         mapName : NetFrameworkBase.BSTR; 
         capacity : NetFrameworkBase.Int64; 
         access_x : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateNew
      (
         mapName : NetFrameworkBase.BSTR; 
         capacity : NetFrameworkBase.Int64; 
         access_x : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Kind; 
         options : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileOptions.Kind; 
         inheritability : NetFrameworkBase.System.IO.HandleInheritability.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateNew
      (
         mapName : NetFrameworkBase.BSTR; 
         capacity : NetFrameworkBase.Int64; 
         access_x : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Kind; 
         options : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileOptions.Kind; 
         memoryMappedFileSecurity : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileSecurity.Kind_Ptr; 
         inheritability : NetFrameworkBase.System.IO.HandleInheritability.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateOrOpen
      (
         mapName : NetFrameworkBase.BSTR; 
         capacity : NetFrameworkBase.Int64
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateOrOpen
      (
         mapName : NetFrameworkBase.BSTR; 
         capacity : NetFrameworkBase.Int64; 
         access_x : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateOrOpen
      (
         mapName : NetFrameworkBase.BSTR; 
         capacity : NetFrameworkBase.Int64; 
         access_x : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Kind; 
         options : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileOptions.Kind; 
         inheritability : NetFrameworkBase.System.IO.HandleInheritability.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateOrOpen
      (
         mapName : NetFrameworkBase.BSTR; 
         capacity : NetFrameworkBase.Int64; 
         access_x : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Kind; 
         options : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileOptions.Kind; 
         memoryMappedFileSecurity : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileSecurity.Kind_Ptr; 
         inheritability : NetFrameworkBase.System.IO.HandleInheritability.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFile.Kind_Ptr;
      
      function CreateViewStream
      (
         this : in out MemoryMappedFile.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedViewStream.Kind_Ptr;
      
      function CreateViewStream
      (
         this : in out MemoryMappedFile.Kind;
         offset : NetFrameworkBase.Int64; 
         size : NetFrameworkBase.Int64
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedViewStream.Kind_Ptr;
      
      function CreateViewStream
      (
         this : in out MemoryMappedFile.Kind;
         offset : NetFrameworkBase.Int64; 
         size : NetFrameworkBase.Int64; 
         access_x : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedViewStream.Kind_Ptr;
      
      function CreateViewAccessor
      (
         this : in out MemoryMappedFile.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Kind_Ptr;
      
      function CreateViewAccessor
      (
         this : in out MemoryMappedFile.Kind;
         offset : NetFrameworkBase.Int64; 
         size : NetFrameworkBase.Int64
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Kind_Ptr;
      
      function CreateViewAccessor
      (
         this : in out MemoryMappedFile.Kind;
         offset : NetFrameworkBase.Int64; 
         size : NetFrameworkBase.Int64; 
         access_x : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Kind_Ptr;
      
      procedure Dispose
      (
         this : in out MemoryMappedFile.Kind
      );
      
      function SafeMemoryMappedFileHandle
      (
         this : in out MemoryMappedFile.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle.Kind_Ptr;
      
      function GetAccessControl
      (
         this : in out MemoryMappedFile.Kind
      )
      return NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileSecurity.Kind_Ptr;
      
      procedure SetAccessControl
      (
         this : in out MemoryMappedFile.Kind;
         memoryMappedFileSecurity : NetFrameworkBase.System.IO.MemoryMappedFiles.MemoryMappedFileSecurity.Kind_Ptr
      );
      
end;
