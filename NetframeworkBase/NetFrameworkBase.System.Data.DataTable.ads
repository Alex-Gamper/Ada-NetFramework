--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.ComponentModel.MarshalByValueComponent;
limited with NetFrameworkBase.System.Runtime.Serialization.SerializationInfo;
limited with NetFrameworkBase.System.Runtime.Serialization.StreamingContext;
limited with NetFrameworkBase.System.Data.SerializationFormat;
limited with NetFrameworkBase.System.Globalization.CultureInfo;
limited with NetFrameworkBase.System.Data.DataColumn;
limited with NetFrameworkBase.System.Data.DataColumnChangeEventHandler;
limited with NetFrameworkBase.System.EventHandler;
limited with NetFrameworkBase.System.Data.DataRowChangeEventHandler;
limited with NetFrameworkBase.System.Data.DataTableClearEventHandler;
limited with NetFrameworkBase.System.Data.DataTableNewRowEventHandler;
limited with NetFrameworkBase.System.ComponentModel.ISite;
limited with NetFrameworkBase.System.Data.DataRowState;
limited with NetFrameworkBase.System.Data.DataRow;
limited with NetFrameworkBase.System.Data.DataViewRowState;
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Data.LoadOption;
limited with NetFrameworkBase.System.Data.MissingSchemaAction;
limited with NetFrameworkBase.System.Data.IDataReader;
limited with NetFrameworkBase.System.Data.FillErrorEventHandler;
limited with NetFrameworkBase.System.IO.Stream;
limited with NetFrameworkBase.System.IO.TextWriter;
limited with NetFrameworkBase.System.Xml.XmlWriter;
limited with NetFrameworkBase.System.Data.XmlWriteMode;
limited with NetFrameworkBase.System.IO.TextReader;
limited with NetFrameworkBase.System.Xml.XmlReader;
limited with NetFrameworkBase.System.Xml.Schema.XmlSchemaSet;
limited with NetFrameworkBase.System.Data.DataRelationCollection;
limited with NetFrameworkBase.System.Data.DataColumnCollection;
limited with NetFrameworkBase.System.Data.ConstraintCollection;
limited with NetFrameworkBase.System.Data.DataSet;
limited with NetFrameworkBase.System.Data.DataView;
limited with NetFrameworkBase.System.Data.PropertyCollection;
limited with NetFrameworkBase.System.Data.DataRowCollection;
limited with NetFrameworkBase.System.Data.DataTableReader;
limited with NetFrameworkBase.System.Data.XmlReadMode;
limited with NetFrameworkBase.System.Xml.Schema.XmlSchemaComplexType;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Data.DataTable is
   
   type Kind is new NetFrameworkBase.System.ComponentModel.MarshalByValueComponent.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      procedure GetObjectData
      (
         this : in out DataTable.Kind;
         info : NetFrameworkBase.System.Runtime.Serialization.SerializationInfo.Kind_Ptr; 
         context : NetFrameworkBase.System.Runtime.Serialization.StreamingContext.Kind_Ptr
      );
      
      function CaseSensitive
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure CaseSensitive
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function IsInitialized
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function RemotingFormat
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.SerializationFormat.Kind;
      
      procedure RemotingFormat
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.SerializationFormat.Kind
      );
      
      function ChildRelations
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataRelationCollection.Kind_Ptr;
      
      function Columns
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataColumnCollection.Kind_Ptr;
      
      function Constraints
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.ConstraintCollection.Kind_Ptr;
      
      function DataSet
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataSet.Kind_Ptr;
      
      function DefaultView
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataView.Kind_Ptr;
      
      function DisplayExpression
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure DisplayExpression
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function ExtendedProperties
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.PropertyCollection.Kind_Ptr;
      
      function HasErrors
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function Locale
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr;
      
      procedure Locale
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr
      );
      
      function MinimumCapacity
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure MinimumCapacity
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function ParentRelations
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataRelationCollection.Kind_Ptr;
      
      function PrimaryKey
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataColumn.Kind_Array;
      
      procedure PrimaryKey
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataColumn.Kind_Array
      );
      
      function Rows
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataRowCollection.Kind_Ptr;
      
      function TableName
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure TableName
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function Namespace
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Namespace
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      procedure BeginInit
      (
         this : in out DataTable.Kind
      );
      
      procedure EndInit
      (
         this : in out DataTable.Kind
      );
      
      function Prefix
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Prefix
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      procedure AcceptChanges
      (
         this : in out DataTable.Kind
      );
      
      function Clone
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataTable.Kind_Ptr;
      
      function Copy
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataTable.Kind_Ptr;
      
      procedure add_ColumnChanging
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataColumnChangeEventHandler.Kind_Ptr
      );
      
      procedure remove_ColumnChanging
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataColumnChangeEventHandler.Kind_Ptr
      );
      
      procedure add_ColumnChanged
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataColumnChangeEventHandler.Kind_Ptr
      );
      
      procedure remove_ColumnChanged
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataColumnChangeEventHandler.Kind_Ptr
      );
      
      procedure add_Initialized
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure remove_Initialized
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure add_RowChanged
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataRowChangeEventHandler.Kind_Ptr
      );
      
      procedure remove_RowChanged
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataRowChangeEventHandler.Kind_Ptr
      );
      
      procedure add_RowChanging
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataRowChangeEventHandler.Kind_Ptr
      );
      
      procedure remove_RowChanging
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataRowChangeEventHandler.Kind_Ptr
      );
      
      procedure add_RowDeleting
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataRowChangeEventHandler.Kind_Ptr
      );
      
      procedure remove_RowDeleting
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataRowChangeEventHandler.Kind_Ptr
      );
      
      procedure add_RowDeleted
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataRowChangeEventHandler.Kind_Ptr
      );
      
      procedure remove_RowDeleted
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataRowChangeEventHandler.Kind_Ptr
      );
      
      procedure add_TableClearing
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataTableClearEventHandler.Kind_Ptr
      );
      
      procedure remove_TableClearing
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataTableClearEventHandler.Kind_Ptr
      );
      
      procedure add_TableCleared
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataTableClearEventHandler.Kind_Ptr
      );
      
      procedure remove_TableCleared
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataTableClearEventHandler.Kind_Ptr
      );
      
      procedure add_TableNewRow
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataTableNewRowEventHandler.Kind_Ptr
      );
      
      procedure remove_TableNewRow
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.Data.DataTableNewRowEventHandler.Kind_Ptr
      );
      
      function Site
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.ComponentModel.ISite.Kind_Ptr;
      
      procedure Site
      (
         this : in out DataTable.Kind;
         value : NetFrameworkBase.System.ComponentModel.ISite.Kind_Ptr
      );
      
      procedure Clear
      (
         this : in out DataTable.Kind
      );
      
      function Compute
      (
         this : in out DataTable.Kind;
         expression : NetFrameworkBase.BSTR; 
         filter : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetChanges
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataTable.Kind_Ptr;
      
      function GetChanges
      (
         this : in out DataTable.Kind;
         rowStates : NetFrameworkBase.System.Data.DataRowState.Kind
      )
      return NetFrameworkBase.System.Data.DataTable.Kind_Ptr;
      
      function GetErrors
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataRow.Kind_Array;
      
      procedure ImportRow
      (
         this : in out DataTable.Kind;
         row : NetFrameworkBase.System.Data.DataRow.Kind_Ptr
      );
      
      function NewRow
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataRow.Kind_Ptr;
      
      procedure RejectChanges
      (
         this : in out DataTable.Kind
      );
      
      procedure Reset
      (
         this : in out DataTable.Kind
      );
      
      function Select_x
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataRow.Kind_Array;
      
      function Select_x
      (
         this : in out DataTable.Kind;
         filterExpression : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Data.DataRow.Kind_Array;
      
      function Select_x
      (
         this : in out DataTable.Kind;
         filterExpression : NetFrameworkBase.BSTR; 
         sort : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Data.DataRow.Kind_Array;
      
      function Select_x
      (
         this : in out DataTable.Kind;
         filterExpression : NetFrameworkBase.BSTR; 
         sort : NetFrameworkBase.BSTR; 
         recordStates : NetFrameworkBase.System.Data.DataViewRowState.Kind
      )
      return NetFrameworkBase.System.Data.DataRow.Kind_Array;
      
      function ToString
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure BeginLoadData
      (
         this : in out DataTable.Kind
      );
      
      procedure EndLoadData
      (
         this : in out DataTable.Kind
      );
      
      function LoadDataRow
      (
         this : in out DataTable.Kind;
         values : NetFrameworkBase.System.Object.Kind_Array; 
         fAcceptChanges : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Data.DataRow.Kind_Ptr;
      
      function LoadDataRow
      (
         this : in out DataTable.Kind;
         values : NetFrameworkBase.System.Object.Kind_Array; 
         loadOption : NetFrameworkBase.System.Data.LoadOption.Kind
      )
      return NetFrameworkBase.System.Data.DataRow.Kind_Ptr;
      
      procedure Merge
      (
         this : in out DataTable.Kind;
         table : NetFrameworkBase.System.Data.DataTable.Kind_Ptr
      );
      
      procedure Merge
      (
         this : in out DataTable.Kind;
         table : NetFrameworkBase.System.Data.DataTable.Kind_Ptr; 
         preserveChanges : NetFrameworkBase.Boolean
      );
      
      procedure Merge
      (
         this : in out DataTable.Kind;
         table : NetFrameworkBase.System.Data.DataTable.Kind_Ptr; 
         preserveChanges : NetFrameworkBase.Boolean; 
         missingSchemaAction : NetFrameworkBase.System.Data.MissingSchemaAction.Kind
      );
      
      procedure Load
      (
         this : in out DataTable.Kind;
         reader : NetFrameworkBase.System.Data.IDataReader.Kind_Ptr
      );
      
      procedure Load
      (
         this : in out DataTable.Kind;
         reader : NetFrameworkBase.System.Data.IDataReader.Kind_Ptr; 
         loadOption : NetFrameworkBase.System.Data.LoadOption.Kind
      );
      
      procedure Load
      (
         this : in out DataTable.Kind;
         reader : NetFrameworkBase.System.Data.IDataReader.Kind_Ptr; 
         loadOption : NetFrameworkBase.System.Data.LoadOption.Kind; 
         errorHandler : NetFrameworkBase.System.Data.FillErrorEventHandler.Kind_Ptr
      );
      
      function CreateDataReader
      (
         this : in out DataTable.Kind
      )
      return NetFrameworkBase.System.Data.DataTableReader.Kind_Ptr;
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         stream : NetFrameworkBase.System.IO.Stream.Kind_Ptr
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         stream : NetFrameworkBase.System.IO.Stream.Kind_Ptr; 
         writeHierarchy : NetFrameworkBase.Boolean
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         writer : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         writer : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr; 
         writeHierarchy : NetFrameworkBase.Boolean
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         writer : NetFrameworkBase.System.Xml.XmlWriter.Kind_Ptr
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         writer : NetFrameworkBase.System.Xml.XmlWriter.Kind_Ptr; 
         writeHierarchy : NetFrameworkBase.Boolean
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         fileName : NetFrameworkBase.BSTR
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         fileName : NetFrameworkBase.BSTR; 
         writeHierarchy : NetFrameworkBase.Boolean
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         stream : NetFrameworkBase.System.IO.Stream.Kind_Ptr; 
         mode : NetFrameworkBase.System.Data.XmlWriteMode.Kind
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         stream : NetFrameworkBase.System.IO.Stream.Kind_Ptr; 
         mode : NetFrameworkBase.System.Data.XmlWriteMode.Kind; 
         writeHierarchy : NetFrameworkBase.Boolean
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         writer : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr; 
         mode : NetFrameworkBase.System.Data.XmlWriteMode.Kind
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         writer : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr; 
         mode : NetFrameworkBase.System.Data.XmlWriteMode.Kind; 
         writeHierarchy : NetFrameworkBase.Boolean
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         writer : NetFrameworkBase.System.Xml.XmlWriter.Kind_Ptr; 
         mode : NetFrameworkBase.System.Data.XmlWriteMode.Kind
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         writer : NetFrameworkBase.System.Xml.XmlWriter.Kind_Ptr; 
         mode : NetFrameworkBase.System.Data.XmlWriteMode.Kind; 
         writeHierarchy : NetFrameworkBase.Boolean
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         fileName : NetFrameworkBase.BSTR; 
         mode : NetFrameworkBase.System.Data.XmlWriteMode.Kind
      );
      
      procedure WriteXml
      (
         this : in out DataTable.Kind;
         fileName : NetFrameworkBase.BSTR; 
         mode : NetFrameworkBase.System.Data.XmlWriteMode.Kind; 
         writeHierarchy : NetFrameworkBase.Boolean
      );
      
      procedure WriteXmlSchema
      (
         this : in out DataTable.Kind;
         stream : NetFrameworkBase.System.IO.Stream.Kind_Ptr
      );
      
      procedure WriteXmlSchema
      (
         this : in out DataTable.Kind;
         stream : NetFrameworkBase.System.IO.Stream.Kind_Ptr; 
         writeHierarchy : NetFrameworkBase.Boolean
      );
      
      procedure WriteXmlSchema
      (
         this : in out DataTable.Kind;
         writer : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr
      );
      
      procedure WriteXmlSchema
      (
         this : in out DataTable.Kind;
         writer : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr; 
         writeHierarchy : NetFrameworkBase.Boolean
      );
      
      procedure WriteXmlSchema
      (
         this : in out DataTable.Kind;
         writer : NetFrameworkBase.System.Xml.XmlWriter.Kind_Ptr
      );
      
      procedure WriteXmlSchema
      (
         this : in out DataTable.Kind;
         writer : NetFrameworkBase.System.Xml.XmlWriter.Kind_Ptr; 
         writeHierarchy : NetFrameworkBase.Boolean
      );
      
      procedure WriteXmlSchema
      (
         this : in out DataTable.Kind;
         fileName : NetFrameworkBase.BSTR
      );
      
      procedure WriteXmlSchema
      (
         this : in out DataTable.Kind;
         fileName : NetFrameworkBase.BSTR; 
         writeHierarchy : NetFrameworkBase.Boolean
      );
      
      function ReadXml
      (
         this : in out DataTable.Kind;
         stream : NetFrameworkBase.System.IO.Stream.Kind_Ptr
      )
      return NetFrameworkBase.System.Data.XmlReadMode.Kind;
      
      function ReadXml
      (
         this : in out DataTable.Kind;
         reader : NetFrameworkBase.System.IO.TextReader.Kind_Ptr
      )
      return NetFrameworkBase.System.Data.XmlReadMode.Kind;
      
      function ReadXml
      (
         this : in out DataTable.Kind;
         fileName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Data.XmlReadMode.Kind;
      
      function ReadXml
      (
         this : in out DataTable.Kind;
         reader : NetFrameworkBase.System.Xml.XmlReader.Kind_Ptr
      )
      return NetFrameworkBase.System.Data.XmlReadMode.Kind;
      
      procedure ReadXmlSchema
      (
         this : in out DataTable.Kind;
         stream : NetFrameworkBase.System.IO.Stream.Kind_Ptr
      );
      
      procedure ReadXmlSchema
      (
         this : in out DataTable.Kind;
         reader : NetFrameworkBase.System.IO.TextReader.Kind_Ptr
      );
      
      procedure ReadXmlSchema
      (
         this : in out DataTable.Kind;
         fileName : NetFrameworkBase.BSTR
      );
      
      procedure ReadXmlSchema
      (
         this : in out DataTable.Kind;
         reader : NetFrameworkBase.System.Xml.XmlReader.Kind_Ptr
      );
      
      function GetDataTableSchema
      (
         schemaSet : NetFrameworkBase.System.Xml.Schema.XmlSchemaSet.Kind_Ptr
      )
      return NetFrameworkBase.System.Xml.Schema.XmlSchemaComplexType.Kind_Ptr;
      
      function Constructor return NetFrameworkBase.System.Data.DataTable.Kind_Ptr;
      
      function Constructor
      (
         tableName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Data.DataTable.Kind_Ptr;
      
      function Constructor
      (
         tableName : NetFrameworkBase.BSTR;
         tableNamespace : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Data.DataTable.Kind_Ptr;
      
end;
