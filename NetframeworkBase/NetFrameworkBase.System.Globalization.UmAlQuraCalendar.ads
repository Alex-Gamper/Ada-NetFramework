--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Globalization.Calendar;
limited with NetFrameworkBase.System.Globalization.CalendarAlgorithmType;
limited with NetFrameworkBase.System.DayOfWeek;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Globalization.UmAlQuraCalendar is
   
   type Kind is new NetFrameworkBase.System.Globalization.Calendar.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function MinSupportedDateTime
      (
         this : in out UmAlQuraCalendar.Kind
      )
      return NetFrameworkBase.Date;
      
      function MaxSupportedDateTime
      (
         this : in out UmAlQuraCalendar.Kind
      )
      return NetFrameworkBase.Date;
      
      function AlgorithmType
      (
         this : in out UmAlQuraCalendar.Kind
      )
      return NetFrameworkBase.System.Globalization.CalendarAlgorithmType.Kind;
      
      function AddMonths
      (
         this : in out UmAlQuraCalendar.Kind;
         time : NetFrameworkBase.Date; 
         months : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Date;
      
      function AddYears
      (
         this : in out UmAlQuraCalendar.Kind;
         time : NetFrameworkBase.Date; 
         years : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Date;
      
      function GetDayOfMonth
      (
         this : in out UmAlQuraCalendar.Kind;
         time : NetFrameworkBase.Date
      )
      return NetFrameworkBase.Int32;
      
      function GetDayOfWeek
      (
         this : in out UmAlQuraCalendar.Kind;
         time : NetFrameworkBase.Date
      )
      return NetFrameworkBase.System.DayOfWeek.Kind;
      
      function GetDayOfYear
      (
         this : in out UmAlQuraCalendar.Kind;
         time : NetFrameworkBase.Date
      )
      return NetFrameworkBase.Int32;
      
      function GetDaysInMonth
      (
         this : in out UmAlQuraCalendar.Kind;
         year : NetFrameworkBase.Int32; 
         month : NetFrameworkBase.Int32; 
         era : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int32;
      
      function GetDaysInYear
      (
         this : in out UmAlQuraCalendar.Kind;
         year : NetFrameworkBase.Int32; 
         era : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int32;
      
      function GetEra
      (
         this : in out UmAlQuraCalendar.Kind;
         time : NetFrameworkBase.Date
      )
      return NetFrameworkBase.Int32;
      
      function Eras
      (
         this : in out UmAlQuraCalendar.Kind
      )
      return NetFrameworkBase.Int32_Array;
      
      function GetMonth
      (
         this : in out UmAlQuraCalendar.Kind;
         time : NetFrameworkBase.Date
      )
      return NetFrameworkBase.Int32;
      
      function GetMonthsInYear
      (
         this : in out UmAlQuraCalendar.Kind;
         year : NetFrameworkBase.Int32; 
         era : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int32;
      
      function GetYear
      (
         this : in out UmAlQuraCalendar.Kind;
         time : NetFrameworkBase.Date
      )
      return NetFrameworkBase.Int32;
      
      function IsLeapDay
      (
         this : in out UmAlQuraCalendar.Kind;
         year : NetFrameworkBase.Int32; 
         month : NetFrameworkBase.Int32; 
         day : NetFrameworkBase.Int32; 
         era : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function GetLeapMonth
      (
         this : in out UmAlQuraCalendar.Kind;
         year : NetFrameworkBase.Int32; 
         era : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int32;
      
      function IsLeapMonth
      (
         this : in out UmAlQuraCalendar.Kind;
         year : NetFrameworkBase.Int32; 
         month : NetFrameworkBase.Int32; 
         era : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsLeapYear
      (
         this : in out UmAlQuraCalendar.Kind;
         year : NetFrameworkBase.Int32; 
         era : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function ToDateTime
      (
         this : in out UmAlQuraCalendar.Kind;
         year : NetFrameworkBase.Int32; 
         month : NetFrameworkBase.Int32; 
         day : NetFrameworkBase.Int32; 
         hour : NetFrameworkBase.Int32; 
         minute : NetFrameworkBase.Int32; 
         second : NetFrameworkBase.Int32; 
         millisecond : NetFrameworkBase.Int32; 
         era : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Date;
      
      function TwoDigitYearMax
      (
         this : in out UmAlQuraCalendar.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure TwoDigitYearMax
      (
         this : in out UmAlQuraCalendar.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function ToFourDigitYear
      (
         this : in out UmAlQuraCalendar.Kind;
         year : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int32;
      
      function Constructor return NetFrameworkBase.System.Globalization.UmAlQuraCalendar.Kind_Ptr;
      
end;
