--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate;
limited with NetFrameworkBase.System.Security.Cryptography.AsymmetricAlgorithm;
limited with NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags;
limited with NetFrameworkBase.System.Security.SecureString;
limited with NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509NameType;
limited with NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509ExtensionCollection;
limited with NetFrameworkBase.System.Security.Cryptography.X509Certificates.X500DistinguishedName;
limited with NetFrameworkBase.System.Security.Cryptography.X509Certificates.PublicKey;
limited with NetFrameworkBase.System.Security.Cryptography.Oid;
limited with NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509ContentType;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2 is
   
   type Kind is new NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function ToString
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Archived
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure Archived
      (
         this : in out X509Certificate2.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function Extensions
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Kind_Ptr;
      
      function FriendlyName
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure FriendlyName
      (
         this : in out X509Certificate2.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function IssuerName
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X500DistinguishedName.Kind_Ptr;
      
      function NotAfter
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.Date;
      
      function NotBefore
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.Date;
      
      function HasPrivateKey
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function PrivateKey
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.AsymmetricAlgorithm.Kind_Ptr;
      
      procedure PrivateKey
      (
         this : in out X509Certificate2.Kind;
         value : NetFrameworkBase.System.Security.Cryptography.AsymmetricAlgorithm.Kind_Ptr
      );
      
      function PublicKey
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.PublicKey.Kind_Ptr;
      
      function RawData
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.Byte_Array;
      
      function SerialNumber
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function SubjectName
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X500DistinguishedName.Kind_Ptr;
      
      function SignatureAlgorithm
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.Oid.Kind_Ptr;
      
      function Thumbprint
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Version
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure Import
      (
         this : in out X509Certificate2.Kind;
         rawData : NetFrameworkBase.Byte_Array
      );
      
      procedure Import
      (
         this : in out X509Certificate2.Kind;
         rawData : NetFrameworkBase.Byte_Array; 
         password : NetFrameworkBase.BSTR; 
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      );
      
      procedure Import
      (
         this : in out X509Certificate2.Kind;
         rawData : NetFrameworkBase.Byte_Array; 
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr; 
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      );
      
      procedure Import
      (
         this : in out X509Certificate2.Kind;
         fileName : NetFrameworkBase.BSTR
      );
      
      procedure Import
      (
         this : in out X509Certificate2.Kind;
         fileName : NetFrameworkBase.BSTR; 
         password : NetFrameworkBase.BSTR; 
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      );
      
      procedure Import
      (
         this : in out X509Certificate2.Kind;
         fileName : NetFrameworkBase.BSTR; 
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr; 
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      );
      
      procedure Reset
      (
         this : in out X509Certificate2.Kind
      );
      
      function Verify
      (
         this : in out X509Certificate2.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function GetCertContentType
      (
         rawData : NetFrameworkBase.Byte_Array
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509ContentType.Kind;
      
      function GetCertContentType
      (
         fileName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509ContentType.Kind;
      
      function ToString
      (
         this : in out X509Certificate2.Kind;
         verbose : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.BSTR;
      
      function GetNameInfo
      (
         this : in out X509Certificate2.Kind;
         nameType : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509NameType.Kind; 
         forIssuer : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.BSTR;
      
      function Constructor return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function Constructor
      (
         rawData : NetFrameworkBase.Byte_Array
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function Constructor
      (
         rawData : NetFrameworkBase.Byte_Array;
         password : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function Constructor
      (
         rawData : NetFrameworkBase.Byte_Array;
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function Constructor
      (
         rawData : NetFrameworkBase.Byte_Array;
         password : NetFrameworkBase.BSTR;
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function Constructor
      (
         rawData : NetFrameworkBase.Byte_Array;
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr;
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function Constructor
      (
         fileName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function Constructor
      (
         fileName : NetFrameworkBase.BSTR;
         password : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function Constructor
      (
         fileName : NetFrameworkBase.BSTR;
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function Constructor
      (
         fileName : NetFrameworkBase.BSTR;
         password : NetFrameworkBase.BSTR;
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function Constructor
      (
         fileName : NetFrameworkBase.BSTR;
         password : NetFrameworkBase.System.Security.SecureString.Kind_Ptr;
         keyStorageFlags : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.Kind
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function Constructor
      (
         handle : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
      function Constructor
      (
         certificate : NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate.Kind_Ptr
      )
      return NetFrameworkBase.System.Security.Cryptography.X509Certificates.X509Certificate2.Kind_Ptr;
      
end;
