--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Type_x;
limited with NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext;
limited with NetFrameworkBase.System.Globalization.CultureInfo;
limited with NetFrameworkBase.System.Collections.IDictionary;
limited with NetFrameworkBase.System.Attribute;
limited with NetFrameworkBase.System.ComponentModel.PropertyDescriptorCollection;
limited with NetFrameworkBase.System.Collections.ICollection;
limited with NetFrameworkBase.System.ComponentModel.TypeConverter.StandardValuesCollection;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.ComponentModel.TypeConverter is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function CanConvertFrom
      (
         this : in out TypeConverter.Kind;
         sourceType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function CanConvertFrom
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         sourceType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function CanConvertTo
      (
         this : in out TypeConverter.Kind;
         destinationType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function CanConvertTo
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         destinationType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function ConvertFrom
      (
         this : in out TypeConverter.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ConvertFrom
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         culture : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ConvertFromInvariantString
      (
         this : in out TypeConverter.Kind;
         text : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ConvertFromInvariantString
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         text : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ConvertFromString
      (
         this : in out TypeConverter.Kind;
         text : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ConvertFromString
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         text : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ConvertFromString
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         culture : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr; 
         text : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ConvertTo
      (
         this : in out TypeConverter.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr; 
         destinationType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ConvertTo
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         culture : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr; 
         value : NetFrameworkBase.System.Object.Kind_Ptr; 
         destinationType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ConvertToInvariantString
      (
         this : in out TypeConverter.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function ConvertToInvariantString
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function ConvertToString
      (
         this : in out TypeConverter.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function ConvertToString
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function ConvertToString
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         culture : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function CreateInstance
      (
         this : in out TypeConverter.Kind;
         propertyValues : NetFrameworkBase.System.Collections.IDictionary.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function CreateInstance
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         propertyValues : NetFrameworkBase.System.Collections.IDictionary.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetCreateInstanceSupported
      (
         this : in out TypeConverter.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function GetCreateInstanceSupported
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetProperties
      (
         this : in out TypeConverter.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.ComponentModel.PropertyDescriptorCollection.Kind_Ptr;
      
      function GetProperties
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         value : NetFrameworkBase.System.Object.Kind_Ptr; 
         attributes : NetFrameworkBase.System.Attribute.Kind_Array
      )
      return NetFrameworkBase.System.ComponentModel.PropertyDescriptorCollection.Kind_Ptr;
      
      function GetPropertiesSupported
      (
         this : in out TypeConverter.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function GetPropertiesSupported
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetStandardValues
      (
         this : in out TypeConverter.Kind
      )
      return NetFrameworkBase.System.Collections.ICollection.Kind_Ptr;
      
      function GetStandardValues
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr
      )
      return NetFrameworkBase.System.ComponentModel.TypeConverter.StandardValuesCollection.Kind_Ptr;
      
      function GetStandardValuesExclusive
      (
         this : in out TypeConverter.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function GetStandardValuesExclusive
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetStandardValuesSupported
      (
         this : in out TypeConverter.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function GetStandardValuesSupported
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function IsValid
      (
         this : in out TypeConverter.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function IsValid
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetProperties
      (
         this : in out TypeConverter.Kind;
         context : NetFrameworkBase.System.ComponentModel.ITypeDescriptorContext.Kind_Ptr; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.ComponentModel.PropertyDescriptorCollection.Kind_Ptr;
      
      function Constructor return NetFrameworkBase.System.ComponentModel.TypeConverter.Kind_Ptr;
      
end;
