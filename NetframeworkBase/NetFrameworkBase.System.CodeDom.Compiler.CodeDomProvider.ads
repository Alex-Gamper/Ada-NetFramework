--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.ComponentModel.Component;
limited with NetFrameworkBase.System.IO.TextWriter;
limited with NetFrameworkBase.System.Type_x;
limited with NetFrameworkBase.System.CodeDom.Compiler.CompilerParameters;
limited with NetFrameworkBase.System.CodeDom.CodeCompileUnit;
limited with NetFrameworkBase.System.CodeDom.CodeTypeReference;
limited with NetFrameworkBase.System.CodeDom.Compiler.GeneratorSupport;
limited with NetFrameworkBase.System.CodeDom.CodeExpression;
limited with NetFrameworkBase.System.CodeDom.Compiler.CodeGeneratorOptions;
limited with NetFrameworkBase.System.CodeDom.CodeStatement;
limited with NetFrameworkBase.System.CodeDom.CodeNamespace;
limited with NetFrameworkBase.System.CodeDom.CodeTypeDeclaration;
limited with NetFrameworkBase.System.CodeDom.CodeTypeMember;
limited with NetFrameworkBase.System.IO.TextReader;
limited with NetFrameworkBase.System.CodeDom.Compiler.CompilerInfo;
limited with NetFrameworkBase.System.CodeDom.Compiler.LanguageOptions;
limited with NetFrameworkBase.System.CodeDom.Compiler.ICodeGenerator;
limited with NetFrameworkBase.System.CodeDom.Compiler.ICodeParser;
limited with NetFrameworkBase.System.ComponentModel.TypeConverter;
limited with NetFrameworkBase.System.CodeDom.Compiler.CompilerResults;
limited with NetFrameworkBase.System.CodeDom.Compiler.ICodeCompiler;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.CodeDom.Compiler.CodeDomProvider is
   
   type Kind is new NetFrameworkBase.System.ComponentModel.Component.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function IsDefinedExtension
      (
         extension : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function GetAllCompilerInfo
      return NetFrameworkBase.System.CodeDom.Compiler.CompilerInfo.Kind_Array;
      
      function GetLanguageFromExtension
      (
         extension : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      function GetCompilerInfo
      (
         language : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.CodeDom.Compiler.CompilerInfo.Kind_Ptr;
      
      function CreateProvider
      (
         language : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.CodeDom.Compiler.CodeDomProvider.Kind_Ptr;
      
      function IsDefinedLanguage
      (
         language : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function FileExtension
      (
         this : in out CodeDomProvider.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function LanguageOptions
      (
         this : in out CodeDomProvider.Kind
      )
      return NetFrameworkBase.System.CodeDom.Compiler.LanguageOptions.Kind;
      
      function CreateGenerator
      (
         this : in out CodeDomProvider.Kind;
         output : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr
      )
      return NetFrameworkBase.System.CodeDom.Compiler.ICodeGenerator.Kind_Ptr;
      
      function CreateGenerator
      (
         this : in out CodeDomProvider.Kind;
         fileName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.CodeDom.Compiler.ICodeGenerator.Kind_Ptr;
      
      function CreateParser
      (
         this : in out CodeDomProvider.Kind
      )
      return NetFrameworkBase.System.CodeDom.Compiler.ICodeParser.Kind_Ptr;
      
      function GetConverter
      (
         this : in out CodeDomProvider.Kind;
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.ComponentModel.TypeConverter.Kind_Ptr;
      
      function CompileAssemblyFromDom
      (
         this : in out CodeDomProvider.Kind;
         options : NetFrameworkBase.System.CodeDom.Compiler.CompilerParameters.Kind_Ptr; 
         compilationUnits : NetFrameworkBase.System.CodeDom.CodeCompileUnit.Kind_Array
      )
      return NetFrameworkBase.System.CodeDom.Compiler.CompilerResults.Kind_Ptr;
      
      function CompileAssemblyFromFile
      (
         this : in out CodeDomProvider.Kind;
         options : NetFrameworkBase.System.CodeDom.Compiler.CompilerParameters.Kind_Ptr; 
         fileNames : NetFrameworkBase.BSTR_Array
      )
      return NetFrameworkBase.System.CodeDom.Compiler.CompilerResults.Kind_Ptr;
      
      function CompileAssemblyFromSource
      (
         this : in out CodeDomProvider.Kind;
         options : NetFrameworkBase.System.CodeDom.Compiler.CompilerParameters.Kind_Ptr; 
         sources : NetFrameworkBase.BSTR_Array
      )
      return NetFrameworkBase.System.CodeDom.Compiler.CompilerResults.Kind_Ptr;
      
      function IsValidIdentifier
      (
         this : in out CodeDomProvider.Kind;
         value : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Boolean;
      
      function CreateEscapedIdentifier
      (
         this : in out CodeDomProvider.Kind;
         value : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      function CreateValidIdentifier
      (
         this : in out CodeDomProvider.Kind;
         value : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.BSTR;
      
      function GetTypeOutput
      (
         this : in out CodeDomProvider.Kind;
         type_x : NetFrameworkBase.System.CodeDom.CodeTypeReference.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function Supports
      (
         this : in out CodeDomProvider.Kind;
         generatorSupport : NetFrameworkBase.System.CodeDom.Compiler.GeneratorSupport.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure GenerateCodeFromExpression
      (
         this : in out CodeDomProvider.Kind;
         expression : NetFrameworkBase.System.CodeDom.CodeExpression.Kind_Ptr; 
         writer : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr; 
         options : NetFrameworkBase.System.CodeDom.Compiler.CodeGeneratorOptions.Kind_Ptr
      );
      
      procedure GenerateCodeFromStatement
      (
         this : in out CodeDomProvider.Kind;
         statement : NetFrameworkBase.System.CodeDom.CodeStatement.Kind_Ptr; 
         writer : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr; 
         options : NetFrameworkBase.System.CodeDom.Compiler.CodeGeneratorOptions.Kind_Ptr
      );
      
      procedure GenerateCodeFromNamespace
      (
         this : in out CodeDomProvider.Kind;
         codeNamespace : NetFrameworkBase.System.CodeDom.CodeNamespace.Kind_Ptr; 
         writer : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr; 
         options : NetFrameworkBase.System.CodeDom.Compiler.CodeGeneratorOptions.Kind_Ptr
      );
      
      procedure GenerateCodeFromCompileUnit
      (
         this : in out CodeDomProvider.Kind;
         compileUnit : NetFrameworkBase.System.CodeDom.CodeCompileUnit.Kind_Ptr; 
         writer : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr; 
         options : NetFrameworkBase.System.CodeDom.Compiler.CodeGeneratorOptions.Kind_Ptr
      );
      
      procedure GenerateCodeFromType
      (
         this : in out CodeDomProvider.Kind;
         codeType : NetFrameworkBase.System.CodeDom.CodeTypeDeclaration.Kind_Ptr; 
         writer : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr; 
         options : NetFrameworkBase.System.CodeDom.Compiler.CodeGeneratorOptions.Kind_Ptr
      );
      
      procedure GenerateCodeFromMember
      (
         this : in out CodeDomProvider.Kind;
         member : NetFrameworkBase.System.CodeDom.CodeTypeMember.Kind_Ptr; 
         writer : NetFrameworkBase.System.IO.TextWriter.Kind_Ptr; 
         options : NetFrameworkBase.System.CodeDom.Compiler.CodeGeneratorOptions.Kind_Ptr
      );
      
      function Parse
      (
         this : in out CodeDomProvider.Kind;
         codeStream : NetFrameworkBase.System.IO.TextReader.Kind_Ptr
      )
      return NetFrameworkBase.System.CodeDom.CodeCompileUnit.Kind_Ptr;
      
      function CreateGenerator
      (
         this : in out CodeDomProvider.Kind
      )
      return NetFrameworkBase.System.CodeDom.Compiler.ICodeGenerator.Kind_Ptr;
      
      function CreateCompiler
      (
         this : in out CodeDomProvider.Kind
      )
      return NetFrameworkBase.System.CodeDom.Compiler.ICodeCompiler.Kind_Ptr;
      
end;
