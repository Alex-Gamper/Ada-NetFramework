--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.ValueType;
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.IFormatProvider;
limited with NetFrameworkBase.System.Globalization.CultureInfo;
limited with NetFrameworkBase.System.TypeCode;
limited with NetFrameworkBase.System.Globalization.UnicodeCategory;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Char is
   
   type Kind is new NetFrameworkBase.System.ValueType.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function GetHashCode
      (
         this : in out Char.Kind
      )
      return NetFrameworkBase.Int32;
      
      function Equals
      (
         this : in out Char.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function Equals
      (
         this : in out Char.Kind;
         obj : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function CompareTo
      (
         this : in out Char.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function CompareTo
      (
         this : in out Char.Kind;
         value : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Int32;
      
      function ToString
      (
         this : in out Char.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function ToString
      (
         this : in out Char.Kind;
         provider : NetFrameworkBase.System.IFormatProvider.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function ToString
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.BSTR;
      
      function Parse
      (
         s : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Wide_Char;
      
      function TryParse
      (
         s : NetFrameworkBase.BSTR;
         result : out NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsDigit
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsLetter
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsWhiteSpace
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsUpper
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsLower
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsPunctuation
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsLetterOrDigit
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function ToUpper
      (
         c : NetFrameworkBase.Wide_Char;
         culture : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr
      )
      return NetFrameworkBase.Wide_Char;
      
      function ToUpper
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Wide_Char;
      
      function ToUpperInvariant
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Wide_Char;
      
      function ToLower
      (
         c : NetFrameworkBase.Wide_Char;
         culture : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr
      )
      return NetFrameworkBase.Wide_Char;
      
      function ToLower
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Wide_Char;
      
      function ToLowerInvariant
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Wide_Char;
      
      function GetTypeCode
      (
         this : in out Char.Kind
      )
      return NetFrameworkBase.System.TypeCode.Kind;
      
      function IsControl
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsControl
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsDigit
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsLetter
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsLetterOrDigit
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsLower
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsNumber
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsNumber
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsPunctuation
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsSeparator
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsSeparator
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsSurrogate
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsSurrogate
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsSymbol
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsSymbol
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsUpper
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsWhiteSpace
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function GetUnicodeCategory
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.System.Globalization.UnicodeCategory.Kind;
      
      function GetUnicodeCategory
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Globalization.UnicodeCategory.Kind;
      
      function GetNumericValue
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Double;
      
      function GetNumericValue
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Double;
      
      function IsHighSurrogate
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsHighSurrogate
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsLowSurrogate
      (
         c : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function IsLowSurrogate
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsSurrogatePair
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Boolean;
      
      function IsSurrogatePair
      (
         highSurrogate : NetFrameworkBase.Wide_Char;
         lowSurrogate : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Boolean;
      
      function ConvertFromUtf32
      (
         utf32 : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.BSTR;
      
      function ConvertToUtf32
      (
         highSurrogate : NetFrameworkBase.Wide_Char;
         lowSurrogate : NetFrameworkBase.Wide_Char
      )
      return NetFrameworkBase.Int32;
      
      function ConvertToUtf32
      (
         s : NetFrameworkBase.BSTR;
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int32;
      
end;
