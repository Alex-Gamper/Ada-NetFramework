--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Enum;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Diagnostics.PerformanceData.CounterType is
   
   type Kind_Clr is new NetFrameworkBase.System.Enum.Kind with null record;
   type Kind_Clr_Ptr is access Kind_Clr;
   type Kind_Clr_Array is array(Natural range<>) of Kind_Clr_Ptr;
   type Kind_Clr_Array_Ptr is access all Kind_Clr_Array;
   
   type Kind is (
      RawDataHex32,
      RawDataHex64,
      RawData32,
      RawData64,
      Delta32,
      Delta64,
      SampleCounter,
      QueueLength,
      LargeQueueLength,
      QueueLength100Ns,
      QueueLengthObjectTime,
      RateOfCountPerSecond32,
      RateOfCountPerSecond64,
      RawFraction32,
      RawFraction64,
      PercentageActive,
      PrecisionSystemTimer,
      PercentageActive100Ns,
      PrecisionTimer100Ns,
      ObjectSpecificTimer,
      PrecisionObjectSpecificTimer,
      SampleFraction,
      PercentageNotActive,
      PercentageNotActive100Ns,
      MultiTimerPercentageActive,
      MultiTimerPercentageActive100Ns,
      MultiTimerPercentageNotActive,
      MultiTimerPercentageNotActive100Ns,
      AverageTimer32,
      ElapsedTime,
      AverageCount64,
      SampleBase,
      AverageBase,
      RawBase32,
      RawBase64,
      MultiTimerBase
   );
   
   for Kind use (
      RawDataHex32 => 0,
      RawDataHex64 => 256,
      RawData32 => 65536,
      RawData64 => 65792,
      Delta32 => 4195328,
      Delta64 => 4195584,
      SampleCounter => 4260864,
      QueueLength => 4523008,
      LargeQueueLength => 4523264,
      QueueLength100Ns => 5571840,
      QueueLengthObjectTime => 6620416,
      RateOfCountPerSecond32 => 272696320,
      RateOfCountPerSecond64 => 272696576,
      RawFraction32 => 537003008,
      RawFraction64 => 537003264,
      PercentageActive => 541132032,
      PrecisionSystemTimer => 541525248,
      PercentageActive100Ns => 542180608,
      PrecisionTimer100Ns => 542573824,
      ObjectSpecificTimer => 543229184,
      PrecisionObjectSpecificTimer => 543622400,
      SampleFraction => 549585920,
      PercentageNotActive => 557909248,
      PercentageNotActive100Ns => 558957824,
      MultiTimerPercentageActive => 574686464,
      MultiTimerPercentageActive100Ns => 575735040,
      MultiTimerPercentageNotActive => 591463680,
      MultiTimerPercentageNotActive100Ns => 592512256,
      AverageTimer32 => 805438464,
      ElapsedTime => 807666944,
      AverageCount64 => 1073874176,
      SampleBase => 1073939457,
      AverageBase => 1073939458,
      RawBase32 => 1073939459,
      RawBase64 => 1073939712,
      MultiTimerBase => 1107494144
   );
   
   for Kind'Size use 32;
   
   type Kind_Ptr is access Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
   function Instance return NetFrameworkWin32.IType_Ptr;
   
end;
