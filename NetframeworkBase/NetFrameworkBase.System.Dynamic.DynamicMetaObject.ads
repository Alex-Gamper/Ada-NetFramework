--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Dynamic.ConvertBinder;
limited with NetFrameworkBase.System.Dynamic.GetMemberBinder;
limited with NetFrameworkBase.System.Dynamic.SetMemberBinder;
limited with NetFrameworkBase.System.Dynamic.DeleteMemberBinder;
limited with NetFrameworkBase.System.Dynamic.GetIndexBinder;
limited with NetFrameworkBase.System.Dynamic.SetIndexBinder;
limited with NetFrameworkBase.System.Dynamic.DeleteIndexBinder;
limited with NetFrameworkBase.System.Dynamic.InvokeMemberBinder;
limited with NetFrameworkBase.System.Dynamic.InvokeBinder;
limited with NetFrameworkBase.System.Dynamic.CreateInstanceBinder;
limited with NetFrameworkBase.System.Dynamic.UnaryOperationBinder;
limited with NetFrameworkBase.System.Dynamic.BinaryOperationBinder;
limited with NetFrameworkBase.System.Linq.Expressions.Expression;
limited with NetFrameworkBase.System.Dynamic.BindingRestrictions;
limited with NetFrameworkBase.System.Type_x;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Dynamic.DynamicMetaObject is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function Expression
      (
         this : in out DynamicMetaObject.Kind
      )
      return NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr;
      
      function Restrictions
      (
         this : in out DynamicMetaObject.Kind
      )
      return NetFrameworkBase.System.Dynamic.BindingRestrictions.Kind_Ptr;
      
      function Value
      (
         this : in out DynamicMetaObject.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function HasValue
      (
         this : in out DynamicMetaObject.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function RuntimeType
      (
         this : in out DynamicMetaObject.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function LimitType
      (
         this : in out DynamicMetaObject.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function BindConvert
      (
         this : in out DynamicMetaObject.Kind;
         binder : NetFrameworkBase.System.Dynamic.ConvertBinder.Kind_Ptr
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function BindGetMember
      (
         this : in out DynamicMetaObject.Kind;
         binder : NetFrameworkBase.System.Dynamic.GetMemberBinder.Kind_Ptr
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function BindSetMember
      (
         this : in out DynamicMetaObject.Kind;
         binder : NetFrameworkBase.System.Dynamic.SetMemberBinder.Kind_Ptr; 
         value : NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function BindDeleteMember
      (
         this : in out DynamicMetaObject.Kind;
         binder : NetFrameworkBase.System.Dynamic.DeleteMemberBinder.Kind_Ptr
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function BindGetIndex
      (
         this : in out DynamicMetaObject.Kind;
         binder : NetFrameworkBase.System.Dynamic.GetIndexBinder.Kind_Ptr; 
         indexes : NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Array
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function BindSetIndex
      (
         this : in out DynamicMetaObject.Kind;
         binder : NetFrameworkBase.System.Dynamic.SetIndexBinder.Kind_Ptr; 
         indexes : NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Array; 
         value : NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function BindDeleteIndex
      (
         this : in out DynamicMetaObject.Kind;
         binder : NetFrameworkBase.System.Dynamic.DeleteIndexBinder.Kind_Ptr; 
         indexes : NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Array
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function BindInvokeMember
      (
         this : in out DynamicMetaObject.Kind;
         binder : NetFrameworkBase.System.Dynamic.InvokeMemberBinder.Kind_Ptr; 
         args : NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Array
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function BindInvoke
      (
         this : in out DynamicMetaObject.Kind;
         binder : NetFrameworkBase.System.Dynamic.InvokeBinder.Kind_Ptr; 
         args : NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Array
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function BindCreateInstance
      (
         this : in out DynamicMetaObject.Kind;
         binder : NetFrameworkBase.System.Dynamic.CreateInstanceBinder.Kind_Ptr; 
         args : NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Array
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function BindUnaryOperation
      (
         this : in out DynamicMetaObject.Kind;
         binder : NetFrameworkBase.System.Dynamic.UnaryOperationBinder.Kind_Ptr
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function BindBinaryOperation
      (
         this : in out DynamicMetaObject.Kind;
         binder : NetFrameworkBase.System.Dynamic.BinaryOperationBinder.Kind_Ptr; 
         arg : NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function Create
      (
         value : NetFrameworkBase.System.Object.Kind_Ptr; 
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function Constructor
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr;
         restrictions : NetFrameworkBase.System.Dynamic.BindingRestrictions.Kind_Ptr
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
      function Constructor
      (
         expression : NetFrameworkBase.System.Linq.Expressions.Expression.Kind_Ptr;
         restrictions : NetFrameworkBase.System.Dynamic.BindingRestrictions.Kind_Ptr;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.Dynamic.DynamicMetaObject.Kind_Ptr;
      
end;
