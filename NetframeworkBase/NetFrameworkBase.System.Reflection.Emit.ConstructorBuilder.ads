--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Reflection.ConstructorInfo;
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Reflection.BindingFlags;
limited with NetFrameworkBase.System.Reflection.Binder;
limited with NetFrameworkBase.System.Globalization.CultureInfo;
limited with NetFrameworkBase.System.Type_x;
limited with NetFrameworkBase.System.Security.Permissions.SecurityAction;
limited with NetFrameworkBase.System.Security.PermissionSet;
limited with NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder;
limited with NetFrameworkBase.System.Reflection.MethodImplAttributes;
limited with NetFrameworkBase.System.Reflection.ParameterAttributes;
limited with NetFrameworkBase.System.Reflection.Module;
limited with NetFrameworkBase.System.Reflection.ParameterInfo;
limited with NetFrameworkBase.System.Reflection.MethodAttributes;
limited with NetFrameworkBase.System.RuntimeMethodHandle;
limited with NetFrameworkBase.System.Reflection.Emit.MethodToken;
limited with NetFrameworkBase.System.Reflection.Emit.ILGenerator;
limited with NetFrameworkBase.System.Reflection.CallingConventions;
limited with NetFrameworkBase.System.Reflection.Emit.ParameterBuilder;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Reflection.Emit.ConstructorBuilder is
   
   type Kind is new NetFrameworkBase.System.Reflection.ConstructorInfo.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function ToString
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Module
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.Module.Kind_Ptr;
      
      function ReflectedType
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function DeclaringType
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function Name
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function Invoke
      (
         this : in out ConstructorBuilder.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr; 
         invokeAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind; 
         binder : NetFrameworkBase.System.Reflection.Binder.Kind_Ptr; 
         parameters : NetFrameworkBase.System.Object.Kind_Array; 
         culture : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetParameters
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.ParameterInfo.Kind_Array;
      
      function Attributes
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.MethodAttributes.Kind;
      
      function GetMethodImplementationFlags
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.MethodImplAttributes.Kind;
      
      function MethodHandle
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.System.RuntimeMethodHandle.Kind_Ptr;
      
      function Invoke
      (
         this : in out ConstructorBuilder.Kind;
         invokeAttr : NetFrameworkBase.System.Reflection.BindingFlags.Kind; 
         binder : NetFrameworkBase.System.Reflection.Binder.Kind_Ptr; 
         parameters : NetFrameworkBase.System.Object.Kind_Array; 
         culture : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetCustomAttributes
      (
         this : in out ConstructorBuilder.Kind;
         inherit : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Object.Kind_Array;
      
      function GetCustomAttributes
      (
         this : in out ConstructorBuilder.Kind;
         attributeType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         inherit : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Object.Kind_Array;
      
      function IsDefined
      (
         this : in out ConstructorBuilder.Kind;
         attributeType : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         inherit : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.Boolean;
      
      function GetToken
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.MethodToken.Kind_Ptr;
      
      procedure SetSymCustomAttribute
      (
         this : in out ConstructorBuilder.Kind;
         name : NetFrameworkBase.BSTR; 
         data : NetFrameworkBase.Byte_Array
      );
      
      function GetILGenerator
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.Emit.ILGenerator.Kind_Ptr;
      
      function GetILGenerator
      (
         this : in out ConstructorBuilder.Kind;
         streamSize : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Reflection.Emit.ILGenerator.Kind_Ptr;
      
      procedure AddDeclarativeSecurity
      (
         this : in out ConstructorBuilder.Kind;
         action : NetFrameworkBase.System.Security.Permissions.SecurityAction.Kind; 
         pset : NetFrameworkBase.System.Security.PermissionSet.Kind_Ptr
      );
      
      function CallingConvention
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.CallingConventions.Kind;
      
      function GetModule
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.System.Reflection.Module.Kind_Ptr;
      
      function ReturnType
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function Signature
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure SetCustomAttribute
      (
         this : in out ConstructorBuilder.Kind;
         con : NetFrameworkBase.System.Reflection.ConstructorInfo.Kind_Ptr; 
         binaryAttribute : NetFrameworkBase.Byte_Array
      );
      
      procedure SetCustomAttribute
      (
         this : in out ConstructorBuilder.Kind;
         customBuilder : NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Kind_Ptr
      );
      
      procedure SetImplementationFlags
      (
         this : in out ConstructorBuilder.Kind;
         attributes : NetFrameworkBase.System.Reflection.MethodImplAttributes.Kind
      );
      
      function InitLocals
      (
         this : in out ConstructorBuilder.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure InitLocals
      (
         this : in out ConstructorBuilder.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function DefineParameter
      (
         this : in out ConstructorBuilder.Kind;
         iSequence : NetFrameworkBase.Int32; 
         attributes : NetFrameworkBase.System.Reflection.ParameterAttributes.Kind; 
         strParamName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Reflection.Emit.ParameterBuilder.Kind_Ptr;
      
end;
