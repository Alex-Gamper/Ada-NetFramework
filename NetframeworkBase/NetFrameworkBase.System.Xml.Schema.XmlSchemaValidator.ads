--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Xml.XmlResolver;
limited with NetFrameworkBase.System.Xml.IXmlLineInfo;
limited with NetFrameworkBase.System.Uri;
limited with NetFrameworkBase.System.Xml.Schema.ValidationEventHandler;
limited with NetFrameworkBase.System.Xml.Schema.XmlSchemaInfo;
limited with NetFrameworkBase.System.Xml.Schema.XmlValueGetter;
limited with NetFrameworkBase.System.Xml.Schema.XmlSchema;
limited with NetFrameworkBase.System.Xml.Schema.XmlSchemaObject;
limited with NetFrameworkBase.System.Collections.ArrayList;
limited with NetFrameworkBase.System.Xml.XmlNameTable;
limited with NetFrameworkBase.System.Xml.Schema.XmlSchemaSet;
limited with NetFrameworkBase.System.Xml.IXmlNamespaceResolver;
limited with NetFrameworkBase.System.Xml.Schema.XmlSchemaValidationFlags;
limited with NetFrameworkBase.System.Xml.Schema.XmlSchemaParticle;
limited with NetFrameworkBase.System.Xml.Schema.XmlSchemaAttribute;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Xml.Schema.XmlSchemaValidator is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      procedure Initialize
      (
         this : in out XmlSchemaValidator.Kind
      );
      
      procedure XmlResolver
      (
         this : in out XmlSchemaValidator.Kind;
         value : NetFrameworkBase.System.Xml.XmlResolver.Kind_Ptr
      );
      
      function LineInfoProvider
      (
         this : in out XmlSchemaValidator.Kind
      )
      return NetFrameworkBase.System.Xml.IXmlLineInfo.Kind_Ptr;
      
      procedure LineInfoProvider
      (
         this : in out XmlSchemaValidator.Kind;
         value : NetFrameworkBase.System.Xml.IXmlLineInfo.Kind_Ptr
      );
      
      function SourceUri
      (
         this : in out XmlSchemaValidator.Kind
      )
      return NetFrameworkBase.System.Uri.Kind_Ptr;
      
      procedure SourceUri
      (
         this : in out XmlSchemaValidator.Kind;
         value : NetFrameworkBase.System.Uri.Kind_Ptr
      );
      
      function ValidationEventSender
      (
         this : in out XmlSchemaValidator.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      procedure ValidationEventSender
      (
         this : in out XmlSchemaValidator.Kind;
         value : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      procedure add_ValidationEventHandler
      (
         this : in out XmlSchemaValidator.Kind;
         value : NetFrameworkBase.System.Xml.Schema.ValidationEventHandler.Kind_Ptr
      );
      
      procedure remove_ValidationEventHandler
      (
         this : in out XmlSchemaValidator.Kind;
         value : NetFrameworkBase.System.Xml.Schema.ValidationEventHandler.Kind_Ptr
      );
      
      procedure ValidateElement
      (
         this : in out XmlSchemaValidator.Kind;
         localName : NetFrameworkBase.BSTR; 
         namespaceUri : NetFrameworkBase.BSTR; 
         schemaInfo : NetFrameworkBase.System.Xml.Schema.XmlSchemaInfo.Kind_Ptr
      );
      
      procedure ValidateElement
      (
         this : in out XmlSchemaValidator.Kind;
         localName : NetFrameworkBase.BSTR; 
         namespaceUri : NetFrameworkBase.BSTR; 
         schemaInfo : NetFrameworkBase.System.Xml.Schema.XmlSchemaInfo.Kind_Ptr; 
         xsiType : NetFrameworkBase.BSTR; 
         xsiNil : NetFrameworkBase.BSTR; 
         xsiSchemaLocation : NetFrameworkBase.BSTR; 
         xsiNoNamespaceSchemaLocation : NetFrameworkBase.BSTR
      );
      
      function ValidateAttribute
      (
         this : in out XmlSchemaValidator.Kind;
         localName : NetFrameworkBase.BSTR; 
         namespaceUri : NetFrameworkBase.BSTR; 
         attributeValue : NetFrameworkBase.BSTR; 
         schemaInfo : NetFrameworkBase.System.Xml.Schema.XmlSchemaInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ValidateAttribute
      (
         this : in out XmlSchemaValidator.Kind;
         localName : NetFrameworkBase.BSTR; 
         namespaceUri : NetFrameworkBase.BSTR; 
         attributeValue : NetFrameworkBase.System.Xml.Schema.XmlValueGetter.Kind_Ptr; 
         schemaInfo : NetFrameworkBase.System.Xml.Schema.XmlSchemaInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      procedure ValidateEndOfAttributes
      (
         this : in out XmlSchemaValidator.Kind;
         schemaInfo : NetFrameworkBase.System.Xml.Schema.XmlSchemaInfo.Kind_Ptr
      );
      
      procedure ValidateText
      (
         this : in out XmlSchemaValidator.Kind;
         elementValue : NetFrameworkBase.BSTR
      );
      
      procedure ValidateText
      (
         this : in out XmlSchemaValidator.Kind;
         elementValue : NetFrameworkBase.System.Xml.Schema.XmlValueGetter.Kind_Ptr
      );
      
      procedure ValidateWhitespace
      (
         this : in out XmlSchemaValidator.Kind;
         elementValue : NetFrameworkBase.BSTR
      );
      
      procedure ValidateWhitespace
      (
         this : in out XmlSchemaValidator.Kind;
         elementValue : NetFrameworkBase.System.Xml.Schema.XmlValueGetter.Kind_Ptr
      );
      
      function ValidateEndElement
      (
         this : in out XmlSchemaValidator.Kind;
         schemaInfo : NetFrameworkBase.System.Xml.Schema.XmlSchemaInfo.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function ValidateEndElement
      (
         this : in out XmlSchemaValidator.Kind;
         schemaInfo : NetFrameworkBase.System.Xml.Schema.XmlSchemaInfo.Kind_Ptr; 
         typedValue : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      procedure EndValidation
      (
         this : in out XmlSchemaValidator.Kind
      );
      
      procedure AddSchema
      (
         this : in out XmlSchemaValidator.Kind;
         schema : NetFrameworkBase.System.Xml.Schema.XmlSchema.Kind_Ptr
      );
      
      procedure Initialize
      (
         this : in out XmlSchemaValidator.Kind;
         partialValidationType : NetFrameworkBase.System.Xml.Schema.XmlSchemaObject.Kind_Ptr
      );
      
      procedure GetUnspecifiedDefaultAttributes
      (
         this : in out XmlSchemaValidator.Kind;
         defaultAttributes : NetFrameworkBase.System.Collections.ArrayList.Kind_Ptr
      );
      
      procedure SkipToEndElement
      (
         this : in out XmlSchemaValidator.Kind;
         schemaInfo : NetFrameworkBase.System.Xml.Schema.XmlSchemaInfo.Kind_Ptr
      );
      
      function GetExpectedParticles
      (
         this : in out XmlSchemaValidator.Kind
      )
      return NetFrameworkBase.System.Xml.Schema.XmlSchemaParticle.Kind_Array;
      
      function GetExpectedAttributes
      (
         this : in out XmlSchemaValidator.Kind
      )
      return NetFrameworkBase.System.Xml.Schema.XmlSchemaAttribute.Kind_Array;
      
      function Constructor
      (
         nameTable : NetFrameworkBase.System.Xml.XmlNameTable.Kind_Ptr;
         schemas : NetFrameworkBase.System.Xml.Schema.XmlSchemaSet.Kind_Ptr;
         namespaceResolver : NetFrameworkBase.System.Xml.IXmlNamespaceResolver.Kind_Ptr;
         validationFlags : NetFrameworkBase.System.Xml.Schema.XmlSchemaValidationFlags.Kind
      )
      return NetFrameworkBase.System.Xml.Schema.XmlSchemaValidator.Kind_Ptr;
      
end;
