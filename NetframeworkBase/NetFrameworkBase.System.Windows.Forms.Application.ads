--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Globalization.CultureInfo;
limited with NetFrameworkBase.System.Windows.Forms.InputLanguage;
limited with NetFrameworkBase.System.Windows.Forms.Application.MessageLoopCallback;
limited with NetFrameworkBase.System.EventHandler;
limited with NetFrameworkBase.System.Windows.Forms.IMessageFilter;
limited with NetFrameworkBase.System.Windows.Forms.Message;
limited with NetFrameworkBase.System.Threading.ThreadExceptionEventHandler;
limited with NetFrameworkBase.System.ComponentModel.CancelEventArgs;
limited with NetFrameworkBase.System.Exception_x;
limited with NetFrameworkBase.System.EventArgs;
limited with NetFrameworkBase.System.Windows.Forms.Form;
limited with NetFrameworkBase.System.Windows.Forms.ApplicationContext;
limited with NetFrameworkBase.System.Windows.Forms.PowerState;
limited with NetFrameworkBase.System.Windows.Forms.UnhandledExceptionMode;
limited with NetFrameworkBase.System.Windows.Forms.VisualStyles.VisualStyleState;
limited with NetFrameworkBase.Microsoft.Win32.RegistryKey;
limited with NetFrameworkBase.System.Windows.Forms.FormCollection;
limited with NetFrameworkBase.System.Threading.ApartmentState;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Windows.Forms.Application is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function AllowQuit
      return NetFrameworkBase.Boolean;
      
      function CommonAppDataRegistry
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function CurrentCulture
      return NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr;
      
      procedure CurrentCulture
      (
         value : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr
      )
      ;
      
      function CurrentInputLanguage
      return NetFrameworkBase.System.Windows.Forms.InputLanguage.Kind_Ptr;
      
      procedure CurrentInputLanguage
      (
         value : NetFrameworkBase.System.Windows.Forms.InputLanguage.Kind_Ptr
      )
      ;
      
      function MessageLoop
      return NetFrameworkBase.Boolean;
      
      function OpenForms
      return NetFrameworkBase.System.Windows.Forms.FormCollection.Kind_Ptr;
      
      procedure RegisterMessageLoop
      (
         callback : NetFrameworkBase.System.Windows.Forms.Application.MessageLoopCallback.Kind_Ptr
      )
      ;
      
      function RenderWithVisualStyles
      return NetFrameworkBase.Boolean;
      
      procedure SafeTopLevelCaptionFormat
      (
         value : NetFrameworkBase.BSTR
      )
      ;
      
      function StartupPath
      return NetFrameworkBase.BSTR;
      
      procedure UnregisterMessageLoop
      ;
      
      function UseWaitCursor
      return NetFrameworkBase.Boolean;
      
      procedure UseWaitCursor
      (
         value : NetFrameworkBase.Boolean
      )
      ;
      
      function VisualStyleState
      return NetFrameworkBase.System.Windows.Forms.VisualStyles.VisualStyleState.Kind;
      
      procedure add_ApplicationExit
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_ApplicationExit
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure AddMessageFilter
      (
         value : NetFrameworkBase.System.Windows.Forms.IMessageFilter.Kind_Ptr
      )
      ;
      
      function FilterMessage
      (
         message : NetFrameworkBase.System.Windows.Forms.Message.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      procedure add_Idle
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_Idle
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure add_EnterThreadModal
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_EnterThreadModal
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure add_LeaveThreadModal
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_LeaveThreadModal
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure add_ThreadException
      (
         value : NetFrameworkBase.System.Threading.ThreadExceptionEventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_ThreadException
      (
         value : NetFrameworkBase.System.Threading.ThreadExceptionEventHandler.Kind_Ptr
      )
      ;
      
      procedure add_ThreadExit
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure remove_ThreadExit
      (
         value : NetFrameworkBase.System.EventHandler.Kind_Ptr
      )
      ;
      
      procedure DoEvents
      ;
      
      procedure EnableVisualStyles
      ;
      
      procedure Exit_x
      ;
      
      procedure Exit_x
      (
         e : NetFrameworkBase.System.ComponentModel.CancelEventArgs.Kind_Ptr
      )
      ;
      
      procedure ExitThread
      ;
      
      function OleRequired
      return NetFrameworkBase.System.Threading.ApartmentState.Kind;
      
      procedure OnThreadException
      (
         t : NetFrameworkBase.System.Exception_x.Kind_Ptr
      )
      ;
      
      procedure RaiseIdle
      (
         e : NetFrameworkBase.System.EventArgs.Kind_Ptr
      )
      ;
      
      procedure RemoveMessageFilter
      (
         value : NetFrameworkBase.System.Windows.Forms.IMessageFilter.Kind_Ptr
      )
      ;
      
      procedure Run
      ;
      
      procedure Run
      (
         mainForm : NetFrameworkBase.System.Windows.Forms.Form.Kind_Ptr
      )
      ;
      
      procedure Run
      (
         context : NetFrameworkBase.System.Windows.Forms.ApplicationContext.Kind_Ptr
      )
      ;
      
      procedure SetCompatibleTextRenderingDefault
      (
         defaultValue : NetFrameworkBase.Boolean
      )
      ;
      
      function SetSuspendState
      (
         state : NetFrameworkBase.System.Windows.Forms.PowerState.Kind; 
         force : NetFrameworkBase.Boolean; 
         disableWakeEvent : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.Boolean;
      
      procedure SetUnhandledExceptionMode
      (
         mode : NetFrameworkBase.System.Windows.Forms.UnhandledExceptionMode.Kind
      )
      ;
      
      procedure SetUnhandledExceptionMode
      (
         mode : NetFrameworkBase.System.Windows.Forms.UnhandledExceptionMode.Kind; 
         threadScope : NetFrameworkBase.Boolean
      )
      ;
      
      function CommonAppDataPath
      return NetFrameworkBase.BSTR;
      
      function CompanyName
      return NetFrameworkBase.BSTR;
      
      function LocalUserAppDataPath
      return NetFrameworkBase.BSTR;
      
      function ProductName
      return NetFrameworkBase.BSTR;
      
      function SafeTopLevelCaptionFormat
      return NetFrameworkBase.BSTR;
      
      function UserAppDataPath
      return NetFrameworkBase.BSTR;
      
      function UserAppDataRegistry
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      procedure VisualStyleState
      (
         value : NetFrameworkBase.System.Windows.Forms.VisualStyles.VisualStyleState.Kind
      )
      ;
      
      procedure Restart
      ;
      
      function ExecutablePath
      return NetFrameworkBase.BSTR;
      
      function ProductVersion
      return NetFrameworkBase.BSTR;
      
end;
