--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Version;
limited with NetFrameworkBase.System.Globalization.CultureInfo;
limited with NetFrameworkBase.System.Reflection.ProcessorArchitecture;
limited with NetFrameworkBase.System.Reflection.AssemblyContentType;
limited with NetFrameworkBase.System.Reflection.AssemblyNameFlags;
limited with NetFrameworkBase.System.Configuration.Assemblies.AssemblyHashAlgorithm;
limited with NetFrameworkBase.System.Configuration.Assemblies.AssemblyVersionCompatibility;
limited with NetFrameworkBase.System.Reflection.StrongNameKeyPair;
limited with NetFrameworkBase.System.Runtime.Serialization.SerializationInfo;
limited with NetFrameworkBase.System.Runtime.Serialization.StreamingContext;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Reflection.AssemblyName is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function Name
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Name
      (
         this : in out AssemblyName.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function Version
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.System.Version.Kind_Ptr;
      
      procedure Version
      (
         this : in out AssemblyName.Kind;
         value : NetFrameworkBase.System.Version.Kind_Ptr
      );
      
      function CultureInfo
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr;
      
      procedure CultureInfo
      (
         this : in out AssemblyName.Kind;
         value : NetFrameworkBase.System.Globalization.CultureInfo.Kind_Ptr
      );
      
      function CultureName
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure CultureName
      (
         this : in out AssemblyName.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function CodeBase
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure CodeBase
      (
         this : in out AssemblyName.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function EscapedCodeBase
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function ProcessorArchitecture
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.System.Reflection.ProcessorArchitecture.Kind;
      
      procedure ProcessorArchitecture
      (
         this : in out AssemblyName.Kind;
         value : NetFrameworkBase.System.Reflection.ProcessorArchitecture.Kind
      );
      
      function ContentType
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.System.Reflection.AssemblyContentType.Kind;
      
      procedure ContentType
      (
         this : in out AssemblyName.Kind;
         value : NetFrameworkBase.System.Reflection.AssemblyContentType.Kind
      );
      
      function Clone
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetAssemblyName
      (
         assemblyFile : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Reflection.AssemblyName.Kind_Ptr;
      
      function GetPublicKey
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.Byte_Array;
      
      procedure SetPublicKey
      (
         this : in out AssemblyName.Kind;
         publicKey : NetFrameworkBase.Byte_Array
      );
      
      function GetPublicKeyToken
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.Byte_Array;
      
      procedure SetPublicKeyToken
      (
         this : in out AssemblyName.Kind;
         publicKeyToken : NetFrameworkBase.Byte_Array
      );
      
      function Flags
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.System.Reflection.AssemblyNameFlags.Kind;
      
      procedure Flags
      (
         this : in out AssemblyName.Kind;
         value : NetFrameworkBase.System.Reflection.AssemblyNameFlags.Kind
      );
      
      function HashAlgorithm
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.System.Configuration.Assemblies.AssemblyHashAlgorithm.Kind;
      
      procedure HashAlgorithm
      (
         this : in out AssemblyName.Kind;
         value : NetFrameworkBase.System.Configuration.Assemblies.AssemblyHashAlgorithm.Kind
      );
      
      function VersionCompatibility
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.System.Configuration.Assemblies.AssemblyVersionCompatibility.Kind;
      
      procedure VersionCompatibility
      (
         this : in out AssemblyName.Kind;
         value : NetFrameworkBase.System.Configuration.Assemblies.AssemblyVersionCompatibility.Kind
      );
      
      function KeyPair
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.System.Reflection.StrongNameKeyPair.Kind_Ptr;
      
      procedure KeyPair
      (
         this : in out AssemblyName.Kind;
         value : NetFrameworkBase.System.Reflection.StrongNameKeyPair.Kind_Ptr
      );
      
      function FullName
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function ToString
      (
         this : in out AssemblyName.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function ReferenceMatchesDefinition
      (
         reference : NetFrameworkBase.System.Reflection.AssemblyName.Kind_Ptr;
         definition : NetFrameworkBase.System.Reflection.AssemblyName.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      procedure GetObjectData
      (
         this : in out AssemblyName.Kind;
         info : NetFrameworkBase.System.Runtime.Serialization.SerializationInfo.Kind_Ptr;
         context : NetFrameworkBase.System.Runtime.Serialization.StreamingContext.Kind_Ptr
      );
      
      procedure OnDeserialization
      (
         this : in out AssemblyName.Kind;
         sender : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      function Constructor return NetFrameworkBase.System.Reflection.AssemblyName.Kind_Ptr;
      
      function Constructor
      (
         assemblyName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Reflection.AssemblyName.Kind_Ptr;
      
end;
