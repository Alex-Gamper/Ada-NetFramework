--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.MarshalByRefObject;
limited with NetFrameworkBase.Microsoft.Win32.RegistryHive;
limited with NetFrameworkBase.Microsoft.Win32.RegistryView;
limited with NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeRegistryHandle;
limited with NetFrameworkBase.Microsoft.Win32.RegistryKeyPermissionCheck;
limited with NetFrameworkBase.Microsoft.Win32.RegistryOptions;
limited with NetFrameworkBase.System.Security.AccessControl.RegistrySecurity;
limited with NetFrameworkBase.System.Security.AccessControl.RegistryRights;
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.Microsoft.Win32.RegistryValueOptions;
limited with NetFrameworkBase.Microsoft.Win32.RegistryValueKind;
limited with NetFrameworkBase.System.Security.AccessControl.AccessControlSections;
--------------------------------------------------------------------------------
package NetFrameworkBase.Microsoft.Win32.RegistryKey is
   
   type Kind is new NetFrameworkBase.System.MarshalByRefObject.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      procedure Dispose
      (
         this : in out RegistryKey.Kind
      );
      
      function OpenBaseKey
      (
         hKey : NetFrameworkBase.Microsoft.Win32.RegistryHive.Kind; 
         view : NetFrameworkBase.Microsoft.Win32.RegistryView.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function OpenRemoteBaseKey
      (
         hKey : NetFrameworkBase.Microsoft.Win32.RegistryHive.Kind; 
         machineName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function OpenRemoteBaseKey
      (
         hKey : NetFrameworkBase.Microsoft.Win32.RegistryHive.Kind; 
         machineName : NetFrameworkBase.BSTR; 
         view : NetFrameworkBase.Microsoft.Win32.RegistryView.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function FromHandle
      (
         handle : NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeRegistryHandle.Kind_Ptr
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function FromHandle
      (
         handle : NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeRegistryHandle.Kind_Ptr; 
         view : NetFrameworkBase.Microsoft.Win32.RegistryView.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function ToString
      (
         this : in out RegistryKey.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Close
      (
         this : in out RegistryKey.Kind
      );
      
      procedure Flush
      (
         this : in out RegistryKey.Kind
      );
      
      function CreateSubKey
      (
         this : in out RegistryKey.Kind;
         subkey : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function CreateSubKey
      (
         this : in out RegistryKey.Kind;
         subkey : NetFrameworkBase.BSTR; 
         permissionCheck : NetFrameworkBase.Microsoft.Win32.RegistryKeyPermissionCheck.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function CreateSubKey
      (
         this : in out RegistryKey.Kind;
         subkey : NetFrameworkBase.BSTR; 
         permissionCheck : NetFrameworkBase.Microsoft.Win32.RegistryKeyPermissionCheck.Kind; 
         options : NetFrameworkBase.Microsoft.Win32.RegistryOptions.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function CreateSubKey
      (
         this : in out RegistryKey.Kind;
         subkey : NetFrameworkBase.BSTR; 
         writable : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function CreateSubKey
      (
         this : in out RegistryKey.Kind;
         subkey : NetFrameworkBase.BSTR; 
         writable : NetFrameworkBase.Boolean; 
         options : NetFrameworkBase.Microsoft.Win32.RegistryOptions.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function CreateSubKey
      (
         this : in out RegistryKey.Kind;
         subkey : NetFrameworkBase.BSTR; 
         permissionCheck : NetFrameworkBase.Microsoft.Win32.RegistryKeyPermissionCheck.Kind; 
         registrySecurity : NetFrameworkBase.System.Security.AccessControl.RegistrySecurity.Kind_Ptr
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function CreateSubKey
      (
         this : in out RegistryKey.Kind;
         subkey : NetFrameworkBase.BSTR; 
         permissionCheck : NetFrameworkBase.Microsoft.Win32.RegistryKeyPermissionCheck.Kind; 
         registryOptions : NetFrameworkBase.Microsoft.Win32.RegistryOptions.Kind; 
         registrySecurity : NetFrameworkBase.System.Security.AccessControl.RegistrySecurity.Kind_Ptr
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      procedure DeleteSubKey
      (
         this : in out RegistryKey.Kind;
         subkey : NetFrameworkBase.BSTR
      );
      
      procedure DeleteSubKey
      (
         this : in out RegistryKey.Kind;
         subkey : NetFrameworkBase.BSTR; 
         throwOnMissingSubKey : NetFrameworkBase.Boolean
      );
      
      procedure DeleteSubKeyTree
      (
         this : in out RegistryKey.Kind;
         subkey : NetFrameworkBase.BSTR
      );
      
      procedure DeleteSubKeyTree
      (
         this : in out RegistryKey.Kind;
         subkey : NetFrameworkBase.BSTR; 
         throwOnMissingSubKey : NetFrameworkBase.Boolean
      );
      
      procedure DeleteValue
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR
      );
      
      procedure DeleteValue
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR; 
         throwOnMissingValue : NetFrameworkBase.Boolean
      );
      
      function OpenSubKey
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR; 
         writable : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function OpenSubKey
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR; 
         permissionCheck : NetFrameworkBase.Microsoft.Win32.RegistryKeyPermissionCheck.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function OpenSubKey
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR; 
         rights : NetFrameworkBase.System.Security.AccessControl.RegistryRights.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function OpenSubKey
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR; 
         permissionCheck : NetFrameworkBase.Microsoft.Win32.RegistryKeyPermissionCheck.Kind; 
         rights : NetFrameworkBase.System.Security.AccessControl.RegistryRights.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function OpenSubKey
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryKey.Kind_Ptr;
      
      function SubKeyCount
      (
         this : in out RegistryKey.Kind
      )
      return NetFrameworkBase.Int32;
      
      function View
      (
         this : in out RegistryKey.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryView.Kind;
      
      function Handle
      (
         this : in out RegistryKey.Kind
      )
      return NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeRegistryHandle.Kind_Ptr;
      
      function GetSubKeyNames
      (
         this : in out RegistryKey.Kind
      )
      return NetFrameworkBase.BSTR_Array;
      
      function ValueCount
      (
         this : in out RegistryKey.Kind
      )
      return NetFrameworkBase.Int32;
      
      function GetValueNames
      (
         this : in out RegistryKey.Kind
      )
      return NetFrameworkBase.BSTR_Array;
      
      function GetValue
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetValue
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR; 
         defaultValue : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetValue
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR; 
         defaultValue : NetFrameworkBase.System.Object.Kind_Ptr; 
         options : NetFrameworkBase.Microsoft.Win32.RegistryValueOptions.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetValueKind
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.Microsoft.Win32.RegistryValueKind.Kind;
      
      function Name
      (
         this : in out RegistryKey.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure SetValue
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      procedure SetValue
      (
         this : in out RegistryKey.Kind;
         name : NetFrameworkBase.BSTR; 
         value : NetFrameworkBase.System.Object.Kind_Ptr; 
         valueKind : NetFrameworkBase.Microsoft.Win32.RegistryValueKind.Kind
      );
      
      function GetAccessControl
      (
         this : in out RegistryKey.Kind
      )
      return NetFrameworkBase.System.Security.AccessControl.RegistrySecurity.Kind_Ptr;
      
      function GetAccessControl
      (
         this : in out RegistryKey.Kind;
         includeSections : NetFrameworkBase.System.Security.AccessControl.AccessControlSections.Kind
      )
      return NetFrameworkBase.System.Security.AccessControl.RegistrySecurity.Kind_Ptr;
      
      procedure SetAccessControl
      (
         this : in out RegistryKey.Kind;
         registrySecurity : NetFrameworkBase.System.Security.AccessControl.RegistrySecurity.Kind_Ptr
      );
      
end;
