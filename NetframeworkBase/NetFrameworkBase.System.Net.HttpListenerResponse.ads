--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Text.Encoding;
limited with NetFrameworkBase.System.Net.CookieCollection;
limited with NetFrameworkBase.System.Net.WebHeaderCollection;
limited with NetFrameworkBase.System.Version;
limited with NetFrameworkBase.System.Net.Cookie;
limited with NetFrameworkBase.System.IO.Stream;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Net.HttpListenerResponse is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function ContentEncoding
      (
         this : in out HttpListenerResponse.Kind
      )
      return NetFrameworkBase.System.Text.Encoding.Kind_Ptr;
      
      procedure ContentEncoding
      (
         this : in out HttpListenerResponse.Kind;
         value : NetFrameworkBase.System.Text.Encoding.Kind_Ptr
      );
      
      function ContentType
      (
         this : in out HttpListenerResponse.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure ContentType
      (
         this : in out HttpListenerResponse.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function OutputStream
      (
         this : in out HttpListenerResponse.Kind
      )
      return NetFrameworkBase.System.IO.Stream.Kind_Ptr;
      
      function RedirectLocation
      (
         this : in out HttpListenerResponse.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure RedirectLocation
      (
         this : in out HttpListenerResponse.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function StatusCode
      (
         this : in out HttpListenerResponse.Kind
      )
      return NetFrameworkBase.Int32;
      
      procedure StatusCode
      (
         this : in out HttpListenerResponse.Kind;
         value : NetFrameworkBase.Int32
      );
      
      function StatusDescription
      (
         this : in out HttpListenerResponse.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure StatusDescription
      (
         this : in out HttpListenerResponse.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function Cookies
      (
         this : in out HttpListenerResponse.Kind
      )
      return NetFrameworkBase.System.Net.CookieCollection.Kind_Ptr;
      
      procedure Cookies
      (
         this : in out HttpListenerResponse.Kind;
         value : NetFrameworkBase.System.Net.CookieCollection.Kind_Ptr
      );
      
      function SendChunked
      (
         this : in out HttpListenerResponse.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure SendChunked
      (
         this : in out HttpListenerResponse.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function KeepAlive
      (
         this : in out HttpListenerResponse.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure KeepAlive
      (
         this : in out HttpListenerResponse.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      function Headers
      (
         this : in out HttpListenerResponse.Kind
      )
      return NetFrameworkBase.System.Net.WebHeaderCollection.Kind_Ptr;
      
      procedure Headers
      (
         this : in out HttpListenerResponse.Kind;
         value : NetFrameworkBase.System.Net.WebHeaderCollection.Kind_Ptr
      );
      
      function ContentLength64
      (
         this : in out HttpListenerResponse.Kind
      )
      return NetFrameworkBase.Int64;
      
      procedure ContentLength64
      (
         this : in out HttpListenerResponse.Kind;
         value : NetFrameworkBase.Int64
      );
      
      function ProtocolVersion
      (
         this : in out HttpListenerResponse.Kind
      )
      return NetFrameworkBase.System.Version.Kind_Ptr;
      
      procedure ProtocolVersion
      (
         this : in out HttpListenerResponse.Kind;
         value : NetFrameworkBase.System.Version.Kind_Ptr
      );
      
      procedure CopyFrom
      (
         this : in out HttpListenerResponse.Kind;
         templateResponse : NetFrameworkBase.System.Net.HttpListenerResponse.Kind_Ptr
      );
      
      procedure AddHeader
      (
         this : in out HttpListenerResponse.Kind;
         name : NetFrameworkBase.BSTR; 
         value : NetFrameworkBase.BSTR
      );
      
      procedure AppendHeader
      (
         this : in out HttpListenerResponse.Kind;
         name : NetFrameworkBase.BSTR; 
         value : NetFrameworkBase.BSTR
      );
      
      procedure Redirect
      (
         this : in out HttpListenerResponse.Kind;
         url : NetFrameworkBase.BSTR
      );
      
      procedure AppendCookie
      (
         this : in out HttpListenerResponse.Kind;
         cookie : NetFrameworkBase.System.Net.Cookie.Kind_Ptr
      );
      
      procedure SetCookie
      (
         this : in out HttpListenerResponse.Kind;
         cookie : NetFrameworkBase.System.Net.Cookie.Kind_Ptr
      );
      
      procedure Abort_x
      (
         this : in out HttpListenerResponse.Kind
      );
      
      procedure Close
      (
         this : in out HttpListenerResponse.Kind;
         responseEntity : NetFrameworkBase.Byte_Array; 
         willBlock : NetFrameworkBase.Boolean
      );
      
      procedure Close
      (
         this : in out HttpListenerResponse.Kind
      );
      
end;
