--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Drawing.Color;
limited with NetFrameworkBase.System.Drawing.Point;
limited with NetFrameworkBase.System.EventHandler;
limited with NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler;
limited with NetFrameworkBase.System.Windows.Forms.HtmlElement;
limited with NetFrameworkBase.System.Uri;
limited with NetFrameworkBase.System.Windows.Forms.HtmlWindow;
limited with NetFrameworkBase.System.Windows.Forms.HtmlElementCollection;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Windows.Forms.HtmlDocument is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function ActiveElement
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr;
      
      function Body_x
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr;
      
      function Domain
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Domain
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function Title
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Title
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function Url
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Uri.Kind_Ptr;
      
      function Window
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlWindow.Kind_Ptr;
      
      procedure BackColor
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Drawing.Color.Kind_Ptr
      );
      
      procedure ForeColor
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Drawing.Color.Kind_Ptr
      );
      
      procedure LinkColor
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Drawing.Color.Kind_Ptr
      );
      
      procedure ActiveLinkColor
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Drawing.Color.Kind_Ptr
      );
      
      procedure VisitedLinkColor
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Drawing.Color.Kind_Ptr
      );
      
      function Focused
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.Boolean;
      
      function DomDocument
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function Cookie
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Cookie
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function Encoding
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.BSTR;
      
      procedure Encoding
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.BSTR
      );
      
      function DefaultEncoding
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.BSTR;
      
      function All_x
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElementCollection.Kind_Ptr;
      
      function Links
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElementCollection.Kind_Ptr;
      
      function Images
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElementCollection.Kind_Ptr;
      
      function Forms
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElementCollection.Kind_Ptr;
      
      procedure ExecCommand
      (
         this : in out HtmlDocument.Kind;
         command : NetFrameworkBase.BSTR; 
         showUI : NetFrameworkBase.Boolean; 
         value : NetFrameworkBase.System.Object.Kind_Ptr
      );
      
      procedure Focus
      (
         this : in out HtmlDocument.Kind
      );
      
      function GetElementById
      (
         this : in out HtmlDocument.Kind;
         id : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr;
      
      function GetElementFromPoint
      (
         this : in out HtmlDocument.Kind;
         point : NetFrameworkBase.System.Drawing.Point.Kind_Ptr
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr;
      
      function GetElementsByTagName
      (
         this : in out HtmlDocument.Kind;
         tagName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElementCollection.Kind_Ptr;
      
      function CreateElement
      (
         this : in out HtmlDocument.Kind;
         elementTag : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlElement.Kind_Ptr;
      
      function InvokeScript
      (
         this : in out HtmlDocument.Kind;
         scriptName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      procedure AttachEventHandler
      (
         this : in out HtmlDocument.Kind;
         eventName : NetFrameworkBase.BSTR; 
         eventHandler : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure DetachEventHandler
      (
         this : in out HtmlDocument.Kind;
         eventName : NetFrameworkBase.BSTR; 
         eventHandler : NetFrameworkBase.System.EventHandler.Kind_Ptr
      );
      
      procedure add_Click
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_Click
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_ContextMenuShowing
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_ContextMenuShowing
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_Focusing
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_Focusing
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_LosingFocus
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_LosingFocus
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_MouseDown
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_MouseDown
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_MouseLeave
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_MouseLeave
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_MouseMove
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_MouseMove
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_MouseOver
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_MouseOver
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_MouseUp
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_MouseUp
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure add_Stop
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      procedure remove_Stop
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.System.Windows.Forms.HtmlElementEventHandler.Kind_Ptr
      );
      
      function op_Equality
      (
         left : NetFrameworkBase.System.Windows.Forms.HtmlDocument.Kind_Ptr; 
         right : NetFrameworkBase.System.Windows.Forms.HtmlDocument.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      function "="(left : NetFrameworkBase.System.Windows.Forms.HtmlDocument.Kind_Ptr; right : NetFrameworkBase.System.Windows.Forms.HtmlDocument.Kind_Ptr) return NetFrameworkBase.Boolean renames op_Equality;
      
      function op_Inequality
      (
         left : NetFrameworkBase.System.Windows.Forms.HtmlDocument.Kind_Ptr; 
         right : NetFrameworkBase.System.Windows.Forms.HtmlDocument.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function GetHashCode
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.Int32;
      
      function Equals
      (
         this : in out HtmlDocument.Kind;
         obj : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function BackColor
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Drawing.Color.Kind_Ptr;
      
      function ForeColor
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Drawing.Color.Kind_Ptr;
      
      function LinkColor
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Drawing.Color.Kind_Ptr;
      
      function ActiveLinkColor
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Drawing.Color.Kind_Ptr;
      
      function VisitedLinkColor
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.System.Drawing.Color.Kind_Ptr;
      
      function RightToLeft
      (
         this : in out HtmlDocument.Kind
      )
      return NetFrameworkBase.Boolean;
      
      procedure RightToLeft
      (
         this : in out HtmlDocument.Kind;
         value : NetFrameworkBase.Boolean
      );
      
      procedure Write
      (
         this : in out HtmlDocument.Kind;
         text : NetFrameworkBase.BSTR
      );
      
      function OpenNew
      (
         this : in out HtmlDocument.Kind;
         replaceInHistory : NetFrameworkBase.Boolean
      )
      return NetFrameworkBase.System.Windows.Forms.HtmlDocument.Kind_Ptr;
      
      function InvokeScript
      (
         this : in out HtmlDocument.Kind;
         scriptName : NetFrameworkBase.BSTR; 
         args : NetFrameworkBase.System.Object.Kind_Array
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
end;
