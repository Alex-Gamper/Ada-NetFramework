--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Object;
limited with NetFrameworkBase.System.Type_x;
limited with NetFrameworkBase.System.Reflection.MethodInfo;
limited with NetFrameworkBase.System.Reflection.Module;
limited with NetFrameworkBase.System.Runtime.InteropServices.IUCOMITypeLib;
limited with NetFrameworkBase.System.Runtime.InteropServices.ComTypes.ITypeLib;
limited with NetFrameworkBase.System.Reflection.Assembly;
limited with NetFrameworkBase.System.Runtime.InteropServices.IUCOMITypeInfo;
limited with NetFrameworkBase.System.Runtime.InteropServices.ComTypes.ITypeInfo;
limited with NetFrameworkBase.System.Guid;
limited with NetFrameworkBase.System.Runtime.InteropServices.CustomQueryInterfaceMode;
limited with NetFrameworkBase.System.Reflection.MemberInfo;
limited with NetFrameworkBase.System.Delegate;
limited with NetFrameworkBase.System.Security.SecureString;
limited with NetFrameworkBase.System.Exception_x;
limited with NetFrameworkBase.System.Runtime.InteropServices.ComMemberType;
limited with NetFrameworkBase.System.Array_x;
limited with NetFrameworkBase.System.Threading.Thread;
--------------------------------------------------------------------------------
package NetFrameworkBase.System.Runtime.InteropServices.Marshal is
   
   type Kind is new NetFrameworkBase.System.Object.Kind with null record;
   type Kind_Ptr is access all Kind;
   type Kind_Array is array(Natural range<>) of Kind_Ptr;
   type Kind_Array_Ptr is access all Kind_Array;
   
      function PtrToStringAnsi
      (
         ptr : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.BSTR;
      
      function PtrToStringAnsi
      (
         ptr : NetFrameworkBase.IntPtr; 
         len : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.BSTR;
      
      function PtrToStringUni
      (
         ptr : NetFrameworkBase.IntPtr; 
         len : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.BSTR;
      
      function PtrToStringAuto
      (
         ptr : NetFrameworkBase.IntPtr; 
         len : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.BSTR;
      
      function PtrToStringUni
      (
         ptr : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.BSTR;
      
      function PtrToStringAuto
      (
         ptr : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.BSTR;
      
      function SizeOf
      (
         structure : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function SizeOf
      (
         t : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function OffsetOf
      (
         t : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         fieldName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.IntPtr;
      
      procedure Copy
      (
         source : NetFrameworkBase.Int32_Array; 
         startIndex : NetFrameworkBase.Int32; 
         destination : NetFrameworkBase.IntPtr; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.Wide_Char_Array; 
         startIndex : NetFrameworkBase.Int32; 
         destination : NetFrameworkBase.IntPtr; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.Int16_Array; 
         startIndex : NetFrameworkBase.Int32; 
         destination : NetFrameworkBase.IntPtr; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.Int64_Array; 
         startIndex : NetFrameworkBase.Int32; 
         destination : NetFrameworkBase.IntPtr; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.Single_Array; 
         startIndex : NetFrameworkBase.Int32; 
         destination : NetFrameworkBase.IntPtr; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.Double_Array; 
         startIndex : NetFrameworkBase.Int32; 
         destination : NetFrameworkBase.IntPtr; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.Byte_Array; 
         startIndex : NetFrameworkBase.Int32; 
         destination : NetFrameworkBase.IntPtr; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.IntPtr_Array; 
         startIndex : NetFrameworkBase.Int32; 
         destination : NetFrameworkBase.IntPtr; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.IntPtr; 
         destination : NetFrameworkBase.Int32_Array; 
         startIndex : NetFrameworkBase.Int32; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.IntPtr; 
         destination : NetFrameworkBase.Wide_Char_Array; 
         startIndex : NetFrameworkBase.Int32; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.IntPtr; 
         destination : NetFrameworkBase.Int16_Array; 
         startIndex : NetFrameworkBase.Int32; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.IntPtr; 
         destination : NetFrameworkBase.Int64_Array; 
         startIndex : NetFrameworkBase.Int32; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.IntPtr; 
         destination : NetFrameworkBase.Single_Array; 
         startIndex : NetFrameworkBase.Int32; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.IntPtr; 
         destination : NetFrameworkBase.Double_Array; 
         startIndex : NetFrameworkBase.Int32; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.IntPtr; 
         destination : NetFrameworkBase.Byte_Array; 
         startIndex : NetFrameworkBase.Int32; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      procedure Copy
      (
         source : NetFrameworkBase.IntPtr; 
         destination : NetFrameworkBase.IntPtr_Array; 
         startIndex : NetFrameworkBase.Int32; 
         length : NetFrameworkBase.Int32
      )
      ;
      
      function ReadByte
      (
         ptr : NetFrameworkBase.IntPtr; 
         ofs : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Byte;
      
      function ReadByte
      (
         ptr : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.Byte;
      
      function ReadInt16
      (
         ptr : NetFrameworkBase.IntPtr; 
         ofs : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int16;
      
      function ReadInt16
      (
         ptr : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.Int16;
      
      function ReadInt32
      (
         ptr : NetFrameworkBase.IntPtr; 
         ofs : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int32;
      
      function ReadInt32
      (
         ptr : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.Int32;
      
      function ReadIntPtr
      (
         ptr : in NetFrameworkBase.System.Object.Kind_Ptr; 
         ofs : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.IntPtr;
      
      function ReadIntPtr
      (
         ptr : NetFrameworkBase.IntPtr; 
         ofs : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.IntPtr;
      
      function ReadIntPtr
      (
         ptr : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.IntPtr;
      
      function ReadInt64
      (
         ptr : NetFrameworkBase.IntPtr; 
         ofs : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int64;
      
      function ReadInt64
      (
         ptr : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.Int64;
      
      procedure WriteByte
      (
         ptr : NetFrameworkBase.IntPtr; 
         ofs : NetFrameworkBase.Int32; 
         val : NetFrameworkBase.Byte
      )
      ;
      
      procedure WriteByte
      (
         ptr : NetFrameworkBase.IntPtr; 
         val : NetFrameworkBase.Byte
      )
      ;
      
      procedure WriteInt16
      (
         ptr : NetFrameworkBase.IntPtr; 
         ofs : NetFrameworkBase.Int32; 
         val : NetFrameworkBase.Int16
      )
      ;
      
      procedure WriteInt16
      (
         ptr : NetFrameworkBase.IntPtr; 
         val : NetFrameworkBase.Int16
      )
      ;
      
      procedure WriteInt16
      (
         ptr : NetFrameworkBase.IntPtr; 
         ofs : NetFrameworkBase.Int32; 
         val : NetFrameworkBase.Wide_Char
      )
      ;
      
      procedure WriteInt16
      (
         ptr : in out NetFrameworkBase.System.Object.Kind_Ptr; 
         ofs : NetFrameworkBase.Int32; 
         val : NetFrameworkBase.Wide_Char
      )
      ;
      
      procedure WriteInt16
      (
         ptr : NetFrameworkBase.IntPtr; 
         val : NetFrameworkBase.Wide_Char
      )
      ;
      
      procedure WriteInt32
      (
         ptr : NetFrameworkBase.IntPtr; 
         ofs : NetFrameworkBase.Int32; 
         val : NetFrameworkBase.Int32
      )
      ;
      
      procedure WriteInt32
      (
         ptr : NetFrameworkBase.IntPtr; 
         val : NetFrameworkBase.Int32
      )
      ;
      
      procedure WriteIntPtr
      (
         ptr : NetFrameworkBase.IntPtr; 
         ofs : NetFrameworkBase.Int32; 
         val : NetFrameworkBase.IntPtr
      )
      ;
      
      procedure WriteIntPtr
      (
         ptr : in out NetFrameworkBase.System.Object.Kind_Ptr; 
         ofs : NetFrameworkBase.Int32; 
         val : NetFrameworkBase.IntPtr
      )
      ;
      
      procedure WriteIntPtr
      (
         ptr : NetFrameworkBase.IntPtr; 
         val : NetFrameworkBase.IntPtr
      )
      ;
      
      procedure WriteInt64
      (
         ptr : NetFrameworkBase.IntPtr; 
         ofs : NetFrameworkBase.Int32; 
         val : NetFrameworkBase.Int64
      )
      ;
      
      procedure WriteInt64
      (
         ptr : NetFrameworkBase.IntPtr; 
         val : NetFrameworkBase.Int64
      )
      ;
      
      function GetHRForLastWin32Error
      return NetFrameworkBase.Int32;
      
      procedure Prelink
      (
         m : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      ;
      
      procedure PrelinkAll
      (
         c : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      ;
      
      function NumParamBytes
      (
         m : NetFrameworkBase.System.Reflection.MethodInfo.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      procedure PtrToStructure
      (
         ptr : NetFrameworkBase.IntPtr; 
         structure : NetFrameworkBase.System.Object.Kind_Ptr
      )
      ;
      
      function PtrToStructure
      (
         ptr : NetFrameworkBase.IntPtr; 
         structureType : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetHINSTANCE
      (
         m : NetFrameworkBase.System.Reflection.Module.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      procedure ThrowExceptionForHR
      (
         errorCode : NetFrameworkBase.Int32
      )
      ;
      
      procedure ThrowExceptionForHR
      (
         errorCode : NetFrameworkBase.Int32; 
         errorInfo : NetFrameworkBase.IntPtr
      )
      ;
      
      function GetExceptionForHR
      (
         errorCode : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Exception_x.Kind_Ptr;
      
      function GetExceptionForHR
      (
         errorCode : NetFrameworkBase.Int32; 
         errorInfo : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.System.Exception_x.Kind_Ptr;
      
      function GetThreadFromFiberCookie
      (
         cookie : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Threading.Thread.Kind_Ptr;
      
      function AllocHGlobal
      (
         cb : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.IntPtr;
      
      function AllocHGlobal
      (
         cb : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.IntPtr;
      
      procedure FreeHGlobal
      (
         hglobal : NetFrameworkBase.IntPtr
      )
      ;
      
      function ReAllocHGlobal
      (
         pv : NetFrameworkBase.IntPtr; 
         cb : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.IntPtr;
      
      function StringToHGlobalAnsi
      (
         s : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.IntPtr;
      
      function StringToHGlobalUni
      (
         s : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.IntPtr;
      
      function StringToHGlobalAuto
      (
         s : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.IntPtr;
      
      function GetTypeLibName
      (
         pTLB : NetFrameworkBase.System.Runtime.InteropServices.IUCOMITypeLib.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function GetTypeLibName
      (
         typelib : NetFrameworkBase.System.Runtime.InteropServices.ComTypes.ITypeLib.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function GetTypeLibGuid
      (
         pTLB : NetFrameworkBase.System.Runtime.InteropServices.IUCOMITypeLib.Kind_Ptr
      )
      return NetFrameworkBase.System.Guid.Kind_Ptr;
      
      function GetTypeLibGuid
      (
         typelib : NetFrameworkBase.System.Runtime.InteropServices.ComTypes.ITypeLib.Kind_Ptr
      )
      return NetFrameworkBase.System.Guid.Kind_Ptr;
      
      function GetTypeLibLcid
      (
         pTLB : NetFrameworkBase.System.Runtime.InteropServices.IUCOMITypeLib.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function GetTypeLibGuidForAssembly
      (
         asm : NetFrameworkBase.System.Reflection.Assembly.Kind_Ptr
      )
      return NetFrameworkBase.System.Guid.Kind_Ptr;
      
      procedure GetTypeLibVersionForAssembly
      (
         inputAssembly : NetFrameworkBase.System.Reflection.Assembly.Kind_Ptr; 
         majorVersion : out NetFrameworkBase.Int32; 
         minorVersion : out NetFrameworkBase.Int32
      )
      ;
      
      function GetTypeInfoName
      (
         pTI : NetFrameworkBase.System.Runtime.InteropServices.IUCOMITypeInfo.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function GetTypeInfoName
      (
         typeInfo : NetFrameworkBase.System.Runtime.InteropServices.ComTypes.ITypeInfo.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function GetTypeFromCLSID
      (
         clsid : NetFrameworkBase.System.Guid.Kind_Ptr
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function GetIUnknownForObject
      (
         o : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function GetIUnknownForObjectInContext
      (
         o : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function GetIDispatchForObject
      (
         o : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function GetIDispatchForObjectInContext
      (
         o : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function GetComInterfaceForObject
      (
         o : NetFrameworkBase.System.Object.Kind_Ptr; 
         T : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function GetComInterfaceForObject
      (
         o : NetFrameworkBase.System.Object.Kind_Ptr; 
         T : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         mode : NetFrameworkBase.System.Runtime.InteropServices.CustomQueryInterfaceMode.Kind
      )
      return NetFrameworkBase.IntPtr;
      
      function GetComInterfaceForObjectInContext
      (
         o : NetFrameworkBase.System.Object.Kind_Ptr; 
         t : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function AllocCoTaskMem
      (
         cb : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.IntPtr;
      
      function StringToCoTaskMemUni
      (
         s : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.IntPtr;
      
      function StringToCoTaskMemAuto
      (
         s : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.IntPtr;
      
      function StringToCoTaskMemAnsi
      (
         s : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.IntPtr;
      
      procedure FreeCoTaskMem
      (
         ptr : NetFrameworkBase.IntPtr
      )
      ;
      
      function ReAllocCoTaskMem
      (
         pv : NetFrameworkBase.IntPtr; 
         cb : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.IntPtr;
      
      function ReleaseComObject
      (
         o : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function FinalReleaseComObject
      (
         o : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function GetComObjectData
      (
         obj : NetFrameworkBase.System.Object.Kind_Ptr; 
         key : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function SetComObjectData
      (
         obj : NetFrameworkBase.System.Object.Kind_Ptr; 
         key : NetFrameworkBase.System.Object.Kind_Ptr; 
         data : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function CreateWrapperOfType
      (
         o : NetFrameworkBase.System.Object.Kind_Ptr; 
         t : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      procedure ReleaseThreadCache
      ;
      
      procedure FreeBSTR
      (
         ptr : NetFrameworkBase.IntPtr
      )
      ;
      
      function StringToBSTR
      (
         s : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.IntPtr;
      
      function PtrToStringBSTR
      (
         ptr : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.BSTR;
      
      function GetComSlotForMethodInfo
      (
         m : NetFrameworkBase.System.Reflection.MemberInfo.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function GenerateGuidForType
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Guid.Kind_Ptr;
      
      function GenerateProgIdForType
      (
         type_x : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.BSTR;
      
      function BindToMoniker
      (
         monikerName : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetActiveObject
      (
         progID : NetFrameworkBase.BSTR
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetDelegateForFunctionPointer
      (
         ptr : NetFrameworkBase.IntPtr; 
         t : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Delegate.Kind_Ptr;
      
      function GetFunctionPointerForDelegate
      (
         d : NetFrameworkBase.System.Delegate.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function SecureStringToBSTR
      (
         s : NetFrameworkBase.System.Security.SecureString.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function SecureStringToCoTaskMemAnsi
      (
         s : NetFrameworkBase.System.Security.SecureString.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function SecureStringToCoTaskMemUnicode
      (
         s : NetFrameworkBase.System.Security.SecureString.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      procedure ZeroFreeBSTR
      (
         s : NetFrameworkBase.IntPtr
      )
      ;
      
      procedure ZeroFreeCoTaskMemAnsi
      (
         s : NetFrameworkBase.IntPtr
      )
      ;
      
      procedure ZeroFreeCoTaskMemUnicode
      (
         s : NetFrameworkBase.IntPtr
      )
      ;
      
      function SecureStringToGlobalAllocAnsi
      (
         s : NetFrameworkBase.System.Security.SecureString.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function SecureStringToGlobalAllocUnicode
      (
         s : NetFrameworkBase.System.Security.SecureString.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      procedure ZeroFreeGlobalAllocAnsi
      (
         s : NetFrameworkBase.IntPtr
      )
      ;
      
      procedure ZeroFreeGlobalAllocUnicode
      (
         s : NetFrameworkBase.IntPtr
      )
      ;
      
      function ReadByte
      (
         ptr : in NetFrameworkBase.System.Object.Kind_Ptr; 
         ofs : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Byte;
      
      function ReadInt16
      (
         ptr : in NetFrameworkBase.System.Object.Kind_Ptr; 
         ofs : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int16;
      
      function ReadInt32
      (
         ptr : in NetFrameworkBase.System.Object.Kind_Ptr; 
         ofs : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int32;
      
      function ReadInt64
      (
         ptr : in NetFrameworkBase.System.Object.Kind_Ptr; 
         ofs : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.Int64;
      
      procedure WriteByte
      (
         ptr : in out NetFrameworkBase.System.Object.Kind_Ptr; 
         ofs : NetFrameworkBase.Int32; 
         val : NetFrameworkBase.Byte
      )
      ;
      
      procedure WriteInt16
      (
         ptr : in out NetFrameworkBase.System.Object.Kind_Ptr; 
         ofs : NetFrameworkBase.Int32; 
         val : NetFrameworkBase.Int16
      )
      ;
      
      procedure WriteInt32
      (
         ptr : in out NetFrameworkBase.System.Object.Kind_Ptr; 
         ofs : NetFrameworkBase.Int32; 
         val : NetFrameworkBase.Int32
      )
      ;
      
      procedure WriteInt64
      (
         ptr : in out NetFrameworkBase.System.Object.Kind_Ptr; 
         ofs : NetFrameworkBase.Int32; 
         val : NetFrameworkBase.Int64
      )
      ;
      
      function GetHRForException
      (
         e : NetFrameworkBase.System.Exception_x.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function GetUnmanagedThunkForManagedMethodPtr
      (
         pfnMethodToWrap : NetFrameworkBase.IntPtr; 
         pbSignature : NetFrameworkBase.IntPtr; 
         cbSignature : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.IntPtr;
      
      function GetManagedThunkForUnmanagedMethodPtr
      (
         pfnMethodToWrap : NetFrameworkBase.IntPtr; 
         pbSignature : NetFrameworkBase.IntPtr; 
         cbSignature : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.IntPtr;
      
      function GetTypeLibLcid
      (
         typelib : NetFrameworkBase.System.Runtime.InteropServices.ComTypes.ITypeLib.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function GetTypeForITypeInfo
      (
         piTypeInfo : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.System.Type_x.Kind_Ptr;
      
      function GetITypeInfoForType
      (
         t : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function GetTypedObjectForIUnknown
      (
         pUnk : NetFrameworkBase.IntPtr; 
         t : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function CreateAggregatedObject
      (
         pOuter : NetFrameworkBase.IntPtr; 
         o : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.IntPtr;
      
      function IsTypeVisibleFromCom
      (
         t : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function AddRef
      (
         pUnk : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.Int32;
      
      procedure GetNativeVariantForObject
      (
         obj : NetFrameworkBase.System.Object.Kind_Ptr; 
         pDstNativeVariant : NetFrameworkBase.IntPtr
      )
      ;
      
      function GetObjectForNativeVariant
      (
         pSrcNativeVariant : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetObjectsForNativeVariants
      (
         aSrcNativeVariant : NetFrameworkBase.IntPtr; 
         cVars : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.System.Object.Kind_Array;
      
      function GetStartComSlot
      (
         t : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function GetEndComSlot
      (
         t : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      return NetFrameworkBase.Int32;
      
      function GetMethodInfoForComSlot
      (
         t : NetFrameworkBase.System.Type_x.Kind_Ptr; 
         slot : NetFrameworkBase.Int32; 
         memberType : NetFrameworkBase.System.Runtime.InteropServices.ComMemberType.Kind
      )
      return NetFrameworkBase.System.Reflection.MemberInfo.Kind_Ptr;
      
      procedure ChangeWrapperHandleStrength
      (
         otp : NetFrameworkBase.System.Object.Kind_Ptr; 
         fIsWeak : NetFrameworkBase.Boolean
      )
      ;
      
      function UnsafeAddrOfPinnedArrayElement
      (
         arr : NetFrameworkBase.System.Array_x.Kind_Ptr; 
         index : NetFrameworkBase.Int32
      )
      return NetFrameworkBase.IntPtr;
      
      function GetLastWin32Error
      return NetFrameworkBase.Int32;
      
      function GetExceptionPointers
      return NetFrameworkBase.IntPtr;
      
      function GetExceptionCode
      return NetFrameworkBase.Int32;
      
      procedure StructureToPtr
      (
         structure : NetFrameworkBase.System.Object.Kind_Ptr; 
         ptr : NetFrameworkBase.IntPtr; 
         fDeleteOld : NetFrameworkBase.Boolean
      )
      ;
      
      procedure DestroyStructure
      (
         ptr : NetFrameworkBase.IntPtr; 
         structuretype : NetFrameworkBase.System.Type_x.Kind_Ptr
      )
      ;
      
      function GetObjectForIUnknown
      (
         pUnk : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      function GetUniqueObjectForIUnknown
      (
         unknown : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.System.Object.Kind_Ptr;
      
      procedure CleanupUnusedObjectsInCurrentContext
      ;
      
      function AreComObjectsAvailableForCleanup
      return NetFrameworkBase.Boolean;
      
      function IsComObject
      (
         o : NetFrameworkBase.System.Object.Kind_Ptr
      )
      return NetFrameworkBase.Boolean;
      
      function QueryInterface
      (
         pUnk : NetFrameworkBase.IntPtr; 
         iid : NetFrameworkBase.System.Guid.Kind_Ptr; 
         ppv : out NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.Int32;
      
      function Release
      (
         pUnk : NetFrameworkBase.IntPtr
      )
      return NetFrameworkBase.Int32;
      
end;
