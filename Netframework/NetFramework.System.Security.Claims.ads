--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Security.Claims.Claim;
with NetFrameworkBase.System.Security.Claims.ClaimsIdentity;
with NetFrameworkBase.System.Security.Claims.ClaimsPrincipal;
with NetFrameworkBase.System.Security.Claims.ClaimTypes;
with NetFrameworkBase.System.Security.Claims.ClaimValueTypes;
with NetFrameworkBase.System.IO.BinaryReader;
with NetFrameworkBase.System.Security.Principal.IIdentity;
with NetFrameworkBase.System.Security.Principal.IPrincipal;
--------------------------------------------------------------------------------
package NetFramework.System.Security.Claims is
   
      subtype Claim is NetFrameworkBase.System.Security.Claims.Claim.Kind_Ptr;
      subtype Claim_Array is NetFrameworkBase.System.Security.Claims.Claim.Kind_Array;
      
         function Constructor
         (
            reader : NetFrameworkBase.System.IO.BinaryReader.Kind_Ptr
         )
         return NetFrameworkBase.System.Security.Claims.Claim.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.Claim.Constructor; 
         
         function Constructor
         (
            reader : NetFrameworkBase.System.IO.BinaryReader.Kind_Ptr;
            subject : NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Kind_Ptr
         )
         return NetFrameworkBase.System.Security.Claims.Claim.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.Claim.Constructor; 
         
         function Constructor
         (
            type_x : NetFrameworkBase.BSTR;
            value : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Security.Claims.Claim.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.Claim.Constructor; 
         
         function Constructor
         (
            type_x : NetFrameworkBase.BSTR;
            value : NetFrameworkBase.BSTR;
            valueType : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Security.Claims.Claim.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.Claim.Constructor; 
         
         function Constructor
         (
            type_x : NetFrameworkBase.BSTR;
            value : NetFrameworkBase.BSTR;
            valueType : NetFrameworkBase.BSTR;
            issuer : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Security.Claims.Claim.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.Claim.Constructor; 
         
         function Constructor
         (
            type_x : NetFrameworkBase.BSTR;
            value : NetFrameworkBase.BSTR;
            valueType : NetFrameworkBase.BSTR;
            issuer : NetFrameworkBase.BSTR;
            originalIssuer : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Security.Claims.Claim.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.Claim.Constructor; 
         
         function Constructor
         (
            type_x : NetFrameworkBase.BSTR;
            value : NetFrameworkBase.BSTR;
            valueType : NetFrameworkBase.BSTR;
            issuer : NetFrameworkBase.BSTR;
            originalIssuer : NetFrameworkBase.BSTR;
            subject : NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Kind_Ptr
         )
         return NetFrameworkBase.System.Security.Claims.Claim.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.Claim.Constructor; 
         
      subtype ClaimsIdentity is NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Kind_Ptr;
      subtype ClaimsIdentity_Array is NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Constructor;
         
         function Constructor
         (
            identity : NetFrameworkBase.System.Security.Principal.IIdentity.Kind_Ptr
         )
         return NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Constructor; 
         
         function Constructor
         (
            authenticationType : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Constructor; 
         
         function Constructor
         (
            authenticationType : NetFrameworkBase.BSTR;
            nameType : NetFrameworkBase.BSTR;
            roleType : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Constructor; 
         
         function Constructor
         (
            reader : NetFrameworkBase.System.IO.BinaryReader.Kind_Ptr
         )
         return NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.ClaimsIdentity.Constructor; 
         
      subtype ClaimsPrincipal is NetFrameworkBase.System.Security.Claims.ClaimsPrincipal.Kind_Ptr;
      subtype ClaimsPrincipal_Array is NetFrameworkBase.System.Security.Claims.ClaimsPrincipal.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Security.Claims.ClaimsPrincipal.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.ClaimsPrincipal.Constructor;
         
         function Constructor
         (
            identity : NetFrameworkBase.System.Security.Principal.IIdentity.Kind_Ptr
         )
         return NetFrameworkBase.System.Security.Claims.ClaimsPrincipal.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.ClaimsPrincipal.Constructor; 
         
         function Constructor
         (
            principal : NetFrameworkBase.System.Security.Principal.IPrincipal.Kind_Ptr
         )
         return NetFrameworkBase.System.Security.Claims.ClaimsPrincipal.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.ClaimsPrincipal.Constructor; 
         
         function Constructor
         (
            reader : NetFrameworkBase.System.IO.BinaryReader.Kind_Ptr
         )
         return NetFrameworkBase.System.Security.Claims.ClaimsPrincipal.Kind_Ptr renames NetFrameworkBase.System.Security.Claims.ClaimsPrincipal.Constructor; 
         
      subtype ClaimTypes is NetFrameworkBase.System.Security.Claims.ClaimTypes.Kind_Ptr;
      subtype ClaimTypes_Array is NetFrameworkBase.System.Security.Claims.ClaimTypes.Kind_Array;
      
      subtype ClaimValueTypes is NetFrameworkBase.System.Security.Claims.ClaimValueTypes.Kind_Ptr;
      subtype ClaimValueTypes_Array is NetFrameworkBase.System.Security.Claims.ClaimValueTypes.Kind_Array;
      
   
end;
