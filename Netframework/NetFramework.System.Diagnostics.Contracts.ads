--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Diagnostics.Contracts.PureAttribute;
with NetFrameworkBase.System.Diagnostics.Contracts.ContractClassAttribute;
with NetFrameworkBase.System.Diagnostics.Contracts.ContractClassForAttribute;
with NetFrameworkBase.System.Diagnostics.Contracts.ContractInvariantMethodAttribute;
with NetFrameworkBase.System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute;
with NetFrameworkBase.System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute;
with NetFrameworkBase.System.Diagnostics.Contracts.ContractVerificationAttribute;
with NetFrameworkBase.System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute;
with NetFrameworkBase.System.Diagnostics.Contracts.ContractArgumentValidatorAttribute;
with NetFrameworkBase.System.Diagnostics.Contracts.ContractAbbreviatorAttribute;
with NetFrameworkBase.System.Diagnostics.Contracts.ContractOptionAttribute;
with NetFrameworkBase.System.Diagnostics.Contracts.Contract;
with NetFrameworkBase.System.Diagnostics.Contracts.ContractFailureKind;
with NetFrameworkBase.System.Diagnostics.Contracts.ContractFailedEventArgs;
with NetFrameworkBase.System.Type_x;
with NetFrameworkBase.System.Exception_x;
--------------------------------------------------------------------------------
package NetFramework.System.Diagnostics.Contracts is
   
      subtype PureAttribute is NetFrameworkBase.System.Diagnostics.Contracts.PureAttribute.Kind_Ptr;
      subtype PureAttribute_Array is NetFrameworkBase.System.Diagnostics.Contracts.PureAttribute.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Diagnostics.Contracts.PureAttribute.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.PureAttribute.Constructor;
         
      subtype ContractClassAttribute is NetFrameworkBase.System.Diagnostics.Contracts.ContractClassAttribute.Kind_Ptr;
      subtype ContractClassAttribute_Array is NetFrameworkBase.System.Diagnostics.Contracts.ContractClassAttribute.Kind_Array;
      
         function Constructor
         (
            typeContainingContracts : NetFrameworkBase.System.Type_x.Kind_Ptr
         )
         return NetFrameworkBase.System.Diagnostics.Contracts.ContractClassAttribute.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.ContractClassAttribute.Constructor; 
         
      subtype ContractClassForAttribute is NetFrameworkBase.System.Diagnostics.Contracts.ContractClassForAttribute.Kind_Ptr;
      subtype ContractClassForAttribute_Array is NetFrameworkBase.System.Diagnostics.Contracts.ContractClassForAttribute.Kind_Array;
      
         function Constructor
         (
            typeContractsAreFor : NetFrameworkBase.System.Type_x.Kind_Ptr
         )
         return NetFrameworkBase.System.Diagnostics.Contracts.ContractClassForAttribute.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.ContractClassForAttribute.Constructor; 
         
      subtype ContractInvariantMethodAttribute is NetFrameworkBase.System.Diagnostics.Contracts.ContractInvariantMethodAttribute.Kind_Ptr;
      subtype ContractInvariantMethodAttribute_Array is NetFrameworkBase.System.Diagnostics.Contracts.ContractInvariantMethodAttribute.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Diagnostics.Contracts.ContractInvariantMethodAttribute.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.ContractInvariantMethodAttribute.Constructor;
         
      subtype ContractReferenceAssemblyAttribute is NetFrameworkBase.System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute.Kind_Ptr;
      subtype ContractReferenceAssemblyAttribute_Array is NetFrameworkBase.System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute.Constructor;
         
      subtype ContractRuntimeIgnoredAttribute is NetFrameworkBase.System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute.Kind_Ptr;
      subtype ContractRuntimeIgnoredAttribute_Array is NetFrameworkBase.System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute.Constructor;
         
      subtype ContractVerificationAttribute is NetFrameworkBase.System.Diagnostics.Contracts.ContractVerificationAttribute.Kind_Ptr;
      subtype ContractVerificationAttribute_Array is NetFrameworkBase.System.Diagnostics.Contracts.ContractVerificationAttribute.Kind_Array;
      
         function Constructor
         (
            value : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.System.Diagnostics.Contracts.ContractVerificationAttribute.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.ContractVerificationAttribute.Constructor; 
         
      subtype ContractPublicPropertyNameAttribute is NetFrameworkBase.System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute.Kind_Ptr;
      subtype ContractPublicPropertyNameAttribute_Array is NetFrameworkBase.System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute.Kind_Array;
      
         function Constructor
         (
            name : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute.Constructor; 
         
      subtype ContractArgumentValidatorAttribute is NetFrameworkBase.System.Diagnostics.Contracts.ContractArgumentValidatorAttribute.Kind_Ptr;
      subtype ContractArgumentValidatorAttribute_Array is NetFrameworkBase.System.Diagnostics.Contracts.ContractArgumentValidatorAttribute.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Diagnostics.Contracts.ContractArgumentValidatorAttribute.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.ContractArgumentValidatorAttribute.Constructor;
         
      subtype ContractAbbreviatorAttribute is NetFrameworkBase.System.Diagnostics.Contracts.ContractAbbreviatorAttribute.Kind_Ptr;
      subtype ContractAbbreviatorAttribute_Array is NetFrameworkBase.System.Diagnostics.Contracts.ContractAbbreviatorAttribute.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Diagnostics.Contracts.ContractAbbreviatorAttribute.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.ContractAbbreviatorAttribute.Constructor;
         
      subtype ContractOptionAttribute is NetFrameworkBase.System.Diagnostics.Contracts.ContractOptionAttribute.Kind_Ptr;
      subtype ContractOptionAttribute_Array is NetFrameworkBase.System.Diagnostics.Contracts.ContractOptionAttribute.Kind_Array;
      
         function Constructor
         (
            category : NetFrameworkBase.BSTR;
            setting : NetFrameworkBase.BSTR;
            enabled : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.System.Diagnostics.Contracts.ContractOptionAttribute.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.ContractOptionAttribute.Constructor; 
         
         function Constructor
         (
            category : NetFrameworkBase.BSTR;
            setting : NetFrameworkBase.BSTR;
            value : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Diagnostics.Contracts.ContractOptionAttribute.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.ContractOptionAttribute.Constructor; 
         
      subtype Contract is NetFrameworkBase.System.Diagnostics.Contracts.Contract.Kind_Ptr;
      subtype Contract_Array is NetFrameworkBase.System.Diagnostics.Contracts.Contract.Kind_Array;
      
      subtype ContractFailureKind is NetFrameworkBase.System.Diagnostics.Contracts.ContractFailureKind.Kind;
      
      subtype ContractFailedEventArgs is NetFrameworkBase.System.Diagnostics.Contracts.ContractFailedEventArgs.Kind_Ptr;
      subtype ContractFailedEventArgs_Array is NetFrameworkBase.System.Diagnostics.Contracts.ContractFailedEventArgs.Kind_Array;
      
         function Constructor
         (
            failureKind : NetFrameworkBase.System.Diagnostics.Contracts.ContractFailureKind.Kind;
            message : NetFrameworkBase.BSTR;
            condition : NetFrameworkBase.BSTR;
            originalException : NetFrameworkBase.System.Exception_x.Kind_Ptr
         )
         return NetFrameworkBase.System.Diagnostics.Contracts.ContractFailedEventArgs.Kind_Ptr renames NetFrameworkBase.System.Diagnostics.Contracts.ContractFailedEventArgs.Constructor; 
         
   
end;
