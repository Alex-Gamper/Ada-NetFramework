--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Transactions.TransactionEventArgs;
with NetFrameworkBase.System.Transactions.TransactionCompletedEventHandler;
with NetFrameworkBase.System.Transactions.IsolationLevel;
with NetFrameworkBase.System.Transactions.TransactionStatus;
with NetFrameworkBase.System.Transactions.DependentCloneOption;
with NetFrameworkBase.System.Transactions.EnlistmentOptions;
with NetFrameworkBase.System.Transactions.Transaction;
with NetFrameworkBase.System.Transactions.TransactionInformation;
with NetFrameworkBase.System.Transactions.DependentTransaction;
with NetFrameworkBase.System.Transactions.CommittableTransaction;
with NetFrameworkBase.System.Transactions.Enlistment;
with NetFrameworkBase.System.Transactions.PreparingEnlistment;
with NetFrameworkBase.System.Transactions.SinglePhaseEnlistment;
with NetFrameworkBase.System.Transactions.IEnlistmentNotification;
with NetFrameworkBase.System.Transactions.IPromotableSinglePhaseNotification;
with NetFrameworkBase.System.Transactions.ITransactionPromoter;
with NetFrameworkBase.System.Transactions.ISimpleTransactionSuperior;
with NetFrameworkBase.System.Transactions.SubordinateTransaction;
with NetFrameworkBase.System.Transactions.ISinglePhaseNotification;
with NetFrameworkBase.System.Transactions.TransactionException;
with NetFrameworkBase.System.Transactions.TransactionAbortedException;
with NetFrameworkBase.System.Transactions.TransactionInDoubtException;
with NetFrameworkBase.System.Transactions.TransactionManagerCommunicationException;
with NetFrameworkBase.System.Transactions.TransactionPromotionException;
with NetFrameworkBase.System.Transactions.IDtcTransaction;
with NetFrameworkBase.System.Transactions.TransactionInterop;
with NetFrameworkBase.System.Transactions.HostCurrentTransactionCallback;
with NetFrameworkBase.System.Transactions.TransactionStartedEventHandler;
with NetFrameworkBase.System.Transactions.TransactionManager;
with NetFrameworkBase.System.Transactions.TransactionOptions;
with NetFrameworkBase.System.Transactions.DistributedTransactionPermission;
with NetFrameworkBase.System.Transactions.DistributedTransactionPermissionAttribute;
with NetFrameworkBase.System.Transactions.TransactionScopeOption;
with NetFrameworkBase.System.Transactions.TransactionScopeAsyncFlowOption;
with NetFrameworkBase.System.Transactions.EnterpriseServicesInteropOption;
with NetFrameworkBase.System.Transactions.TransactionScope;
with NetFrameworkBase.System.Object;
with NetFrameworkBase.System.TimeSpan;
with NetFrameworkBase.System.Exception_x;
with NetFrameworkBase.System.Security.Permissions.PermissionState;
with NetFrameworkBase.System.Security.Permissions.SecurityAction;
--------------------------------------------------------------------------------
package NetFramework.System.Transactions is
   
      --------------------------------------------------------------------------
      subtype TransactionEventArgs is NetFrameworkBase.System.Transactions.TransactionEventArgs.Kind_Ptr;
      subtype TransactionEventArgs_Array is NetFrameworkBase.System.Transactions.TransactionEventArgs.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Transactions.TransactionEventArgs.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionEventArgs.Constructor;
         
      --------------------------------------------------------------------------
      subtype TransactionCompletedEventHandler is NetFrameworkBase.System.Transactions.TransactionCompletedEventHandler.Kind_Ptr;
      subtype TransactionCompletedEventHandler_Array is NetFrameworkBase.System.Transactions.TransactionCompletedEventHandler.Kind_Array;
      
         function Constructor (Callback : NetFrameworkBase.System.Transactions.TransactionCompletedEventHandler.Kind_Callback) return NetFrameworkBase.System.Transactions.TransactionCompletedEventHandler.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionCompletedEventHandler.Constructor;
      
      --------------------------------------------------------------------------
      subtype IsolationLevel is NetFrameworkBase.System.Transactions.IsolationLevel.Kind;
      
      --------------------------------------------------------------------------
      subtype TransactionStatus is NetFrameworkBase.System.Transactions.TransactionStatus.Kind;
      
      --------------------------------------------------------------------------
      subtype DependentCloneOption is NetFrameworkBase.System.Transactions.DependentCloneOption.Kind;
      
      --------------------------------------------------------------------------
      subtype EnlistmentOptions is NetFrameworkBase.System.Transactions.EnlistmentOptions.Kind;
      
      --------------------------------------------------------------------------
      subtype Transaction is NetFrameworkBase.System.Transactions.Transaction.Kind_Ptr;
      subtype Transaction_Array is NetFrameworkBase.System.Transactions.Transaction.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype TransactionInformation is NetFrameworkBase.System.Transactions.TransactionInformation.Kind_Ptr;
      subtype TransactionInformation_Array is NetFrameworkBase.System.Transactions.TransactionInformation.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype DependentTransaction is NetFrameworkBase.System.Transactions.DependentTransaction.Kind_Ptr;
      subtype DependentTransaction_Array is NetFrameworkBase.System.Transactions.DependentTransaction.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype CommittableTransaction is NetFrameworkBase.System.Transactions.CommittableTransaction.Kind_Ptr;
      subtype CommittableTransaction_Array is NetFrameworkBase.System.Transactions.CommittableTransaction.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Transactions.CommittableTransaction.Kind_Ptr renames NetFrameworkBase.System.Transactions.CommittableTransaction.Constructor;
         
         function Constructor
         (
            timeout : NetFrameworkBase.System.TimeSpan.Kind_Ptr
         )
         return NetFrameworkBase.System.Transactions.CommittableTransaction.Kind_Ptr renames NetFrameworkBase.System.Transactions.CommittableTransaction.Constructor; 
         
         function Constructor
         (
            options : NetFrameworkBase.System.Transactions.TransactionOptions.Kind_Ptr
         )
         return NetFrameworkBase.System.Transactions.CommittableTransaction.Kind_Ptr renames NetFrameworkBase.System.Transactions.CommittableTransaction.Constructor; 
         
      --------------------------------------------------------------------------
      subtype Enlistment is NetFrameworkBase.System.Transactions.Enlistment.Kind_Ptr;
      subtype Enlistment_Array is NetFrameworkBase.System.Transactions.Enlistment.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype PreparingEnlistment is NetFrameworkBase.System.Transactions.PreparingEnlistment.Kind_Ptr;
      subtype PreparingEnlistment_Array is NetFrameworkBase.System.Transactions.PreparingEnlistment.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype SinglePhaseEnlistment is NetFrameworkBase.System.Transactions.SinglePhaseEnlistment.Kind_Ptr;
      subtype SinglePhaseEnlistment_Array is NetFrameworkBase.System.Transactions.SinglePhaseEnlistment.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype IEnlistmentNotification is NetFrameworkBase.System.Transactions.IEnlistmentNotification.Kind_Ptr;
      subtype IEnlistmentNotification_Array is NetFrameworkBase.System.Transactions.IEnlistmentNotification.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype IPromotableSinglePhaseNotification is NetFrameworkBase.System.Transactions.IPromotableSinglePhaseNotification.Kind_Ptr;
      subtype IPromotableSinglePhaseNotification_Array is NetFrameworkBase.System.Transactions.IPromotableSinglePhaseNotification.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype ITransactionPromoter is NetFrameworkBase.System.Transactions.ITransactionPromoter.Kind_Ptr;
      subtype ITransactionPromoter_Array is NetFrameworkBase.System.Transactions.ITransactionPromoter.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype ISimpleTransactionSuperior is NetFrameworkBase.System.Transactions.ISimpleTransactionSuperior.Kind_Ptr;
      subtype ISimpleTransactionSuperior_Array is NetFrameworkBase.System.Transactions.ISimpleTransactionSuperior.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype SubordinateTransaction is NetFrameworkBase.System.Transactions.SubordinateTransaction.Kind_Ptr;
      subtype SubordinateTransaction_Array is NetFrameworkBase.System.Transactions.SubordinateTransaction.Kind_Array;
      
         function Constructor
         (
            isoLevel : NetFrameworkBase.System.Transactions.IsolationLevel.Kind;
            superior : NetFrameworkBase.System.Transactions.ISimpleTransactionSuperior.Kind_Ptr
         )
         return NetFrameworkBase.System.Transactions.SubordinateTransaction.Kind_Ptr renames NetFrameworkBase.System.Transactions.SubordinateTransaction.Constructor; 
         
      --------------------------------------------------------------------------
      subtype ISinglePhaseNotification is NetFrameworkBase.System.Transactions.ISinglePhaseNotification.Kind_Ptr;
      subtype ISinglePhaseNotification_Array is NetFrameworkBase.System.Transactions.ISinglePhaseNotification.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype TransactionException is NetFrameworkBase.System.Transactions.TransactionException.Kind_Ptr;
      subtype TransactionException_Array is NetFrameworkBase.System.Transactions.TransactionException.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Transactions.TransactionException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionException.Constructor;
         
         function Constructor
         (
            message : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Transactions.TransactionException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionException.Constructor; 
         
         function Constructor
         (
            message : NetFrameworkBase.BSTR;
            innerException : NetFrameworkBase.System.Exception_x.Kind_Ptr
         )
         return NetFrameworkBase.System.Transactions.TransactionException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionException.Constructor; 
         
      --------------------------------------------------------------------------
      subtype TransactionAbortedException is NetFrameworkBase.System.Transactions.TransactionAbortedException.Kind_Ptr;
      subtype TransactionAbortedException_Array is NetFrameworkBase.System.Transactions.TransactionAbortedException.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Transactions.TransactionAbortedException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionAbortedException.Constructor;
         
         function Constructor
         (
            message : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Transactions.TransactionAbortedException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionAbortedException.Constructor; 
         
         function Constructor
         (
            message : NetFrameworkBase.BSTR;
            innerException : NetFrameworkBase.System.Exception_x.Kind_Ptr
         )
         return NetFrameworkBase.System.Transactions.TransactionAbortedException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionAbortedException.Constructor; 
         
      --------------------------------------------------------------------------
      subtype TransactionInDoubtException is NetFrameworkBase.System.Transactions.TransactionInDoubtException.Kind_Ptr;
      subtype TransactionInDoubtException_Array is NetFrameworkBase.System.Transactions.TransactionInDoubtException.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Transactions.TransactionInDoubtException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionInDoubtException.Constructor;
         
         function Constructor
         (
            message : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Transactions.TransactionInDoubtException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionInDoubtException.Constructor; 
         
         function Constructor
         (
            message : NetFrameworkBase.BSTR;
            innerException : NetFrameworkBase.System.Exception_x.Kind_Ptr
         )
         return NetFrameworkBase.System.Transactions.TransactionInDoubtException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionInDoubtException.Constructor; 
         
      --------------------------------------------------------------------------
      subtype TransactionManagerCommunicationException is NetFrameworkBase.System.Transactions.TransactionManagerCommunicationException.Kind_Ptr;
      subtype TransactionManagerCommunicationException_Array is NetFrameworkBase.System.Transactions.TransactionManagerCommunicationException.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Transactions.TransactionManagerCommunicationException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionManagerCommunicationException.Constructor;
         
         function Constructor
         (
            message : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Transactions.TransactionManagerCommunicationException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionManagerCommunicationException.Constructor; 
         
         function Constructor
         (
            message : NetFrameworkBase.BSTR;
            innerException : NetFrameworkBase.System.Exception_x.Kind_Ptr
         )
         return NetFrameworkBase.System.Transactions.TransactionManagerCommunicationException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionManagerCommunicationException.Constructor; 
         
      --------------------------------------------------------------------------
      subtype TransactionPromotionException is NetFrameworkBase.System.Transactions.TransactionPromotionException.Kind_Ptr;
      subtype TransactionPromotionException_Array is NetFrameworkBase.System.Transactions.TransactionPromotionException.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Transactions.TransactionPromotionException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionPromotionException.Constructor;
         
         function Constructor
         (
            message : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Transactions.TransactionPromotionException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionPromotionException.Constructor; 
         
         function Constructor
         (
            message : NetFrameworkBase.BSTR;
            innerException : NetFrameworkBase.System.Exception_x.Kind_Ptr
         )
         return NetFrameworkBase.System.Transactions.TransactionPromotionException.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionPromotionException.Constructor; 
         
      --------------------------------------------------------------------------
      subtype IDtcTransaction is NetFrameworkBase.System.Transactions.IDtcTransaction.Kind_Ptr;
      subtype IDtcTransaction_Array is NetFrameworkBase.System.Transactions.IDtcTransaction.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype TransactionInterop is NetFrameworkBase.System.Transactions.TransactionInterop.Kind_Ptr;
      subtype TransactionInterop_Array is NetFrameworkBase.System.Transactions.TransactionInterop.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype HostCurrentTransactionCallback is NetFrameworkBase.System.Transactions.HostCurrentTransactionCallback.Kind_Ptr;
      subtype HostCurrentTransactionCallback_Array is NetFrameworkBase.System.Transactions.HostCurrentTransactionCallback.Kind_Array;
      
         function Constructor (Callback : NetFrameworkBase.System.Transactions.HostCurrentTransactionCallback.Kind_Callback) return NetFrameworkBase.System.Transactions.HostCurrentTransactionCallback.Kind_Ptr renames NetFrameworkBase.System.Transactions.HostCurrentTransactionCallback.Constructor;
      
      --------------------------------------------------------------------------
      subtype TransactionStartedEventHandler is NetFrameworkBase.System.Transactions.TransactionStartedEventHandler.Kind_Ptr;
      subtype TransactionStartedEventHandler_Array is NetFrameworkBase.System.Transactions.TransactionStartedEventHandler.Kind_Array;
      
         function Constructor (Callback : NetFrameworkBase.System.Transactions.TransactionStartedEventHandler.Kind_Callback) return NetFrameworkBase.System.Transactions.TransactionStartedEventHandler.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionStartedEventHandler.Constructor;
      
      --------------------------------------------------------------------------
      subtype TransactionManager is NetFrameworkBase.System.Transactions.TransactionManager.Kind_Ptr;
      subtype TransactionManager_Array is NetFrameworkBase.System.Transactions.TransactionManager.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype TransactionOptions is NetFrameworkBase.System.Transactions.TransactionOptions.Kind_Ptr;
      subtype TransactionOptions_Array is NetFrameworkBase.System.Transactions.TransactionOptions.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype DistributedTransactionPermission is NetFrameworkBase.System.Transactions.DistributedTransactionPermission.Kind_Ptr;
      subtype DistributedTransactionPermission_Array is NetFrameworkBase.System.Transactions.DistributedTransactionPermission.Kind_Array;
      
         function Constructor
         (
            state : NetFrameworkBase.System.Security.Permissions.PermissionState.Kind
         )
         return NetFrameworkBase.System.Transactions.DistributedTransactionPermission.Kind_Ptr renames NetFrameworkBase.System.Transactions.DistributedTransactionPermission.Constructor; 
         
      --------------------------------------------------------------------------
      subtype DistributedTransactionPermissionAttribute is NetFrameworkBase.System.Transactions.DistributedTransactionPermissionAttribute.Kind_Ptr;
      subtype DistributedTransactionPermissionAttribute_Array is NetFrameworkBase.System.Transactions.DistributedTransactionPermissionAttribute.Kind_Array;
      
         function Constructor
         (
            action : NetFrameworkBase.System.Security.Permissions.SecurityAction.Kind
         )
         return NetFrameworkBase.System.Transactions.DistributedTransactionPermissionAttribute.Kind_Ptr renames NetFrameworkBase.System.Transactions.DistributedTransactionPermissionAttribute.Constructor; 
         
      --------------------------------------------------------------------------
      subtype TransactionScopeOption is NetFrameworkBase.System.Transactions.TransactionScopeOption.Kind;
      
      --------------------------------------------------------------------------
      subtype TransactionScopeAsyncFlowOption is NetFrameworkBase.System.Transactions.TransactionScopeAsyncFlowOption.Kind;
      
      --------------------------------------------------------------------------
      subtype EnterpriseServicesInteropOption is NetFrameworkBase.System.Transactions.EnterpriseServicesInteropOption.Kind;
      
      --------------------------------------------------------------------------
      subtype TransactionScope is NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr;
      subtype TransactionScope_Array is NetFrameworkBase.System.Transactions.TransactionScope.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor;
         
         function Constructor
         (
            scopeOption : NetFrameworkBase.System.Transactions.TransactionScopeOption.Kind
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
         function Constructor
         (
            asyncFlowOption : NetFrameworkBase.System.Transactions.TransactionScopeAsyncFlowOption.Kind
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
         function Constructor
         (
            scopeOption : NetFrameworkBase.System.Transactions.TransactionScopeOption.Kind;
            asyncFlowOption : NetFrameworkBase.System.Transactions.TransactionScopeAsyncFlowOption.Kind
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
         function Constructor
         (
            scopeOption : NetFrameworkBase.System.Transactions.TransactionScopeOption.Kind;
            scopeTimeout : NetFrameworkBase.System.TimeSpan.Kind_Ptr
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
         function Constructor
         (
            scopeOption : NetFrameworkBase.System.Transactions.TransactionScopeOption.Kind;
            scopeTimeout : NetFrameworkBase.System.TimeSpan.Kind_Ptr;
            asyncFlowOption : NetFrameworkBase.System.Transactions.TransactionScopeAsyncFlowOption.Kind
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
         function Constructor
         (
            scopeOption : NetFrameworkBase.System.Transactions.TransactionScopeOption.Kind;
            transactionOptions : NetFrameworkBase.System.Transactions.TransactionOptions.Kind_Ptr
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
         function Constructor
         (
            scopeOption : NetFrameworkBase.System.Transactions.TransactionScopeOption.Kind;
            transactionOptions : NetFrameworkBase.System.Transactions.TransactionOptions.Kind_Ptr;
            asyncFlowOption : NetFrameworkBase.System.Transactions.TransactionScopeAsyncFlowOption.Kind
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
         function Constructor
         (
            scopeOption : NetFrameworkBase.System.Transactions.TransactionScopeOption.Kind;
            transactionOptions : NetFrameworkBase.System.Transactions.TransactionOptions.Kind_Ptr;
            interopOption : NetFrameworkBase.System.Transactions.EnterpriseServicesInteropOption.Kind
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
         function Constructor
         (
            transactionToUse : NetFrameworkBase.System.Transactions.Transaction.Kind_Ptr
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
         function Constructor
         (
            transactionToUse : NetFrameworkBase.System.Transactions.Transaction.Kind_Ptr;
            asyncFlowOption : NetFrameworkBase.System.Transactions.TransactionScopeAsyncFlowOption.Kind
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
         function Constructor
         (
            transactionToUse : NetFrameworkBase.System.Transactions.Transaction.Kind_Ptr;
            scopeTimeout : NetFrameworkBase.System.TimeSpan.Kind_Ptr
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
         function Constructor
         (
            transactionToUse : NetFrameworkBase.System.Transactions.Transaction.Kind_Ptr;
            scopeTimeout : NetFrameworkBase.System.TimeSpan.Kind_Ptr;
            asyncFlowOption : NetFrameworkBase.System.Transactions.TransactionScopeAsyncFlowOption.Kind
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
         function Constructor
         (
            transactionToUse : NetFrameworkBase.System.Transactions.Transaction.Kind_Ptr;
            scopeTimeout : NetFrameworkBase.System.TimeSpan.Kind_Ptr;
            interopOption : NetFrameworkBase.System.Transactions.EnterpriseServicesInteropOption.Kind
         )
         return NetFrameworkBase.System.Transactions.TransactionScope.Kind_Ptr renames NetFrameworkBase.System.Transactions.TransactionScope.Constructor; 
         
   
end;
