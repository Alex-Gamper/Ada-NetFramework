--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Reflection.Emit.AssemblyBuilder;
with NetFrameworkBase.System.Reflection.Emit.AssemblyBuilderAccess;
with NetFrameworkBase.System.Reflection.Emit.ConstructorBuilder;
with NetFrameworkBase.System.Reflection.Emit.DynamicILInfo;
with NetFrameworkBase.System.Reflection.Emit.DynamicMethod;
with NetFrameworkBase.System.Reflection.Emit.EventBuilder;
with NetFrameworkBase.System.Reflection.Emit.EventToken;
with NetFrameworkBase.System.Reflection.Emit.FieldBuilder;
with NetFrameworkBase.System.Reflection.Emit.FieldToken;
with NetFrameworkBase.System.Reflection.Emit.ILGenerator;
with NetFrameworkBase.System.Reflection.Emit.Label;
with NetFrameworkBase.System.Reflection.Emit.LocalBuilder;
with NetFrameworkBase.System.Reflection.Emit.MethodBuilder;
with NetFrameworkBase.System.Reflection.Emit.ExceptionHandler;
with NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder;
with NetFrameworkBase.System.Reflection.Emit.MethodRental;
with NetFrameworkBase.System.Reflection.Emit.MethodToken;
with NetFrameworkBase.System.Reflection.Emit.ModuleBuilder;
with NetFrameworkBase.System.Reflection.Emit.PEFileKinds;
with NetFrameworkBase.System.Reflection.Emit.OpCodes;
with NetFrameworkBase.System.Reflection.Emit.OpCode;
with NetFrameworkBase.System.Reflection.Emit.OpCodeType;
with NetFrameworkBase.System.Reflection.Emit.StackBehaviour;
with NetFrameworkBase.System.Reflection.Emit.OperandType;
with NetFrameworkBase.System.Reflection.Emit.FlowControl;
with NetFrameworkBase.System.Reflection.Emit.ParameterBuilder;
with NetFrameworkBase.System.Reflection.Emit.ParameterToken;
with NetFrameworkBase.System.Reflection.Emit.PropertyBuilder;
with NetFrameworkBase.System.Reflection.Emit.PropertyToken;
with NetFrameworkBase.System.Reflection.Emit.SignatureHelper;
with NetFrameworkBase.System.Reflection.Emit.SignatureToken;
with NetFrameworkBase.System.Reflection.Emit.StringToken;
with NetFrameworkBase.System.Reflection.Emit.PackingSize;
with NetFrameworkBase.System.Reflection.Emit.TypeBuilder;
with NetFrameworkBase.System.Reflection.Emit.GenericTypeParameterBuilder;
with NetFrameworkBase.System.Reflection.Emit.EnumBuilder;
with NetFrameworkBase.System.Reflection.Emit.TypeToken;
with NetFrameworkBase.System.Reflection.Emit.UnmanagedMarshal;
with NetFrameworkBase.System.Type_x;
with NetFrameworkBase.System.Reflection.Module;
with NetFrameworkBase.System.Reflection.MethodAttributes;
with NetFrameworkBase.System.Reflection.CallingConventions;
with NetFrameworkBase.System.Reflection.ExceptionHandlingClauseOptions;
with NetFrameworkBase.System.Reflection.ConstructorInfo;
with NetFrameworkBase.System.Object;
with NetFrameworkBase.System.Reflection.PropertyInfo;
with NetFrameworkBase.System.Reflection.FieldInfo;
--------------------------------------------------------------------------------
package NetFramework.System.Reflection.Emit is
   
      subtype AssemblyBuilder is NetFrameworkBase.System.Reflection.Emit.AssemblyBuilder.Kind_Ptr;
      subtype AssemblyBuilder_Array is NetFrameworkBase.System.Reflection.Emit.AssemblyBuilder.Kind_Array;
      
      subtype AssemblyBuilderAccess is NetFrameworkBase.System.Reflection.Emit.AssemblyBuilderAccess.Kind;
      
      subtype ConstructorBuilder is NetFrameworkBase.System.Reflection.Emit.ConstructorBuilder.Kind_Ptr;
      subtype ConstructorBuilder_Array is NetFrameworkBase.System.Reflection.Emit.ConstructorBuilder.Kind_Array;
      
      subtype DynamicILInfo is NetFrameworkBase.System.Reflection.Emit.DynamicILInfo.Kind_Ptr;
      subtype DynamicILInfo_Array is NetFrameworkBase.System.Reflection.Emit.DynamicILInfo.Kind_Array;
      
      subtype DynamicMethod is NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Kind_Ptr;
      subtype DynamicMethod_Array is NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Kind_Array;
      
         function Constructor
         (
            name : NetFrameworkBase.BSTR;
            returnType : NetFrameworkBase.System.Type_x.Kind_Ptr;
            parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array
         )
         return NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Constructor; 
         
         function Constructor
         (
            name : NetFrameworkBase.BSTR;
            returnType : NetFrameworkBase.System.Type_x.Kind_Ptr;
            parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array;
            restrictedSkipVisibility : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Constructor; 
         
         function Constructor
         (
            name : NetFrameworkBase.BSTR;
            returnType : NetFrameworkBase.System.Type_x.Kind_Ptr;
            parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array;
            m : NetFrameworkBase.System.Reflection.Module.Kind_Ptr
         )
         return NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Constructor; 
         
         function Constructor
         (
            name : NetFrameworkBase.BSTR;
            returnType : NetFrameworkBase.System.Type_x.Kind_Ptr;
            parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array;
            m : NetFrameworkBase.System.Reflection.Module.Kind_Ptr;
            skipVisibility : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Constructor; 
         
         function Constructor
         (
            name : NetFrameworkBase.BSTR;
            attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind;
            callingConvention : NetFrameworkBase.System.Reflection.CallingConventions.Kind;
            returnType : NetFrameworkBase.System.Type_x.Kind_Ptr;
            parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array;
            m : NetFrameworkBase.System.Reflection.Module.Kind_Ptr;
            skipVisibility : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Constructor; 
         
         function Constructor
         (
            name : NetFrameworkBase.BSTR;
            returnType : NetFrameworkBase.System.Type_x.Kind_Ptr;
            parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array;
            owner : NetFrameworkBase.System.Type_x.Kind_Ptr
         )
         return NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Constructor; 
         
         function Constructor
         (
            name : NetFrameworkBase.BSTR;
            returnType : NetFrameworkBase.System.Type_x.Kind_Ptr;
            parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array;
            owner : NetFrameworkBase.System.Type_x.Kind_Ptr;
            skipVisibility : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Constructor; 
         
         function Constructor
         (
            name : NetFrameworkBase.BSTR;
            attributes : NetFrameworkBase.System.Reflection.MethodAttributes.Kind;
            callingConvention : NetFrameworkBase.System.Reflection.CallingConventions.Kind;
            returnType : NetFrameworkBase.System.Type_x.Kind_Ptr;
            parameterTypes : NetFrameworkBase.System.Type_x.Kind_Array;
            owner : NetFrameworkBase.System.Type_x.Kind_Ptr;
            skipVisibility : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.DynamicMethod.Constructor; 
         
      subtype EventBuilder is NetFrameworkBase.System.Reflection.Emit.EventBuilder.Kind_Ptr;
      subtype EventBuilder_Array is NetFrameworkBase.System.Reflection.Emit.EventBuilder.Kind_Array;
      
      subtype EventToken is NetFrameworkBase.System.Reflection.Emit.EventToken.Kind_Ptr;
      subtype EventToken_Array is NetFrameworkBase.System.Reflection.Emit.EventToken.Kind_Array;
      
      subtype FieldBuilder is NetFrameworkBase.System.Reflection.Emit.FieldBuilder.Kind_Ptr;
      subtype FieldBuilder_Array is NetFrameworkBase.System.Reflection.Emit.FieldBuilder.Kind_Array;
      
      subtype FieldToken is NetFrameworkBase.System.Reflection.Emit.FieldToken.Kind_Ptr;
      subtype FieldToken_Array is NetFrameworkBase.System.Reflection.Emit.FieldToken.Kind_Array;
      
      subtype ILGenerator is NetFrameworkBase.System.Reflection.Emit.ILGenerator.Kind_Ptr;
      subtype ILGenerator_Array is NetFrameworkBase.System.Reflection.Emit.ILGenerator.Kind_Array;
      
      subtype Label is NetFrameworkBase.System.Reflection.Emit.Label.Kind_Ptr;
      subtype Label_Array is NetFrameworkBase.System.Reflection.Emit.Label.Kind_Array;
      
      subtype LocalBuilder is NetFrameworkBase.System.Reflection.Emit.LocalBuilder.Kind_Ptr;
      subtype LocalBuilder_Array is NetFrameworkBase.System.Reflection.Emit.LocalBuilder.Kind_Array;
      
      subtype MethodBuilder is NetFrameworkBase.System.Reflection.Emit.MethodBuilder.Kind_Ptr;
      subtype MethodBuilder_Array is NetFrameworkBase.System.Reflection.Emit.MethodBuilder.Kind_Array;
      
      subtype ExceptionHandler is NetFrameworkBase.System.Reflection.Emit.ExceptionHandler.Kind_Ptr;
      subtype ExceptionHandler_Array is NetFrameworkBase.System.Reflection.Emit.ExceptionHandler.Kind_Array;
      
         function Constructor
         (
            tryOffset : NetFrameworkBase.Int32;
            tryLength : NetFrameworkBase.Int32;
            filterOffset : NetFrameworkBase.Int32;
            handlerOffset : NetFrameworkBase.Int32;
            handlerLength : NetFrameworkBase.Int32;
            kind : NetFrameworkBase.System.Reflection.ExceptionHandlingClauseOptions.Kind;
            exceptionTypeToken : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.Reflection.Emit.ExceptionHandler.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.ExceptionHandler.Constructor; 
         
      subtype CustomAttributeBuilder is NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Kind_Ptr;
      subtype CustomAttributeBuilder_Array is NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Kind_Array;
      
         function Constructor
         (
            con : NetFrameworkBase.System.Reflection.ConstructorInfo.Kind_Ptr;
            constructorArgs : NetFrameworkBase.System.Object.Kind_Array
         )
         return NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Constructor; 
         
         function Constructor
         (
            con : NetFrameworkBase.System.Reflection.ConstructorInfo.Kind_Ptr;
            constructorArgs : NetFrameworkBase.System.Object.Kind_Array;
            namedProperties : NetFrameworkBase.System.Reflection.PropertyInfo.Kind_Array;
            propertyValues : NetFrameworkBase.System.Object.Kind_Array
         )
         return NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Constructor; 
         
         function Constructor
         (
            con : NetFrameworkBase.System.Reflection.ConstructorInfo.Kind_Ptr;
            constructorArgs : NetFrameworkBase.System.Object.Kind_Array;
            namedFields : NetFrameworkBase.System.Reflection.FieldInfo.Kind_Array;
            fieldValues : NetFrameworkBase.System.Object.Kind_Array
         )
         return NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Constructor; 
         
         function Constructor
         (
            con : NetFrameworkBase.System.Reflection.ConstructorInfo.Kind_Ptr;
            constructorArgs : NetFrameworkBase.System.Object.Kind_Array;
            namedProperties : NetFrameworkBase.System.Reflection.PropertyInfo.Kind_Array;
            propertyValues : NetFrameworkBase.System.Object.Kind_Array;
            namedFields : NetFrameworkBase.System.Reflection.FieldInfo.Kind_Array;
            fieldValues : NetFrameworkBase.System.Object.Kind_Array
         )
         return NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Kind_Ptr renames NetFrameworkBase.System.Reflection.Emit.CustomAttributeBuilder.Constructor; 
         
      subtype MethodRental is NetFrameworkBase.System.Reflection.Emit.MethodRental.Kind_Ptr;
      subtype MethodRental_Array is NetFrameworkBase.System.Reflection.Emit.MethodRental.Kind_Array;
      
      subtype MethodToken is NetFrameworkBase.System.Reflection.Emit.MethodToken.Kind_Ptr;
      subtype MethodToken_Array is NetFrameworkBase.System.Reflection.Emit.MethodToken.Kind_Array;
      
      subtype ModuleBuilder is NetFrameworkBase.System.Reflection.Emit.ModuleBuilder.Kind_Ptr;
      subtype ModuleBuilder_Array is NetFrameworkBase.System.Reflection.Emit.ModuleBuilder.Kind_Array;
      
      subtype PEFileKinds is NetFrameworkBase.System.Reflection.Emit.PEFileKinds.Kind;
      
      subtype OpCodes is NetFrameworkBase.System.Reflection.Emit.OpCodes.Kind_Ptr;
      subtype OpCodes_Array is NetFrameworkBase.System.Reflection.Emit.OpCodes.Kind_Array;
      
      subtype OpCode is NetFrameworkBase.System.Reflection.Emit.OpCode.Kind_Ptr;
      subtype OpCode_Array is NetFrameworkBase.System.Reflection.Emit.OpCode.Kind_Array;
      
      subtype OpCodeType is NetFrameworkBase.System.Reflection.Emit.OpCodeType.Kind;
      
      subtype StackBehaviour is NetFrameworkBase.System.Reflection.Emit.StackBehaviour.Kind;
      
      subtype OperandType is NetFrameworkBase.System.Reflection.Emit.OperandType.Kind;
      
      subtype FlowControl is NetFrameworkBase.System.Reflection.Emit.FlowControl.Kind;
      
      subtype ParameterBuilder is NetFrameworkBase.System.Reflection.Emit.ParameterBuilder.Kind_Ptr;
      subtype ParameterBuilder_Array is NetFrameworkBase.System.Reflection.Emit.ParameterBuilder.Kind_Array;
      
      subtype ParameterToken is NetFrameworkBase.System.Reflection.Emit.ParameterToken.Kind_Ptr;
      subtype ParameterToken_Array is NetFrameworkBase.System.Reflection.Emit.ParameterToken.Kind_Array;
      
      subtype PropertyBuilder is NetFrameworkBase.System.Reflection.Emit.PropertyBuilder.Kind_Ptr;
      subtype PropertyBuilder_Array is NetFrameworkBase.System.Reflection.Emit.PropertyBuilder.Kind_Array;
      
      subtype PropertyToken is NetFrameworkBase.System.Reflection.Emit.PropertyToken.Kind_Ptr;
      subtype PropertyToken_Array is NetFrameworkBase.System.Reflection.Emit.PropertyToken.Kind_Array;
      
      subtype SignatureHelper is NetFrameworkBase.System.Reflection.Emit.SignatureHelper.Kind_Ptr;
      subtype SignatureHelper_Array is NetFrameworkBase.System.Reflection.Emit.SignatureHelper.Kind_Array;
      
      subtype SignatureToken is NetFrameworkBase.System.Reflection.Emit.SignatureToken.Kind_Ptr;
      subtype SignatureToken_Array is NetFrameworkBase.System.Reflection.Emit.SignatureToken.Kind_Array;
      
      subtype StringToken is NetFrameworkBase.System.Reflection.Emit.StringToken.Kind_Ptr;
      subtype StringToken_Array is NetFrameworkBase.System.Reflection.Emit.StringToken.Kind_Array;
      
      subtype PackingSize is NetFrameworkBase.System.Reflection.Emit.PackingSize.Kind;
      
      subtype TypeBuilder is NetFrameworkBase.System.Reflection.Emit.TypeBuilder.Kind_Ptr;
      subtype TypeBuilder_Array is NetFrameworkBase.System.Reflection.Emit.TypeBuilder.Kind_Array;
      
      subtype GenericTypeParameterBuilder is NetFrameworkBase.System.Reflection.Emit.GenericTypeParameterBuilder.Kind_Ptr;
      subtype GenericTypeParameterBuilder_Array is NetFrameworkBase.System.Reflection.Emit.GenericTypeParameterBuilder.Kind_Array;
      
      subtype EnumBuilder is NetFrameworkBase.System.Reflection.Emit.EnumBuilder.Kind_Ptr;
      subtype EnumBuilder_Array is NetFrameworkBase.System.Reflection.Emit.EnumBuilder.Kind_Array;
      
      subtype TypeToken is NetFrameworkBase.System.Reflection.Emit.TypeToken.Kind_Ptr;
      subtype TypeToken_Array is NetFrameworkBase.System.Reflection.Emit.TypeToken.Kind_Array;
      
      subtype UnmanagedMarshal is NetFrameworkBase.System.Reflection.Emit.UnmanagedMarshal.Kind_Ptr;
      subtype UnmanagedMarshal_Array is NetFrameworkBase.System.Reflection.Emit.UnmanagedMarshal.Kind_Array;
      
   
end;
