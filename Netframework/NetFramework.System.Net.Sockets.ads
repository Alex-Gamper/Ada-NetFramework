--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.Net.Sockets.SocketException;
with NetFrameworkBase.System.Net.Sockets.AddressFamily;
with NetFrameworkBase.System.Net.Sockets.IOControlCode;
with NetFrameworkBase.System.Net.Sockets.IPProtectionLevel;
with NetFrameworkBase.System.Net.Sockets.LingerOption;
with NetFrameworkBase.System.Net.Sockets.MulticastOption;
with NetFrameworkBase.System.Net.Sockets.IPv6MulticastOption;
with NetFrameworkBase.System.Net.Sockets.NetworkStream;
with NetFrameworkBase.System.Net.Sockets.ProtocolFamily;
with NetFrameworkBase.System.Net.Sockets.ProtocolType;
with NetFrameworkBase.System.Net.Sockets.SelectMode;
with NetFrameworkBase.System.Net.Sockets.SocketInformationOptions;
with NetFrameworkBase.System.Net.Sockets.SocketInformation;
with NetFrameworkBase.System.Net.Sockets.Socket;
with NetFrameworkBase.System.Net.Sockets.SocketAsyncOperation;
with NetFrameworkBase.System.Net.Sockets.SendPacketsElement;
with NetFrameworkBase.System.Net.Sockets.SocketClientAccessPolicyProtocol;
with NetFrameworkBase.System.Net.Sockets.SocketAsyncEventArgs;
with NetFrameworkBase.System.Net.Sockets.SocketError;
with NetFrameworkBase.System.Net.Sockets.SocketFlags;
with NetFrameworkBase.System.Net.Sockets.SocketOptionLevel;
with NetFrameworkBase.System.Net.Sockets.SocketOptionName;
with NetFrameworkBase.System.Net.Sockets.SocketShutdown;
with NetFrameworkBase.System.Net.Sockets.SocketReceiveFromResult;
with NetFrameworkBase.System.Net.Sockets.SocketReceiveMessageFromResult;
with NetFrameworkBase.System.Net.Sockets.SocketTaskExtensions;
with NetFrameworkBase.System.Net.Sockets.SocketType;
with NetFrameworkBase.System.Net.Sockets.TcpClient;
with NetFrameworkBase.System.Net.Sockets.TcpListener;
with NetFrameworkBase.System.Net.Sockets.TransmitFileOptions;
with NetFrameworkBase.System.Net.Sockets.UdpClient;
with NetFrameworkBase.System.Net.Sockets.UdpReceiveResult;
with NetFrameworkBase.System.Net.Sockets.IPPacketInformation;
with NetFrameworkBase.System.Net.IPAddress;
with NetFrameworkBase.System.IO.FileAccess;
with NetFrameworkBase.System.Net.IPEndPoint;
--------------------------------------------------------------------------------
package NetFramework.System.Net.Sockets is
   
      --------------------------------------------------------------------------
      subtype SocketException is NetFrameworkBase.System.Net.Sockets.SocketException.Kind_Ptr;
      subtype SocketException_Array is NetFrameworkBase.System.Net.Sockets.SocketException.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Net.Sockets.SocketException.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.SocketException.Constructor;
         
         function Constructor
         (
            errorCode : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.Net.Sockets.SocketException.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.SocketException.Constructor; 
         
      --------------------------------------------------------------------------
      subtype AddressFamily is NetFrameworkBase.System.Net.Sockets.AddressFamily.Kind;
      
      --------------------------------------------------------------------------
      subtype IOControlCode is NetFrameworkBase.System.Net.Sockets.IOControlCode.Kind;
      
      --------------------------------------------------------------------------
      subtype IPProtectionLevel is NetFrameworkBase.System.Net.Sockets.IPProtectionLevel.Kind;
      
      --------------------------------------------------------------------------
      subtype LingerOption is NetFrameworkBase.System.Net.Sockets.LingerOption.Kind_Ptr;
      subtype LingerOption_Array is NetFrameworkBase.System.Net.Sockets.LingerOption.Kind_Array;
      
         function Constructor
         (
            enable : NetFrameworkBase.Boolean;
            seconds : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.Net.Sockets.LingerOption.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.LingerOption.Constructor; 
         
      --------------------------------------------------------------------------
      subtype MulticastOption is NetFrameworkBase.System.Net.Sockets.MulticastOption.Kind_Ptr;
      subtype MulticastOption_Array is NetFrameworkBase.System.Net.Sockets.MulticastOption.Kind_Array;
      
         function Constructor
         (
            group : NetFrameworkBase.System.Net.IPAddress.Kind_Ptr;
            mcint : NetFrameworkBase.System.Net.IPAddress.Kind_Ptr
         )
         return NetFrameworkBase.System.Net.Sockets.MulticastOption.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.MulticastOption.Constructor; 
         
         function Constructor
         (
            group : NetFrameworkBase.System.Net.IPAddress.Kind_Ptr;
            interfaceIndex : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.Net.Sockets.MulticastOption.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.MulticastOption.Constructor; 
         
         function Constructor
         (
            group : NetFrameworkBase.System.Net.IPAddress.Kind_Ptr
         )
         return NetFrameworkBase.System.Net.Sockets.MulticastOption.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.MulticastOption.Constructor; 
         
      --------------------------------------------------------------------------
      subtype IPv6MulticastOption is NetFrameworkBase.System.Net.Sockets.IPv6MulticastOption.Kind_Ptr;
      subtype IPv6MulticastOption_Array is NetFrameworkBase.System.Net.Sockets.IPv6MulticastOption.Kind_Array;
      
         function Constructor
         (
            group : NetFrameworkBase.System.Net.IPAddress.Kind_Ptr;
            ifindex : NetFrameworkBase.Int64
         )
         return NetFrameworkBase.System.Net.Sockets.IPv6MulticastOption.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.IPv6MulticastOption.Constructor; 
         
         function Constructor
         (
            group : NetFrameworkBase.System.Net.IPAddress.Kind_Ptr
         )
         return NetFrameworkBase.System.Net.Sockets.IPv6MulticastOption.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.IPv6MulticastOption.Constructor; 
         
      --------------------------------------------------------------------------
      subtype NetworkStream is NetFrameworkBase.System.Net.Sockets.NetworkStream.Kind_Ptr;
      subtype NetworkStream_Array is NetFrameworkBase.System.Net.Sockets.NetworkStream.Kind_Array;
      
         function Constructor
         (
            socket : NetFrameworkBase.System.Net.Sockets.Socket.Kind_Ptr
         )
         return NetFrameworkBase.System.Net.Sockets.NetworkStream.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.NetworkStream.Constructor; 
         
         function Constructor
         (
            socket : NetFrameworkBase.System.Net.Sockets.Socket.Kind_Ptr;
            ownsSocket : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.System.Net.Sockets.NetworkStream.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.NetworkStream.Constructor; 
         
         function Constructor
         (
            socket : NetFrameworkBase.System.Net.Sockets.Socket.Kind_Ptr;
            access_x : NetFrameworkBase.System.IO.FileAccess.Kind
         )
         return NetFrameworkBase.System.Net.Sockets.NetworkStream.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.NetworkStream.Constructor; 
         
         function Constructor
         (
            socket : NetFrameworkBase.System.Net.Sockets.Socket.Kind_Ptr;
            access_x : NetFrameworkBase.System.IO.FileAccess.Kind;
            ownsSocket : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.System.Net.Sockets.NetworkStream.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.NetworkStream.Constructor; 
         
      --------------------------------------------------------------------------
      subtype ProtocolFamily is NetFrameworkBase.System.Net.Sockets.ProtocolFamily.Kind;
      
      --------------------------------------------------------------------------
      subtype ProtocolType is NetFrameworkBase.System.Net.Sockets.ProtocolType.Kind;
      
      --------------------------------------------------------------------------
      subtype SelectMode is NetFrameworkBase.System.Net.Sockets.SelectMode.Kind;
      
      --------------------------------------------------------------------------
      subtype SocketInformationOptions is NetFrameworkBase.System.Net.Sockets.SocketInformationOptions.Kind;
      
      --------------------------------------------------------------------------
      subtype SocketInformation is NetFrameworkBase.System.Net.Sockets.SocketInformation.Kind_Ptr;
      subtype SocketInformation_Array is NetFrameworkBase.System.Net.Sockets.SocketInformation.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype Socket is NetFrameworkBase.System.Net.Sockets.Socket.Kind_Ptr;
      subtype Socket_Array is NetFrameworkBase.System.Net.Sockets.Socket.Kind_Array;
      
         function Constructor
         (
            socketType : NetFrameworkBase.System.Net.Sockets.SocketType.Kind;
            protocolType : NetFrameworkBase.System.Net.Sockets.ProtocolType.Kind
         )
         return NetFrameworkBase.System.Net.Sockets.Socket.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.Socket.Constructor; 
         
         function Constructor
         (
            addressFamily : NetFrameworkBase.System.Net.Sockets.AddressFamily.Kind;
            socketType : NetFrameworkBase.System.Net.Sockets.SocketType.Kind;
            protocolType : NetFrameworkBase.System.Net.Sockets.ProtocolType.Kind
         )
         return NetFrameworkBase.System.Net.Sockets.Socket.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.Socket.Constructor; 
         
         function Constructor
         (
            socketInformation : NetFrameworkBase.System.Net.Sockets.SocketInformation.Kind_Ptr
         )
         return NetFrameworkBase.System.Net.Sockets.Socket.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.Socket.Constructor; 
         
      --------------------------------------------------------------------------
      subtype SocketAsyncOperation is NetFrameworkBase.System.Net.Sockets.SocketAsyncOperation.Kind;
      
      --------------------------------------------------------------------------
      subtype SendPacketsElement is NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Kind_Ptr;
      subtype SendPacketsElement_Array is NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Kind_Array;
      
         function Constructor
         (
            filepath : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Constructor; 
         
         function Constructor
         (
            filepath : NetFrameworkBase.BSTR;
            offset : NetFrameworkBase.Int32;
            count : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Constructor; 
         
         function Constructor
         (
            filepath : NetFrameworkBase.BSTR;
            offset : NetFrameworkBase.Int32;
            count : NetFrameworkBase.Int32;
            endOfPacket : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Constructor; 
         
         function Constructor
         (
            buffer : NetFrameworkBase.Byte_Array
         )
         return NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Constructor; 
         
         function Constructor
         (
            buffer : NetFrameworkBase.Byte_Array;
            offset : NetFrameworkBase.Int32;
            count : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Constructor; 
         
         function Constructor
         (
            buffer : NetFrameworkBase.Byte_Array;
            offset : NetFrameworkBase.Int32;
            count : NetFrameworkBase.Int32;
            endOfPacket : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.SendPacketsElement.Constructor; 
         
      --------------------------------------------------------------------------
      subtype SocketClientAccessPolicyProtocol is NetFrameworkBase.System.Net.Sockets.SocketClientAccessPolicyProtocol.Kind;
      
      --------------------------------------------------------------------------
      subtype SocketAsyncEventArgs is NetFrameworkBase.System.Net.Sockets.SocketAsyncEventArgs.Kind_Ptr;
      subtype SocketAsyncEventArgs_Array is NetFrameworkBase.System.Net.Sockets.SocketAsyncEventArgs.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Net.Sockets.SocketAsyncEventArgs.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.SocketAsyncEventArgs.Constructor;
         
      --------------------------------------------------------------------------
      subtype SocketError is NetFrameworkBase.System.Net.Sockets.SocketError.Kind;
      
      --------------------------------------------------------------------------
      subtype SocketFlags is NetFrameworkBase.System.Net.Sockets.SocketFlags.Kind;
      
      --------------------------------------------------------------------------
      subtype SocketOptionLevel is NetFrameworkBase.System.Net.Sockets.SocketOptionLevel.Kind;
      
      --------------------------------------------------------------------------
      subtype SocketOptionName is NetFrameworkBase.System.Net.Sockets.SocketOptionName.Kind;
      
      --------------------------------------------------------------------------
      subtype SocketShutdown is NetFrameworkBase.System.Net.Sockets.SocketShutdown.Kind;
      
      --------------------------------------------------------------------------
      subtype SocketReceiveFromResult is NetFrameworkBase.System.Net.Sockets.SocketReceiveFromResult.Kind_Ptr;
      subtype SocketReceiveFromResult_Array is NetFrameworkBase.System.Net.Sockets.SocketReceiveFromResult.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype SocketReceiveMessageFromResult is NetFrameworkBase.System.Net.Sockets.SocketReceiveMessageFromResult.Kind_Ptr;
      subtype SocketReceiveMessageFromResult_Array is NetFrameworkBase.System.Net.Sockets.SocketReceiveMessageFromResult.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype SocketTaskExtensions is NetFrameworkBase.System.Net.Sockets.SocketTaskExtensions.Kind_Ptr;
      subtype SocketTaskExtensions_Array is NetFrameworkBase.System.Net.Sockets.SocketTaskExtensions.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype SocketType is NetFrameworkBase.System.Net.Sockets.SocketType.Kind;
      
      --------------------------------------------------------------------------
      subtype TcpClient is NetFrameworkBase.System.Net.Sockets.TcpClient.Kind_Ptr;
      subtype TcpClient_Array is NetFrameworkBase.System.Net.Sockets.TcpClient.Kind_Array;
      
         function Constructor
         (
            localEP : NetFrameworkBase.System.Net.IPEndPoint.Kind_Ptr
         )
         return NetFrameworkBase.System.Net.Sockets.TcpClient.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.TcpClient.Constructor; 
         
         function Constructor return NetFrameworkBase.System.Net.Sockets.TcpClient.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.TcpClient.Constructor;
         
         function Constructor
         (
            family : NetFrameworkBase.System.Net.Sockets.AddressFamily.Kind
         )
         return NetFrameworkBase.System.Net.Sockets.TcpClient.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.TcpClient.Constructor; 
         
         function Constructor
         (
            hostname : NetFrameworkBase.BSTR;
            port : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.Net.Sockets.TcpClient.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.TcpClient.Constructor; 
         
      --------------------------------------------------------------------------
      subtype TcpListener is NetFrameworkBase.System.Net.Sockets.TcpListener.Kind_Ptr;
      subtype TcpListener_Array is NetFrameworkBase.System.Net.Sockets.TcpListener.Kind_Array;
      
         function Constructor
         (
            localEP : NetFrameworkBase.System.Net.IPEndPoint.Kind_Ptr
         )
         return NetFrameworkBase.System.Net.Sockets.TcpListener.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.TcpListener.Constructor; 
         
         function Constructor
         (
            localaddr : NetFrameworkBase.System.Net.IPAddress.Kind_Ptr;
            port : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.Net.Sockets.TcpListener.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.TcpListener.Constructor; 
         
         function Constructor
         (
            port : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.Net.Sockets.TcpListener.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.TcpListener.Constructor; 
         
      --------------------------------------------------------------------------
      subtype TransmitFileOptions is NetFrameworkBase.System.Net.Sockets.TransmitFileOptions.Kind;
      
      --------------------------------------------------------------------------
      subtype UdpClient is NetFrameworkBase.System.Net.Sockets.UdpClient.Kind_Ptr;
      subtype UdpClient_Array is NetFrameworkBase.System.Net.Sockets.UdpClient.Kind_Array;
      
         function Constructor return NetFrameworkBase.System.Net.Sockets.UdpClient.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.UdpClient.Constructor;
         
         function Constructor
         (
            family : NetFrameworkBase.System.Net.Sockets.AddressFamily.Kind
         )
         return NetFrameworkBase.System.Net.Sockets.UdpClient.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.UdpClient.Constructor; 
         
         function Constructor
         (
            port : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.Net.Sockets.UdpClient.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.UdpClient.Constructor; 
         
         function Constructor
         (
            port : NetFrameworkBase.Int32;
            family : NetFrameworkBase.System.Net.Sockets.AddressFamily.Kind
         )
         return NetFrameworkBase.System.Net.Sockets.UdpClient.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.UdpClient.Constructor; 
         
         function Constructor
         (
            localEP : NetFrameworkBase.System.Net.IPEndPoint.Kind_Ptr
         )
         return NetFrameworkBase.System.Net.Sockets.UdpClient.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.UdpClient.Constructor; 
         
         function Constructor
         (
            hostname : NetFrameworkBase.BSTR;
            port : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.Net.Sockets.UdpClient.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.UdpClient.Constructor; 
         
      --------------------------------------------------------------------------
      subtype UdpReceiveResult is NetFrameworkBase.System.Net.Sockets.UdpReceiveResult.Kind_Ptr;
      subtype UdpReceiveResult_Array is NetFrameworkBase.System.Net.Sockets.UdpReceiveResult.Kind_Array;
      
         function Constructor
         (
            buffer : NetFrameworkBase.Byte_Array;
            remoteEndPoint : NetFrameworkBase.System.Net.IPEndPoint.Kind_Ptr
         )
         return NetFrameworkBase.System.Net.Sockets.UdpReceiveResult.Kind_Ptr renames NetFrameworkBase.System.Net.Sockets.UdpReceiveResult.Constructor; 
         
      --------------------------------------------------------------------------
      subtype IPPacketInformation is NetFrameworkBase.System.Net.Sockets.IPPacketInformation.Kind_Ptr;
      subtype IPPacketInformation_Array is NetFrameworkBase.System.Net.Sockets.IPPacketInformation.Kind_Array;
      
   
end;
