--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.System.IO.Ports.Handshake;
with NetFrameworkBase.System.IO.Ports.Parity;
with NetFrameworkBase.System.IO.Ports.SerialError;
with NetFrameworkBase.System.IO.Ports.SerialErrorReceivedEventArgs;
with NetFrameworkBase.System.IO.Ports.SerialErrorReceivedEventHandler;
with NetFrameworkBase.System.IO.Ports.SerialPinChange;
with NetFrameworkBase.System.IO.Ports.SerialPinChangedEventArgs;
with NetFrameworkBase.System.IO.Ports.SerialPinChangedEventHandler;
with NetFrameworkBase.System.IO.Ports.SerialPort;
with NetFrameworkBase.System.IO.Ports.SerialData;
with NetFrameworkBase.System.IO.Ports.SerialDataReceivedEventArgs;
with NetFrameworkBase.System.IO.Ports.SerialDataReceivedEventHandler;
with NetFrameworkBase.System.IO.Ports.StopBits;
with NetFrameworkBase.System.Object;
with NetFrameworkBase.System.ComponentModel.IContainer;
--------------------------------------------------------------------------------
package NetFramework.System.IO.Ports is
   
      --------------------------------------------------------------------------
      subtype Handshake is NetFrameworkBase.System.IO.Ports.Handshake.Kind;
      
      --------------------------------------------------------------------------
      subtype Parity is NetFrameworkBase.System.IO.Ports.Parity.Kind;
      
      --------------------------------------------------------------------------
      subtype SerialError is NetFrameworkBase.System.IO.Ports.SerialError.Kind;
      
      --------------------------------------------------------------------------
      subtype SerialErrorReceivedEventArgs is NetFrameworkBase.System.IO.Ports.SerialErrorReceivedEventArgs.Kind_Ptr;
      subtype SerialErrorReceivedEventArgs_Array is NetFrameworkBase.System.IO.Ports.SerialErrorReceivedEventArgs.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype SerialErrorReceivedEventHandler is NetFrameworkBase.System.IO.Ports.SerialErrorReceivedEventHandler.Kind_Ptr;
      subtype SerialErrorReceivedEventHandler_Array is NetFrameworkBase.System.IO.Ports.SerialErrorReceivedEventHandler.Kind_Array;
      
         function Constructor (Callback : NetFrameworkBase.System.IO.Ports.SerialErrorReceivedEventHandler.Kind_Callback) return NetFrameworkBase.System.IO.Ports.SerialErrorReceivedEventHandler.Kind_Ptr renames NetFrameworkBase.System.IO.Ports.SerialErrorReceivedEventHandler.Constructor;
      
      --------------------------------------------------------------------------
      subtype SerialPinChange is NetFrameworkBase.System.IO.Ports.SerialPinChange.Kind;
      
      --------------------------------------------------------------------------
      subtype SerialPinChangedEventArgs is NetFrameworkBase.System.IO.Ports.SerialPinChangedEventArgs.Kind_Ptr;
      subtype SerialPinChangedEventArgs_Array is NetFrameworkBase.System.IO.Ports.SerialPinChangedEventArgs.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype SerialPinChangedEventHandler is NetFrameworkBase.System.IO.Ports.SerialPinChangedEventHandler.Kind_Ptr;
      subtype SerialPinChangedEventHandler_Array is NetFrameworkBase.System.IO.Ports.SerialPinChangedEventHandler.Kind_Array;
      
         function Constructor (Callback : NetFrameworkBase.System.IO.Ports.SerialPinChangedEventHandler.Kind_Callback) return NetFrameworkBase.System.IO.Ports.SerialPinChangedEventHandler.Kind_Ptr renames NetFrameworkBase.System.IO.Ports.SerialPinChangedEventHandler.Constructor;
      
      --------------------------------------------------------------------------
      subtype SerialPort is NetFrameworkBase.System.IO.Ports.SerialPort.Kind_Ptr;
      subtype SerialPort_Array is NetFrameworkBase.System.IO.Ports.SerialPort.Kind_Array;
      
         function Constructor
         (
            container : NetFrameworkBase.System.ComponentModel.IContainer.Kind_Ptr
         )
         return NetFrameworkBase.System.IO.Ports.SerialPort.Kind_Ptr renames NetFrameworkBase.System.IO.Ports.SerialPort.Constructor; 
         
         function Constructor return NetFrameworkBase.System.IO.Ports.SerialPort.Kind_Ptr renames NetFrameworkBase.System.IO.Ports.SerialPort.Constructor;
         
         function Constructor
         (
            portName : NetFrameworkBase.BSTR
         )
         return NetFrameworkBase.System.IO.Ports.SerialPort.Kind_Ptr renames NetFrameworkBase.System.IO.Ports.SerialPort.Constructor; 
         
         function Constructor
         (
            portName : NetFrameworkBase.BSTR;
            baudRate : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.IO.Ports.SerialPort.Kind_Ptr renames NetFrameworkBase.System.IO.Ports.SerialPort.Constructor; 
         
         function Constructor
         (
            portName : NetFrameworkBase.BSTR;
            baudRate : NetFrameworkBase.Int32;
            parity : NetFrameworkBase.System.IO.Ports.Parity.Kind
         )
         return NetFrameworkBase.System.IO.Ports.SerialPort.Kind_Ptr renames NetFrameworkBase.System.IO.Ports.SerialPort.Constructor; 
         
         function Constructor
         (
            portName : NetFrameworkBase.BSTR;
            baudRate : NetFrameworkBase.Int32;
            parity : NetFrameworkBase.System.IO.Ports.Parity.Kind;
            dataBits : NetFrameworkBase.Int32
         )
         return NetFrameworkBase.System.IO.Ports.SerialPort.Kind_Ptr renames NetFrameworkBase.System.IO.Ports.SerialPort.Constructor; 
         
         function Constructor
         (
            portName : NetFrameworkBase.BSTR;
            baudRate : NetFrameworkBase.Int32;
            parity : NetFrameworkBase.System.IO.Ports.Parity.Kind;
            dataBits : NetFrameworkBase.Int32;
            stopBits : NetFrameworkBase.System.IO.Ports.StopBits.Kind
         )
         return NetFrameworkBase.System.IO.Ports.SerialPort.Kind_Ptr renames NetFrameworkBase.System.IO.Ports.SerialPort.Constructor; 
         
      --------------------------------------------------------------------------
      subtype SerialData is NetFrameworkBase.System.IO.Ports.SerialData.Kind;
      
      --------------------------------------------------------------------------
      subtype SerialDataReceivedEventArgs is NetFrameworkBase.System.IO.Ports.SerialDataReceivedEventArgs.Kind_Ptr;
      subtype SerialDataReceivedEventArgs_Array is NetFrameworkBase.System.IO.Ports.SerialDataReceivedEventArgs.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype SerialDataReceivedEventHandler is NetFrameworkBase.System.IO.Ports.SerialDataReceivedEventHandler.Kind_Ptr;
      subtype SerialDataReceivedEventHandler_Array is NetFrameworkBase.System.IO.Ports.SerialDataReceivedEventHandler.Kind_Array;
      
         function Constructor (Callback : NetFrameworkBase.System.IO.Ports.SerialDataReceivedEventHandler.Kind_Callback) return NetFrameworkBase.System.IO.Ports.SerialDataReceivedEventHandler.Kind_Ptr renames NetFrameworkBase.System.IO.Ports.SerialDataReceivedEventHandler.Constructor;
      
      --------------------------------------------------------------------------
      subtype StopBits is NetFrameworkBase.System.IO.Ports.StopBits.Kind;
      
   
end;
