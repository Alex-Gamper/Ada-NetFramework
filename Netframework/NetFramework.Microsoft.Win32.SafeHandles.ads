--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2019 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-NetFramework                                                        --
--    Version   : 1.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeFileHandle;
with NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeRegistryHandle;
with NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeWaitHandle;
with NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid;
with NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid;
with NetFrameworkBase.Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid;
with NetFrameworkBase.Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid;
with NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeAccessTokenHandle;
--------------------------------------------------------------------------------
package NetFramework.Microsoft.Win32.SafeHandles is
   
      --------------------------------------------------------------------------
      subtype SafeFileHandle is NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeFileHandle.Kind_Ptr;
      subtype SafeFileHandle_Array is NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeFileHandle.Kind_Array;
      
         function Constructor
         (
            preexistingHandle : NetFrameworkBase.IntPtr;
            ownsHandle : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeFileHandle.Kind_Ptr renames NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeFileHandle.Constructor; 
         
      --------------------------------------------------------------------------
      subtype SafeRegistryHandle is NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeRegistryHandle.Kind_Ptr;
      subtype SafeRegistryHandle_Array is NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeRegistryHandle.Kind_Array;
      
         function Constructor
         (
            preexistingHandle : NetFrameworkBase.IntPtr;
            ownsHandle : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeRegistryHandle.Kind_Ptr renames NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeRegistryHandle.Constructor; 
         
      --------------------------------------------------------------------------
      subtype SafeWaitHandle is NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeWaitHandle.Kind_Ptr;
      subtype SafeWaitHandle_Array is NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeWaitHandle.Kind_Array;
      
         function Constructor
         (
            existingHandle : NetFrameworkBase.IntPtr;
            ownsHandle : NetFrameworkBase.Boolean
         )
         return NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeWaitHandle.Kind_Ptr renames NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeWaitHandle.Constructor; 
         
      --------------------------------------------------------------------------
      subtype SafeHandleZeroOrMinusOneIsInvalid is NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.Kind_Ptr;
      subtype SafeHandleZeroOrMinusOneIsInvalid_Array is NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype SafeHandleMinusOneIsInvalid is NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.Kind_Ptr;
      subtype SafeHandleMinusOneIsInvalid_Array is NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype CriticalHandleZeroOrMinusOneIsInvalid is NetFrameworkBase.Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.Kind_Ptr;
      subtype CriticalHandleZeroOrMinusOneIsInvalid_Array is NetFrameworkBase.Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype CriticalHandleMinusOneIsInvalid is NetFrameworkBase.Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.Kind_Ptr;
      subtype CriticalHandleMinusOneIsInvalid_Array is NetFrameworkBase.Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.Kind_Array;
      
      --------------------------------------------------------------------------
      subtype SafeAccessTokenHandle is NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.Kind_Ptr;
      subtype SafeAccessTokenHandle_Array is NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.Kind_Array;
      
         function Constructor
         (
            handle : NetFrameworkBase.IntPtr
         )
         return NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.Kind_Ptr renames NetFrameworkBase.Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.Constructor; 
         
   
end;
